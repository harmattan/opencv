Description: Upstream changes introduced in version 1:1.4.1-5harmattan1
 This patch has been created by dpkg-source during the package build.
 Here's the last changelog entry, hopefully it gives details on why
 those changes were made:
 .
 python-numpy (1:1.4.1-5harmattan1) unstable; urgency=low
 .
   * Package for Meego/Harmattan 1.2
   * Remove dependency on python-matplotlib, circularly depends on python-numpy
   * Added path to Atlas libraries and dependencies on Atlas packages
   * Delete *.pyo files on clean
   * Override dh_shlibdeps as linked libraries for blas and lapack break it
 .
 The person named in the Author field signed this changelog entry.
Author: Oliver Hookins <ohookins@gmail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- python-numpy-1.4.1.orig/doc/source/conf.py
+++ python-numpy-1.4.1/doc/source/conf.py
@@ -18,8 +18,7 @@ sys.path.insert(0, os.path.abspath('../s
 
 extensions = ['sphinx.ext.autodoc', 'sphinx.ext.pngmath', 'numpydoc',
               'sphinx.ext.intersphinx', 'sphinx.ext.coverage',
-              'sphinx.ext.doctest',
-              'plot_directive']
+              'sphinx.ext.doctest']
 
 if sphinx.__version__ >= "0.7":
     extensions.append('sphinx.ext.autosummary')
@@ -216,7 +215,7 @@ intersphinx_mapping = {'http://docs.pyth
 phantom_import_file = 'dump.xml'
 
 # Make numpydoc to generate plots for example sections
-numpydoc_use_plots = True
+numpydoc_use_plots = False
 
 # -----------------------------------------------------------------------------
 # Autosummary
@@ -256,19 +255,23 @@ plot_formats = [('png', 100), 'pdf']
 import math
 phi = (math.sqrt(5) + 1)/2
 
-import matplotlib
-matplotlib.rcParams.update({
-    'font.size': 8,
-    'axes.titlesize': 8,
-    'axes.labelsize': 8,
-    'xtick.labelsize': 8,
-    'ytick.labelsize': 8,
-    'legend.fontsize': 8,
-    'figure.figsize': (3*phi, 3),
-    'figure.subplot.bottom': 0.2,
-    'figure.subplot.left': 0.2,
-    'figure.subplot.right': 0.9,
-    'figure.subplot.top': 0.85,
-    'figure.subplot.wspace': 0.4,
-    'text.usetex': False,
-})
+try:
+    import matplotlib
+except ImportError:
+    sys.stderr.write('matplotlib is not available; disabling plots\n')
+else:
+    matplotlib.rcParams.update({
+        'font.size': 8,
+        'axes.titlesize': 8,
+        'axes.labelsize': 8,
+        'xtick.labelsize': 8,
+        'ytick.labelsize': 8,
+        'legend.fontsize': 8,
+        'figure.figsize': (3*phi, 3),
+        'figure.subplot.bottom': 0.2,
+        'figure.subplot.left': 0.2,
+        'figure.subplot.right': 0.9,
+        'figure.subplot.top': 0.85,
+        'figure.subplot.wspace': 0.4,
+        'text.usetex': False,
+    })
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.chararray.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.chararray
+=================================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autoclass:: chararray
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.byteswap.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.byteswap
+=============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.byteswap
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.conjugate.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.conjugate
+==============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.conjugate
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.nextafter.rst
@@ -0,0 +1,6 @@
+numpy.nextafter
+===============
+
+.. currentmodule:: numpy
+
+.. autofunction:: nextafter
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.distutils.misc_util.cyan_text.rst
@@ -0,0 +1,6 @@
+numpy.distutils.misc_util.cyan_text
+===================================
+
+.. currentmodule:: numpy.distutils.misc_util
+
+.. autofunction:: cyan_text
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.array.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.array
+=============================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: array
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.round.rst
@@ -0,0 +1,6 @@
+numpy.ma.round
+==============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: round
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.size.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.size
+==================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: ndarray.size
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.get_fill_value.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.get_fill_value
+===================================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.get_fill_value
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.size.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.size
+=========================
+
+.. currentmodule:: numpy.ma
+
+.. autoattribute:: MaskedArray.size
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__mod__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__mod__
+============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__mod__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.distutils.misc_util.get_cmd.rst
@@ -0,0 +1,6 @@
+numpy.distutils.misc_util.get_cmd
+=================================
+
+.. currentmodule:: numpy.distutils.misc_util
+
+.. autofunction:: get_cmd
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.masked_all.rst
@@ -0,0 +1,6 @@
+numpy.ma.masked_all
+===================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: masked_all
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.distutils.misc_util.blue_text.rst
@@ -0,0 +1,6 @@
+numpy.distutils.misc_util.blue_text
+===================================
+
+.. currentmodule:: numpy.distutils.misc_util
+
+.. autofunction:: blue_text
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ptp.rst
@@ -0,0 +1,6 @@
+numpy.ptp
+=========
+
+.. currentmodule:: numpy
+
+.. autofunction:: ptp
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.hstack.rst
@@ -0,0 +1,6 @@
+numpy.ma.hstack
+===============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: hstack
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.linspace.rst
@@ -0,0 +1,6 @@
+numpy.linspace
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: linspace
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.recarray.rst
@@ -0,0 +1,6 @@
+numpy.recarray
+==============
+
+.. currentmodule:: numpy
+
+.. autoclass:: recarray
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.log2.rst
@@ -0,0 +1,6 @@
+numpy.log2
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: log2
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.tofile.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.tofile
+====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.tofile
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.soften_mask.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.soften_mask
+================================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.soften_mask
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.exp2.rst
@@ -0,0 +1,6 @@
+numpy.exp2
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: exp2
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.fft.irfft.rst
@@ -0,0 +1,6 @@
+numpy.fft.irfft
+===============
+
+.. currentmodule:: numpy.fft
+
+.. autofunction:: irfft
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.unpackbits.rst
@@ -0,0 +1,6 @@
+numpy.unpackbits
+================
+
+.. currentmodule:: numpy
+
+.. autofunction:: unpackbits
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.compress_cols.rst
@@ -0,0 +1,6 @@
+numpy.ma.compress_cols
+======================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: compress_cols
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.notmasked_edges.rst
@@ -0,0 +1,6 @@
+numpy.ma.notmasked_edges
+========================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: notmasked_edges
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.row_stack.rst
@@ -0,0 +1,6 @@
+numpy.ma.row_stack
+==================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: row_stack
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.mintypecode.rst
@@ -0,0 +1,6 @@
+numpy.mintypecode
+=================
+
+.. currentmodule:: numpy
+
+.. autofunction:: mintypecode
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.npv.rst
@@ -0,0 +1,6 @@
+numpy.npv
+=========
+
+.. currentmodule:: numpy
+
+.. autofunction:: npv
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.fv.rst
@@ -0,0 +1,6 @@
+numpy.fv
+========
+
+.. currentmodule:: numpy
+
+.. autofunction:: fv
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.vstack.rst
@@ -0,0 +1,6 @@
+numpy.ma.vstack
+===============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: vstack
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.linalg.eig.rst
@@ -0,0 +1,6 @@
+numpy.linalg.eig
+================
+
+.. currentmodule:: numpy.linalg
+
+.. autofunction:: eig
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.resize.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.resize
+===========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.resize
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.zfill.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.zfill
+=============================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: zfill
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__itruediv__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__itruediv__
+==========================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__itruediv__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.fft.fftn.rst
@@ -0,0 +1,6 @@
+numpy.fft.fftn
+==============
+
+.. currentmodule:: numpy.fft
+
+.. autofunction:: fftn
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.translate.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.translate
+=================================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: translate
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.set_printoptions.rst
@@ -0,0 +1,6 @@
+numpy.set_printoptions
+======================
+
+.. currentmodule:: numpy
+
+.. autofunction:: set_printoptions
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.radians.rst
@@ -0,0 +1,6 @@
+numpy.radians
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: radians
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ogrid.rst
@@ -0,0 +1,6 @@
+numpy.ogrid
+===========
+
+.. currentmodule:: numpy
+
+.. autofunction:: ogrid
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.nonzero.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.nonzero
+=====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.nonzero
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.masked_outside.rst
@@ -0,0 +1,6 @@
+numpy.ma.masked_outside
+=======================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: masked_outside
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.flatten.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.flatten
+============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.flatten
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__ror__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__ror__
+============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__ror__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.fill.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.fill
+==================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.fill
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__hex__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__hex__
+=====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__hex__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.tril_indices_from.rst
@@ -0,0 +1,6 @@
+numpy.tril_indices_from
+=======================
+
+.. currentmodule:: numpy
+
+.. autofunction:: tril_indices_from
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.left_shift.rst
@@ -0,0 +1,6 @@
+numpy.left_shift
+================
+
+.. currentmodule:: numpy
+
+.. autofunction:: left_shift
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.standard_exponential.rst
@@ -0,0 +1,6 @@
+numpy.random.standard_exponential
+=================================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: standard_exponential
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.greater_equal.rst
@@ -0,0 +1,6 @@
+numpy.greater_equal
+===================
+
+.. currentmodule:: numpy
+
+.. autofunction:: greater_equal
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.getmask.rst
@@ -0,0 +1,6 @@
+numpy.ma.getmask
+================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: getmask
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.generic.__array_interface__.rst
@@ -0,0 +1,6 @@
+numpy.generic.__array_interface__
+=================================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: generic.__array_interface__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.isupper.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.isupper
+===============================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: isupper
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.array.rst
@@ -0,0 +1,6 @@
+numpy.array
+===========
+
+.. currentmodule:: numpy
+
+.. autofunction:: array
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.less_equal.rst
@@ -0,0 +1,6 @@
+numpy.less_equal
+================
+
+.. currentmodule:: numpy
+
+.. autofunction:: less_equal
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.dumps.rst
@@ -0,0 +1,6 @@
+numpy.ma.dumps
+==============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: dumps
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.average.rst
@@ -0,0 +1,6 @@
+numpy.average
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: average
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.flags.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.flags
+===================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: ndarray.flags
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ediff1d.rst
@@ -0,0 +1,6 @@
+numpy.ediff1d
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: ediff1d
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.tensordot.rst
@@ -0,0 +1,6 @@
+numpy.tensordot
+===============
+
+.. currentmodule:: numpy
+
+.. autofunction:: tensordot
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__contains__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__contains__
+==========================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__contains__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.tostring.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.tostring
+=============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.tostring
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.s_.rst
@@ -0,0 +1,6 @@
+numpy.s_
+========
+
+.. currentmodule:: numpy
+
+.. autofunction:: s_
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.typename.rst
@@ -0,0 +1,6 @@
+numpy.typename
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: typename
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.masked_array.rst
@@ -0,0 +1,6 @@
+numpy.ma.masked_array
+=====================
+
+.. currentmodule:: numpy.ma
+
+.. autoclass:: masked_array
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__ilshift__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__ilshift__
+=========================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__ilshift__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.argwhere.rst
@@ -0,0 +1,6 @@
+numpy.argwhere
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: argwhere
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.mask_rows.rst
@@ -0,0 +1,6 @@
+numpy.ma.mask_rows
+==================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: mask_rows
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__ne__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__ne__
+===========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__ne__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__abs__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__abs__
+============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__abs__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.rjust.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.rjust
+=============================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: rjust
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.fft.rfft.rst
@@ -0,0 +1,6 @@
+numpy.fft.rfft
+==============
+
+.. currentmodule:: numpy.fft
+
+.. autofunction:: rfft
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.expm1.rst
@@ -0,0 +1,6 @@
+numpy.expm1
+===========
+
+.. currentmodule:: numpy
+
+.. autofunction:: expm1
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.memmap.rst
@@ -0,0 +1,6 @@
+numpy.memmap
+============
+
+.. currentmodule:: numpy
+
+.. autoclass:: memmap
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.generic.T.rst
@@ -0,0 +1,6 @@
+numpy.generic.T
+===============
+
+.. currentmodule:: numpy
+
+.. autoattribute:: generic.T
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.sqrt.rst
@@ -0,0 +1,6 @@
+numpy.sqrt
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: sqrt
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.masked_where.rst
@@ -0,0 +1,6 @@
+numpy.ma.masked_where
+=====================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: masked_where
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.broadcast_arrays.rst
@@ -0,0 +1,6 @@
+numpy.broadcast_arrays
+======================
+
+.. currentmodule:: numpy
+
+.. autofunction:: broadcast_arrays
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.around.rst
@@ -0,0 +1,6 @@
+numpy.around
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: around
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.sum.rst
@@ -0,0 +1,6 @@
+numpy.ma.sum
+============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: sum
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.arcsin.rst
@@ -0,0 +1,6 @@
+numpy.arcsin
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: arcsin
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__setstate__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__setstate__
+=================================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__setstate__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.random_sample.rst
@@ -0,0 +1,6 @@
+numpy.random.random_sample
+==========================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: random_sample
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__pow__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__pow__
+============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__pow__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.recordmask.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.recordmask
+===============================
+
+.. currentmodule:: numpy.ma
+
+.. autoattribute:: MaskedArray.recordmask
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.sort.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.sort
+==================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.sort
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__abs__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__abs__
+=====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__abs__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__ipow__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__ipow__
+=============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__ipow__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.set_string_function.rst
@@ -0,0 +1,6 @@
+numpy.set_string_function
+=========================
+
+.. currentmodule:: numpy
+
+.. autofunction:: set_string_function
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.intersect1d.rst
@@ -0,0 +1,6 @@
+numpy.intersect1d
+=================
+
+.. currentmodule:: numpy
+
+.. autofunction:: intersect1d
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.mask_or.rst
@@ -0,0 +1,6 @@
+numpy.ma.mask_or
+================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: mask_or
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.isfinite.rst
@@ -0,0 +1,6 @@
+numpy.isfinite
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: isfinite
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.tile.rst
@@ -0,0 +1,6 @@
+numpy.tile
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: tile
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.default_fill_value.rst
@@ -0,0 +1,6 @@
+numpy.ma.default_fill_value
+===========================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: default_fill_value
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.repeat.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.repeat
+===========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.repeat
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__rmul__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__rmul__
+=============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__rmul__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.bitwise_xor.rst
@@ -0,0 +1,6 @@
+numpy.bitwise_xor
+=================
+
+.. currentmodule:: numpy
+
+.. autofunction:: bitwise_xor
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__xor__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__xor__
+============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__xor__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.rot90.rst
@@ -0,0 +1,6 @@
+numpy.rot90
+===========
+
+.. currentmodule:: numpy
+
+.. autofunction:: rot90
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.compress_rows.rst
@@ -0,0 +1,6 @@
+numpy.ma.compress_rows
+======================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: compress_rows
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.fft.hfft.rst
@@ -0,0 +1,6 @@
+numpy.fft.hfft
+==============
+
+.. currentmodule:: numpy.fft
+
+.. autofunction:: hfft
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__long__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__long__
+======================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__long__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.lognormal.rst
@@ -0,0 +1,6 @@
+numpy.random.lognormal
+======================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: lognormal
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.ptp.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.ptp
+=================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.ptp
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.item.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.item
+=========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.item
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.identity.rst
@@ -0,0 +1,6 @@
+numpy.ma.identity
+=================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: identity
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.split.rst
@@ -0,0 +1,6 @@
+numpy.split
+===========
+
+.. currentmodule:: numpy
+
+.. autofunction:: split
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.generic.__array__.rst
@@ -0,0 +1,6 @@
+numpy.generic.__array__
+=======================
+
+.. currentmodule:: numpy
+
+.. automethod:: generic.__array__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.capitalize.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.capitalize
+==================================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: capitalize
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.bmat.rst
@@ -0,0 +1,6 @@
+numpy.bmat
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: bmat
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.sinc.rst
@@ -0,0 +1,6 @@
+numpy.sinc
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: sinc
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.logical_or.rst
@@ -0,0 +1,6 @@
+numpy.logical_or
+================
+
+.. currentmodule:: numpy
+
+.. autofunction:: logical_or
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.all.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.all
+=================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.all
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__setitem__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__setitem__
+================================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__setitem__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.asmatrix.rst
@@ -0,0 +1,6 @@
+numpy.asmatrix
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: asmatrix
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.max.rst
@@ -0,0 +1,6 @@
+numpy.ma.max
+============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: max
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.getbuffer.rst
@@ -0,0 +1,6 @@
+numpy.getbuffer
+===============
+
+.. currentmodule:: numpy
+
+.. autofunction:: getbuffer
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.getmaskarray.rst
@@ -0,0 +1,6 @@
+numpy.ma.getmaskarray
+=====================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: getmaskarray
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.set_state.rst
@@ -0,0 +1,6 @@
+numpy.random.set_state
+======================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: set_state
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.searchsorted.rst
@@ -0,0 +1,6 @@
+numpy.searchsorted
+==================
+
+.. currentmodule:: numpy
+
+.. autofunction:: searchsorted
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.distutils.exec_command.rst
@@ -0,0 +1,6 @@
+numpy.distutils.exec_command
+============================
+
+.. currentmodule:: numpy.distutils
+
+.. automodule:: exec_command
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.shape.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.shape
+==========================
+
+.. currentmodule:: numpy.ma
+
+.. autoattribute:: MaskedArray.shape
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.fill_value.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.fill_value
+===============================
+
+.. currentmodule:: numpy.ma
+
+.. autoattribute:: MaskedArray.fill_value
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.distutils.cpuinfo.cpu.rst
@@ -0,0 +1,6 @@
+numpy.distutils.cpuinfo.cpu
+===========================
+
+.. currentmodule:: numpy.distutils.cpuinfo
+
+.. autofunction:: cpu
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.dumps.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.dumps
+===================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.dumps
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.lexsort.rst
@@ -0,0 +1,6 @@
+numpy.lexsort
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: lexsort
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.var.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.var
+=================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.var
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__rfloordiv__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__rfloordiv__
+==================================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__rfloordiv__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.fft.fft.rst
@@ -0,0 +1,6 @@
+numpy.fft.fft
+=============
+
+.. currentmodule:: numpy.fft
+
+.. autofunction:: fft
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__lt__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__lt__
+===========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__lt__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.frombuffer.rst
@@ -0,0 +1,6 @@
+numpy.ma.frombuffer
+===================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: frombuffer
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.generic.ndim.rst
@@ -0,0 +1,6 @@
+numpy.generic.ndim
+==================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: generic.ndim
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.isdecimal.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.isdecimal
+=================================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: isdecimal
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.compress_rowcols.rst
@@ -0,0 +1,6 @@
+numpy.ma.compress_rowcols
+=========================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: compress_rowcols
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.testing.assert_string_equal.rst
@@ -0,0 +1,6 @@
+numpy.testing.assert_string_equal
+=================================
+
+.. currentmodule:: numpy.testing
+
+.. autofunction:: assert_string_equal
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__add__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__add__
+=====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__add__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.normal.rst
@@ -0,0 +1,6 @@
+numpy.random.normal
+===================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: normal
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.records.fromrecords.rst
@@ -0,0 +1,6 @@
+numpy.core.records.fromrecords
+==============================
+
+.. currentmodule:: numpy.core.records
+
+.. autofunction:: fromrecords
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.equal.rst
@@ -0,0 +1,6 @@
+numpy.equal
+===========
+
+.. currentmodule:: numpy
+
+.. autofunction:: equal
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__repr__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__repr__
+=============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__repr__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.distutils.misc_util.dict_append.rst
@@ -0,0 +1,6 @@
+numpy.distutils.misc_util.dict_append
+=====================================
+
+.. currentmodule:: numpy.distutils.misc_util
+
+.. autofunction:: dict_append
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.mtrand.RandomState.rst
@@ -0,0 +1,6 @@
+numpy.random.mtrand.RandomState
+===============================
+
+.. currentmodule:: numpy.random.mtrand
+
+.. autoclass:: RandomState
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.islower.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.islower
+===============================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: islower
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.flat.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.flat
+==================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: ndarray.flat
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.tri.rst
@@ -0,0 +1,6 @@
+numpy.tri
+=========
+
+.. currentmodule:: numpy
+
+.. autofunction:: tri
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.sum.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.sum
+=================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.sum
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.source.rst
@@ -0,0 +1,6 @@
+numpy.source
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: source
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.greater.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.greater
+===============================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: greater
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.concatenate.rst
@@ -0,0 +1,6 @@
+numpy.concatenate
+=================
+
+.. currentmodule:: numpy
+
+.. autofunction:: concatenate
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.asarray.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.asarray
+===============================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: asarray
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__radd__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__radd__
+=============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__radd__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__eq__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__eq__
+===========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__eq__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.argmin.rst
@@ -0,0 +1,6 @@
+numpy.ma.argmin
+===============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: argmin
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.squeeze.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.squeeze
+=====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.squeeze
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.anom.rst
@@ -0,0 +1,6 @@
+numpy.ma.anom
+=============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: anom
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__array_wrap__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__array_wrap__
+===================================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__array_wrap__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.dtype.rst
@@ -0,0 +1,6 @@
+numpy.dtype
+===========
+
+.. currentmodule:: numpy
+
+.. autoclass:: dtype
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.count.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.count
+=============================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: count
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.transpose.rst
@@ -0,0 +1,6 @@
+numpy.transpose
+===============
+
+.. currentmodule:: numpy
+
+.. autofunction:: transpose
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ufunc.nin.rst
@@ -0,0 +1,6 @@
+numpy.ufunc.nin
+===============
+
+.. currentmodule:: numpy
+
+.. autoattribute:: ufunc.nin
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.size.rst
@@ -0,0 +1,6 @@
+numpy.ma.size
+=============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: size
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__rand__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__rand__
+=============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__rand__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.nbytes.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.nbytes
+====================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: ndarray.nbytes
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.apply_along_axis.rst
@@ -0,0 +1,6 @@
+numpy.apply_along_axis
+======================
+
+.. currentmodule:: numpy
+
+.. autofunction:: apply_along_axis
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.std.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.std
+========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.std
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.geterrcall.rst
@@ -0,0 +1,6 @@
+numpy.geterrcall
+================
+
+.. currentmodule:: numpy
+
+.. autofunction:: geterrcall
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.generic.__array_priority__.rst
@@ -0,0 +1,6 @@
+numpy.generic.__array_priority__
+================================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: generic.__array_priority__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.nanargmax.rst
@@ -0,0 +1,6 @@
+numpy.nanargmax
+===============
+
+.. currentmodule:: numpy
+
+.. autofunction:: nanargmax
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__new__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__new__
+=====================
+
+.. currentmodule:: numpy.ndarray
+
+.. autofunction:: __new__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.degrees.rst
@@ -0,0 +1,6 @@
+numpy.degrees
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: degrees
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.multivariate_normal.rst
@@ -0,0 +1,6 @@
+numpy.random.multivariate_normal
+================================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: multivariate_normal
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.records.fromstring.rst
@@ -0,0 +1,6 @@
+numpy.core.records.fromstring
+=============================
+
+.. currentmodule:: numpy.core.records
+
+.. autofunction:: fromstring
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.dtype.alignment.rst
@@ -0,0 +1,6 @@
+numpy.dtype.alignment
+=====================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: dtype.alignment
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__rdiv__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__rdiv__
+=============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__rdiv__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.fft.irfft2.rst
@@ -0,0 +1,6 @@
+numpy.fft.irfft2
+================
+
+.. currentmodule:: numpy.fft
+
+.. autofunction:: irfft2
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.poly.rst
@@ -0,0 +1,6 @@
+numpy.poly
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: poly
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.correlate.rst
@@ -0,0 +1,6 @@
+numpy.correlate
+===============
+
+.. currentmodule:: numpy
+
+.. autofunction:: correlate
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__ne__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__ne__
+====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__ne__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__isub__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__isub__
+======================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__isub__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.newbuffer.rst
@@ -0,0 +1,6 @@
+numpy.newbuffer
+===============
+
+.. currentmodule:: numpy
+
+.. autofunction:: newbuffer
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.vsplit.rst
@@ -0,0 +1,6 @@
+numpy.vsplit
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: vsplit
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.ravel.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.ravel
+==========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.ravel
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.logical_and.rst
@@ -0,0 +1,6 @@
+numpy.logical_and
+=================
+
+.. currentmodule:: numpy
+
+.. autofunction:: logical_and
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.imag.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.imag
+==================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: ndarray.imag
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.empty.rst
@@ -0,0 +1,6 @@
+numpy.empty
+===========
+
+.. currentmodule:: numpy
+
+.. autofunction:: empty
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ufunc.outer.rst
@@ -0,0 +1,6 @@
+numpy.ufunc.outer
+=================
+
+.. currentmodule:: numpy
+
+.. automethod:: ufunc.outer
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__repr__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__repr__
+======================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__repr__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.arange.rst
@@ -0,0 +1,6 @@
+numpy.ma.arange
+===============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: arange
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.mtrand.dirichlet.rst
@@ -0,0 +1,6 @@
+numpy.random.mtrand.dirichlet
+=============================
+
+.. currentmodule:: numpy.random.mtrand
+
+.. autofunction:: dirichlet
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.masked_not_equal.rst
@@ -0,0 +1,6 @@
+numpy.ma.masked_not_equal
+=========================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: masked_not_equal
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.common_type.rst
@@ -0,0 +1,6 @@
+numpy.common_type
+=================
+
+.. currentmodule:: numpy
+
+.. autofunction:: common_type
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.flatten.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.flatten
+=====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.flatten
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.round_.rst
@@ -0,0 +1,6 @@
+numpy.round_
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: round_
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.require.rst
@@ -0,0 +1,6 @@
+numpy.require
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: require
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.imag.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.imag
+=========================
+
+.. currentmodule:: numpy.ma
+
+.. autoattribute:: MaskedArray.imag
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__getstate__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__getstate__
+=================================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__getstate__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.prod.rst
@@ -0,0 +1,6 @@
+numpy.ma.prod
+=============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: prod
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.invert.rst
@@ -0,0 +1,6 @@
+numpy.invert
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: invert
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__sub__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__sub__
+=====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__sub__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__str__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__str__
+=====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__str__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.fix.rst
@@ -0,0 +1,6 @@
+numpy.fix
+=========
+
+.. currentmodule:: numpy
+
+.. autofunction:: fix
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.isnan.rst
@@ -0,0 +1,6 @@
+numpy.isnan
+===========
+
+.. currentmodule:: numpy
+
+.. autofunction:: isnan
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.records.fromfile.rst
@@ -0,0 +1,6 @@
+numpy.core.records.fromfile
+===========================
+
+.. currentmodule:: numpy.core.records
+
+.. autofunction:: fromfile
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.nansum.rst
@@ -0,0 +1,6 @@
+numpy.nansum
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: nansum
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.toflex.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.toflex
+===========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.toflex
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.strip.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.strip
+=============================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: strip
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.testing.assert_warns.rst
@@ -0,0 +1,6 @@
+numpy.testing.assert_warns
+==========================
+
+.. currentmodule:: numpy.testing
+
+.. autofunction:: assert_warns
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.concatenate.rst
@@ -0,0 +1,6 @@
+numpy.ma.concatenate
+====================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: concatenate
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.zipf.rst
@@ -0,0 +1,6 @@
+numpy.random.zipf
+=================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: zipf
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.weibull.rst
@@ -0,0 +1,6 @@
+numpy.random.weibull
+====================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: weibull
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.issubclass_.rst
@@ -0,0 +1,6 @@
+numpy.issubclass_
+=================
+
+.. currentmodule:: numpy
+
+.. autofunction:: issubclass_
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.RankWarning.rst
@@ -0,0 +1,6 @@
+numpy.RankWarning
+=================
+
+.. currentmodule:: numpy
+
+.. autoexception:: RankWarning
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.sin.rst
@@ -0,0 +1,6 @@
+numpy.sin
+=========
+
+.. currentmodule:: numpy
+
+.. autofunction:: sin
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__irshift__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__irshift__
+=========================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__irshift__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.split.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.split
+=============================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: split
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.inner.rst
@@ -0,0 +1,6 @@
+numpy.ma.inner
+==============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: inner
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.distutils.misc_util.get_ext_source_files.rst
@@ -0,0 +1,6 @@
+numpy.distutils.misc_util.get_ext_source_files
+==============================================
+
+.. currentmodule:: numpy.distutils.misc_util
+
+.. autofunction:: get_ext_source_files
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.cov.rst
@@ -0,0 +1,6 @@
+numpy.cov
+=========
+
+.. currentmodule:: numpy
+
+.. autofunction:: cov
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.count.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.count
+==========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.count
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.itemsize.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.itemsize
+======================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: ndarray.itemsize
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.any.rst
@@ -0,0 +1,6 @@
+numpy.any
+=========
+
+.. currentmodule:: numpy
+
+.. autofunction:: any
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.testing.decorators.setastest.rst
@@ -0,0 +1,6 @@
+numpy.testing.decorators.setastest
+==================================
+
+.. currentmodule:: numpy.testing.decorators
+
+.. autofunction:: setastest
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__rsub__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__rsub__
+=============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__rsub__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.std.rst
@@ -0,0 +1,6 @@
+numpy.std
+=========
+
+.. currentmodule:: numpy
+
+.. autofunction:: std
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.outerproduct.rst
@@ -0,0 +1,6 @@
+numpy.ma.outerproduct
+=====================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: outerproduct
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__itruediv__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__itruediv__
+=================================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__itruediv__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.dtype.isbuiltin.rst
@@ -0,0 +1,6 @@
+numpy.dtype.isbuiltin
+=====================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: dtype.isbuiltin
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.exponential.rst
@@ -0,0 +1,6 @@
+numpy.random.exponential
+========================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: exponential
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.itemset.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.itemset
+=====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.itemset
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.dtype.str.rst
@@ -0,0 +1,6 @@
+numpy.dtype.str
+===============
+
+.. currentmodule:: numpy
+
+.. autoattribute:: dtype.str
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.signbit.rst
@@ -0,0 +1,6 @@
+numpy.signbit
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: signbit
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.set_fill_value.rst
@@ -0,0 +1,6 @@
+numpy.ma.set_fill_value
+=======================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: set_fill_value
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.delete.rst
@@ -0,0 +1,6 @@
+numpy.delete
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: delete
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.put.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.put
+========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.put
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.log1p.rst
@@ -0,0 +1,6 @@
+numpy.log1p
+===========
+
+.. currentmodule:: numpy
+
+.. autofunction:: log1p
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.transpose.rst
@@ -0,0 +1,6 @@
+numpy.ma.transpose
+==================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: transpose
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.swapaxes.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.swapaxes
+=============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.swapaxes
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.nanmax.rst
@@ -0,0 +1,6 @@
+numpy.nanmax
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: nanmax
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__copy__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__copy__
+=============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__copy__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.poly1d.rst
@@ -0,0 +1,6 @@
+numpy.poly1d
+============
+
+.. currentmodule:: numpy
+
+.. autoclass:: poly1d
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.prod.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.prod
+=========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.prod
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.dtype.__setstate__.rst
@@ -0,0 +1,6 @@
+numpy.dtype.__setstate__
+========================
+
+.. currentmodule:: numpy
+
+.. automethod:: dtype.__setstate__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.bytes.rst
@@ -0,0 +1,6 @@
+numpy.random.bytes
+==================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: bytes
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.sum.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.sum
+========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.sum
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.fft.ihfft.rst
@@ -0,0 +1,6 @@
+numpy.fft.ihfft
+===============
+
+.. currentmodule:: numpy.fft
+
+.. autofunction:: ihfft
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.expand_dims.rst
@@ -0,0 +1,6 @@
+numpy.expand_dims
+=================
+
+.. currentmodule:: numpy
+
+.. autofunction:: expand_dims
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__sub__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__sub__
+============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__sub__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.testing.assert_raises.rst
@@ -0,0 +1,6 @@
+numpy.testing.assert_raises
+===========================
+
+.. currentmodule:: numpy.testing
+
+.. autofunction:: assert_raises
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.minimum.rst
@@ -0,0 +1,6 @@
+numpy.minimum
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: minimum
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.linalg.solve.rst
@@ -0,0 +1,6 @@
+numpy.linalg.solve
+==================
+
+.. currentmodule:: numpy.linalg
+
+.. autofunction:: solve
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.trace.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.trace
+===================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.trace
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.dtype.subdtype.rst
@@ -0,0 +1,6 @@
+numpy.dtype.subdtype
+====================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: dtype.subdtype
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.argmin.rst
@@ -0,0 +1,6 @@
+numpy.argmin
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: argmin
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.testing.decorators.slow.rst
@@ -0,0 +1,6 @@
+numpy.testing.decorators.slow
+=============================
+
+.. currentmodule:: numpy.testing.decorators
+
+.. autofunction:: slow
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__isub__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__isub__
+=============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__isub__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.where.rst
@@ -0,0 +1,6 @@
+numpy.where
+===========
+
+.. currentmodule:: numpy
+
+.. autofunction:: where
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.poisson.rst
@@ -0,0 +1,6 @@
+numpy.random.poisson
+====================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: poisson
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__mul__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__mul__
+=====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__mul__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__getitem__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__getitem__
+================================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__getitem__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__idiv__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__idiv__
+======================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__idiv__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.dtype.num.rst
@@ -0,0 +1,6 @@
+numpy.dtype.num
+===============
+
+.. currentmodule:: numpy
+
+.. autoattribute:: dtype.num
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.generic.itemsize.rst
@@ -0,0 +1,6 @@
+numpy.generic.itemsize
+======================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: generic.itemsize
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.histogram2d.rst
@@ -0,0 +1,6 @@
+numpy.histogram2d
+=================
+
+.. currentmodule:: numpy
+
+.. autofunction:: histogram2d
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.masked_array.mask.rst
@@ -0,0 +1,6 @@
+numpy.ma.masked_array.mask
+==========================
+
+.. currentmodule:: numpy.ma
+
+.. autoattribute:: masked_array.mask
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.uniform.rst
@@ -0,0 +1,6 @@
+numpy.random.uniform
+====================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: uniform
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ravel.rst
@@ -0,0 +1,6 @@
+numpy.ravel
+===========
+
+.. currentmodule:: numpy
+
+.. autofunction:: ravel
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__float__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__float__
+==============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__float__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__rxor__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__rxor__
+=============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__rxor__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.errstate.rst
@@ -0,0 +1,6 @@
+numpy.errstate
+==============
+
+.. currentmodule:: numpy
+
+.. autoclass:: errstate
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.copy.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.copy
+==================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.copy
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.distutils.misc_util.get_dependencies.rst
@@ -0,0 +1,6 @@
+numpy.distutils.misc_util.get_dependencies
+==========================================
+
+.. currentmodule:: numpy.distutils.misc_util
+
+.. autofunction:: get_dependencies
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.setbufsize.rst
@@ -0,0 +1,6 @@
+numpy.setbufsize
+================
+
+.. currentmodule:: numpy
+
+.. autofunction:: setbufsize
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.compressed.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.compressed
+===============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.compressed
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.mean.rst
@@ -0,0 +1,6 @@
+numpy.mean
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: mean
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.putmask.rst
@@ -0,0 +1,6 @@
+numpy.putmask
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: putmask
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.cumprod.rst
@@ -0,0 +1,6 @@
+numpy.ma.cumprod
+================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: cumprod
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskType.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskType
+=================
+
+.. currentmodule:: numpy.ma
+
+.. autoclass:: MaskType
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.save.rst
@@ -0,0 +1,6 @@
+numpy.save
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: save
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.swapaxes.rst
@@ -0,0 +1,6 @@
+numpy.ma.swapaxes
+=================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: swapaxes
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.maximum.rst
@@ -0,0 +1,6 @@
+numpy.maximum
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: maximum
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.squeeze.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.squeeze
+============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.squeeze
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.testing.decorators.knownfailureif.rst
@@ -0,0 +1,6 @@
+numpy.testing.decorators.knownfailureif
+=======================================
+
+.. currentmodule:: numpy.testing.decorators
+
+.. autofunction:: knownfailureif
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.triu_indices.rst
@@ -0,0 +1,6 @@
+numpy.triu_indices
+==================
+
+.. currentmodule:: numpy
+
+.. autofunction:: triu_indices
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.asfortranarray.rst
@@ -0,0 +1,6 @@
+numpy.asfortranarray
+====================
+
+.. currentmodule:: numpy
+
+.. autofunction:: asfortranarray
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.mat.rst
@@ -0,0 +1,6 @@
+numpy.mat
+=========
+
+.. currentmodule:: numpy
+
+.. autofunction:: mat
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.generic.__array_wrap__.rst
@@ -0,0 +1,6 @@
+numpy.generic.__array_wrap__
+============================
+
+.. currentmodule:: numpy
+
+.. automethod:: generic.__array_wrap__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.logistic.rst
@@ -0,0 +1,6 @@
+numpy.random.logistic
+=====================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: logistic
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.flatnotmasked_contiguous.rst
@@ -0,0 +1,6 @@
+numpy.ma.flatnotmasked_contiguous
+=================================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: flatnotmasked_contiguous
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.real_if_close.rst
@@ -0,0 +1,6 @@
+numpy.real_if_close
+===================
+
+.. currentmodule:: numpy
+
+.. autofunction:: real_if_close
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.trapz.rst
@@ -0,0 +1,6 @@
+numpy.trapz
+===========
+
+.. currentmodule:: numpy
+
+.. autofunction:: trapz
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__setitem__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__setitem__
+=========================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__setitem__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.filled.rst
@@ -0,0 +1,6 @@
+numpy.ma.filled
+===============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: filled
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.rad2deg.rst
@@ -0,0 +1,6 @@
+numpy.rad2deg
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: rad2deg
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.ctypes.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.ctypes
+===========================
+
+.. currentmodule:: numpy.ma
+
+.. autoattribute:: MaskedArray.ctypes
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.dtype.newbyteorder.rst
@@ -0,0 +1,6 @@
+numpy.dtype.newbyteorder
+========================
+
+.. currentmodule:: numpy
+
+.. automethod:: dtype.newbyteorder
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.ids.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.ids
+========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.ids
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.sort.rst
@@ -0,0 +1,6 @@
+numpy.sort
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: sort
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.distutils.system_info.get_standard_file.rst
@@ -0,0 +1,6 @@
+numpy.distutils.system_info.get_standard_file
+=============================================
+
+.. currentmodule:: numpy.distutils.system_info
+
+.. autofunction:: get_standard_file
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.atleast_3d.rst
@@ -0,0 +1,6 @@
+numpy.atleast_3d
+================
+
+.. currentmodule:: numpy
+
+.. autofunction:: atleast_3d
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.asanyarray.rst
@@ -0,0 +1,6 @@
+numpy.ma.asanyarray
+===================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: asanyarray
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.dump.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.dump
+=========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.dump
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__div__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__div__
+============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__div__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.trace.rst
@@ -0,0 +1,6 @@
+numpy.trace
+===========
+
+.. currentmodule:: numpy
+
+.. autofunction:: trace
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.clip.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.clip
+==================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.clip
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.standard_t.rst
@@ -0,0 +1,6 @@
+numpy.random.standard_t
+=======================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: standard_t
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.ones.rst
@@ -0,0 +1,6 @@
+numpy.ma.ones
+=============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: ones
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.argsort.rst
@@ -0,0 +1,6 @@
+numpy.argsort
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: argsort
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.put.rst
@@ -0,0 +1,6 @@
+numpy.put
+=========
+
+.. currentmodule:: numpy
+
+.. autofunction:: put
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.linalg.tensorinv.rst
@@ -0,0 +1,6 @@
+numpy.linalg.tensorinv
+======================
+
+.. currentmodule:: numpy.linalg
+
+.. autofunction:: tensorinv
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.join.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.join
+============================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: join
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.masked_greater.rst
@@ -0,0 +1,6 @@
+numpy.ma.masked_greater
+=======================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: masked_greater
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__ge__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__ge__
+====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__ge__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.greater_equal.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.greater_equal
+=====================================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: greater_equal
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.dump.rst
@@ -0,0 +1,6 @@
+numpy.ma.dump
+=============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: dump
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.fromfunction.rst
@@ -0,0 +1,6 @@
+numpy.fromfunction
+==================
+
+.. currentmodule:: numpy
+
+.. autofunction:: fromfunction
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.flatnotmasked_edges.rst
@@ -0,0 +1,6 @@
+numpy.ma.flatnotmasked_edges
+============================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: flatnotmasked_edges
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.logical_xor.rst
@@ -0,0 +1,6 @@
+numpy.logical_xor
+=================
+
+.. currentmodule:: numpy
+
+.. autofunction:: logical_xor
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.iscomplexobj.rst
@@ -0,0 +1,6 @@
+numpy.iscomplexobj
+==================
+
+.. currentmodule:: numpy
+
+.. autofunction:: iscomplexobj
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.negative_binomial.rst
@@ -0,0 +1,6 @@
+numpy.random.negative_binomial
+==============================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: negative_binomial
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.flat.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.flat
+=========================
+
+.. currentmodule:: numpy.ma
+
+.. autoattribute:: MaskedArray.flat
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.var.rst
@@ -0,0 +1,6 @@
+numpy.var
+=========
+
+.. currentmodule:: numpy
+
+.. autofunction:: var
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__new__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__new__
+============================
+
+.. currentmodule:: numpy.ma.MaskedArray
+
+.. autofunction:: __new__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.dtype.hasobject.rst
@@ -0,0 +1,6 @@
+numpy.dtype.hasobject
+=====================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: dtype.hasobject
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.distutils.system_info.get_info.rst
@@ -0,0 +1,6 @@
+numpy.distutils.system_info.get_info
+====================================
+
+.. currentmodule:: numpy.distutils.system_info
+
+.. autofunction:: get_info
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ufunc.identity.rst
@@ -0,0 +1,6 @@
+numpy.ufunc.identity
+====================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: ufunc.identity
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.astype.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.astype
+====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.astype
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.testing.run_module_suite.rst
@@ -0,0 +1,6 @@
+numpy.testing.run_module_suite
+==============================
+
+.. currentmodule:: numpy.testing
+
+.. autofunction:: run_module_suite
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__floordiv__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__floordiv__
+==========================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__floordiv__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__imul__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__imul__
+=============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__imul__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.chisquare.rst
@@ -0,0 +1,6 @@
+numpy.random.chisquare
+======================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: chisquare
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.square.rst
@@ -0,0 +1,6 @@
+numpy.square
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: square
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.vdot.rst
@@ -0,0 +1,6 @@
+numpy.vdot
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: vdot
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.average.rst
@@ -0,0 +1,6 @@
+numpy.ma.average
+================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: average
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__imul__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__imul__
+======================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__imul__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__floordiv__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__floordiv__
+=================================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__floordiv__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.nonzero.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.nonzero
+============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.nonzero
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.inner.rst
@@ -0,0 +1,6 @@
+numpy.inner
+===========
+
+.. currentmodule:: numpy
+
+.. autofunction:: inner
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.mask_indices.rst
@@ -0,0 +1,6 @@
+numpy.mask_indices
+==================
+
+.. currentmodule:: numpy
+
+.. autofunction:: mask_indices
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.amax.rst
@@ -0,0 +1,6 @@
+numpy.amax
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: amax
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.conj.rst
@@ -0,0 +1,6 @@
+numpy.conj
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: conj
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.log.rst
@@ -0,0 +1,6 @@
+numpy.log
+=========
+
+.. currentmodule:: numpy
+
+.. autofunction:: log
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__divmod__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__divmod__
+========================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__divmod__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__rshift__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__rshift__
+========================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__rshift__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.rsplit.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.rsplit
+==============================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: rsplit
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__setslice__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__setslice__
+=================================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__setslice__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.cumprod.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.cumprod
+=====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.cumprod
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.real.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.real
+==================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: ndarray.real
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.arange.rst
@@ -0,0 +1,6 @@
+numpy.arange
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: arange
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__array_wrap__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__array_wrap__
+============================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__array_wrap__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.atleast_2d.rst
@@ -0,0 +1,6 @@
+numpy.ma.atleast_2d
+===================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: atleast_2d
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.generic.__reduce__.rst
@@ -0,0 +1,6 @@
+numpy.generic.__reduce__
+========================
+
+.. currentmodule:: numpy
+
+.. automethod:: generic.__reduce__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.diag_indices_from.rst
@@ -0,0 +1,6 @@
+numpy.diag_indices_from
+=======================
+
+.. currentmodule:: numpy
+
+.. autofunction:: diag_indices_from
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.generic.data.rst
@@ -0,0 +1,6 @@
+numpy.generic.data
+==================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: generic.data
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.randn.rst
@@ -0,0 +1,6 @@
+numpy.random.randn
+==================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: randn
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.triu_indices_from.rst
@@ -0,0 +1,6 @@
+numpy.triu_indices_from
+=======================
+
+.. currentmodule:: numpy
+
+.. autofunction:: triu_indices_from
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.linalg.matrix_power.rst
@@ -0,0 +1,6 @@
+numpy.linalg.matrix_power
+=========================
+
+.. currentmodule:: numpy.linalg
+
+.. autofunction:: matrix_power
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.generic.__setstate__.rst
@@ -0,0 +1,6 @@
+numpy.generic.__setstate__
+==========================
+
+.. currentmodule:: numpy
+
+.. automethod:: generic.__setstate__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ldexp.rst
@@ -0,0 +1,6 @@
+numpy.ldexp
+===========
+
+.. currentmodule:: numpy
+
+.. autofunction:: ldexp
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.testing.assert_array_less.rst
@@ -0,0 +1,6 @@
+numpy.testing.assert_array_less
+===============================
+
+.. currentmodule:: numpy.testing
+
+.. autofunction:: assert_array_less
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__eq__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__eq__
+====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__eq__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.generic.base.rst
@@ -0,0 +1,6 @@
+numpy.generic.base
+==================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: generic.base
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.logseries.rst
@@ -0,0 +1,6 @@
+numpy.random.logseries
+======================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: logseries
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.floor_divide.rst
@@ -0,0 +1,6 @@
+numpy.floor_divide
+==================
+
+.. currentmodule:: numpy
+
+.. autofunction:: floor_divide
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.fft.ifft.rst
@@ -0,0 +1,6 @@
+numpy.fft.ifft
+==============
+
+.. currentmodule:: numpy.fft
+
+.. autofunction:: ifft
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__idiv__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__idiv__
+=============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__idiv__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.polyint.rst
@@ -0,0 +1,6 @@
+numpy.polyint
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: polyint
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.fromregex.rst
@@ -0,0 +1,6 @@
+numpy.fromregex
+===============
+
+.. currentmodule:: numpy
+
+.. autofunction:: fromregex
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__getslice__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__getslice__
+=================================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__getslice__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__imod__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__imod__
+======================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__imod__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.real.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.real
+=========================
+
+.. currentmodule:: numpy.ma
+
+.. autoattribute:: MaskedArray.real
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.rollaxis.rst
@@ -0,0 +1,6 @@
+numpy.rollaxis
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: rollaxis
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.binary_repr.rst
@@ -0,0 +1,6 @@
+numpy.binary_repr
+=================
+
+.. currentmodule:: numpy
+
+.. autofunction:: binary_repr
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.imag.rst
@@ -0,0 +1,6 @@
+numpy.imag
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: imag
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.corrcoef.rst
@@ -0,0 +1,6 @@
+numpy.corrcoef
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: corrcoef
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.power.rst
@@ -0,0 +1,6 @@
+numpy.random.power
+==================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: power
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.bartlett.rst
@@ -0,0 +1,6 @@
+numpy.bartlett
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: bartlett
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.masked_less.rst
@@ -0,0 +1,6 @@
+numpy.ma.masked_less
+====================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: masked_less
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.indices.rst
@@ -0,0 +1,6 @@
+numpy.indices
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: indices
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.distutils.misc_util.has_f_sources.rst
@@ -0,0 +1,6 @@
+numpy.distutils.misc_util.has_f_sources
+=======================================
+
+.. currentmodule:: numpy.distutils.misc_util
+
+.. autofunction:: has_f_sources
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.fill.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.fill
+=========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.fill
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__truediv__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__truediv__
+================================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__truediv__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__pos__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__pos__
+=====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__pos__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.hsplit.rst
@@ -0,0 +1,6 @@
+numpy.ma.hsplit
+===============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: hsplit
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.squeeze.rst
@@ -0,0 +1,6 @@
+numpy.ma.squeeze
+================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: squeeze
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.torecords.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.torecords
+==============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.torecords
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.binomial.rst
@@ -0,0 +1,6 @@
+numpy.random.binomial
+=====================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: binomial
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__len__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__len__
+=====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__len__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.fliplr.rst
@@ -0,0 +1,6 @@
+numpy.fliplr
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: fliplr
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.isspace.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.isspace
+===============================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: isspace
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.wald.rst
@@ -0,0 +1,6 @@
+numpy.random.wald
+=================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: wald
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.std.rst
@@ -0,0 +1,6 @@
+numpy.ma.std
+============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: std
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.masked_inside.rst
@@ -0,0 +1,6 @@
+numpy.ma.masked_inside
+======================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: masked_inside
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.empty_like.rst
@@ -0,0 +1,6 @@
+numpy.ma.empty_like
+===================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: empty_like
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ufunc.nargs.rst
@@ -0,0 +1,6 @@
+numpy.ufunc.nargs
+=================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: ufunc.nargs
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.clip.rst
@@ -0,0 +1,6 @@
+numpy.ma.clip
+=============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: clip
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.decode.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.decode
+==============================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: decode
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.reshape.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.reshape
+=====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.reshape
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.repeat.rst
@@ -0,0 +1,6 @@
+numpy.repeat
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: repeat
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.asscalar.rst
@@ -0,0 +1,6 @@
+numpy.asscalar
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: asscalar
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.shape.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.shape
+===================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: ndarray.shape
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.frexp.rst
@@ -0,0 +1,6 @@
+numpy.frexp
+===========
+
+.. currentmodule:: numpy
+
+.. autofunction:: frexp
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.isfortran.rst
@@ -0,0 +1,6 @@
+numpy.isfortran
+===============
+
+.. currentmodule:: numpy
+
+.. autofunction:: isfortran
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.f.rst
@@ -0,0 +1,6 @@
+numpy.random.f
+==============
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: f
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ufunc.types.rst
@@ -0,0 +1,6 @@
+numpy.ufunc.types
+=================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: ufunc.types
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.lower.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.lower
+=============================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: lower
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.rindex.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.rindex
+==============================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: rindex
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.round.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.round
+==========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.round
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.fft.ifft2.rst
@@ -0,0 +1,6 @@
+numpy.fft.ifft2
+===============
+
+.. currentmodule:: numpy.fft
+
+.. autofunction:: ifft2
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.power.rst
@@ -0,0 +1,6 @@
+numpy.ma.power
+==============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: power
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__getitem__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__getitem__
+=========================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__getitem__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.testing.rundocs.rst
@@ -0,0 +1,6 @@
+numpy.testing.rundocs
+=====================
+
+.. currentmodule:: numpy.testing
+
+.. autofunction:: rundocs
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.mod.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.mod
+===========================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: mod
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__mod__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__mod__
+=====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__mod__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.take.rst
@@ -0,0 +1,6 @@
+numpy.take
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: take
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.iscomplex.rst
@@ -0,0 +1,6 @@
+numpy.iscomplex
+===============
+
+.. currentmodule:: numpy
+
+.. autofunction:: iscomplex
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.mean.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.mean
+==================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.mean
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.nper.rst
@@ -0,0 +1,6 @@
+numpy.nper
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: nper
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.savetxt.rst
@@ -0,0 +1,6 @@
+numpy.savetxt
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: savetxt
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.dtype.shape.rst
@@ -0,0 +1,6 @@
+numpy.dtype.shape
+=================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: dtype.shape
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.irr.rst
@@ -0,0 +1,6 @@
+numpy.irr
+=========
+
+.. currentmodule:: numpy
+
+.. autofunction:: irr
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__ge__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__ge__
+===========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__ge__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.searchsorted.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.searchsorted
+=================================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.searchsorted
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__ixor__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__ixor__
+======================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__ixor__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.repeat.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.repeat
+====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.repeat
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.testing.decorate_methods.rst
@@ -0,0 +1,6 @@
+numpy.testing.decorate_methods
+==============================
+
+.. currentmodule:: numpy.testing
+
+.. autofunction:: decorate_methods
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.ravel.rst
@@ -0,0 +1,6 @@
+numpy.ma.ravel
+==============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: ravel
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.get_state.rst
@@ -0,0 +1,6 @@
+numpy.random.get_state
+======================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: get_state
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.isnumeric.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.isnumeric
+=================================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: isnumeric
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__add__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__add__
+============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__add__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.polydiv.rst
@@ -0,0 +1,6 @@
+numpy.polydiv
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: polydiv
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.generic.strides.rst
@@ -0,0 +1,6 @@
+numpy.generic.strides
+=====================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: generic.strides
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.extract.rst
@@ -0,0 +1,6 @@
+numpy.extract
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: extract
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.outer.rst
@@ -0,0 +1,6 @@
+numpy.outer
+===========
+
+.. currentmodule:: numpy
+
+.. autofunction:: outer
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.tan.rst
@@ -0,0 +1,6 @@
+numpy.tan
+=========
+
+.. currentmodule:: numpy
+
+.. autofunction:: tan
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.polyfit.rst
@@ -0,0 +1,6 @@
+numpy.ma.polyfit
+================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: polyfit
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.resize.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.resize
+====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.resize
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.insert.rst
@@ -0,0 +1,6 @@
+numpy.insert
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: insert
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__ifloordiv__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__ifloordiv__
+==================================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__ifloordiv__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.load.rst
@@ -0,0 +1,6 @@
+numpy.load
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: load
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.atleast_1d.rst
@@ -0,0 +1,6 @@
+numpy.ma.atleast_1d
+===================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: atleast_1d
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.mask.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.mask
+=========================
+
+.. currentmodule:: numpy.ma
+
+.. autoattribute:: MaskedArray.mask
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__gt__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__gt__
+====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__gt__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.sctype2char.rst
@@ -0,0 +1,6 @@
+numpy.sctype2char
+=================
+
+.. currentmodule:: numpy
+
+.. autofunction:: sctype2char
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__delitem__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__delitem__
+================================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__delitem__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndindex.rst
@@ -0,0 +1,6 @@
+numpy.ndindex
+=============
+
+.. currentmodule:: numpy
+
+.. autoclass:: ndindex
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.var.rst
@@ -0,0 +1,6 @@
+numpy.ma.var
+============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: var
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.zeros_like.rst
@@ -0,0 +1,6 @@
+numpy.zeros_like
+================
+
+.. currentmodule:: numpy
+
+.. autofunction:: zeros_like
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.blackman.rst
@@ -0,0 +1,6 @@
+numpy.blackman
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: blackman
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.fft.ifftshift.rst
@@ -0,0 +1,6 @@
+numpy.fft.ifftshift
+===================
+
+.. currentmodule:: numpy.fft
+
+.. autofunction:: ifftshift
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.transpose.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.transpose
+=======================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.transpose
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.flipud.rst
@@ -0,0 +1,6 @@
+numpy.flipud
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: flipud
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.dtype.char.rst
@@ -0,0 +1,6 @@
+numpy.dtype.char
+================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: dtype.char
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.amin.rst
@@ -0,0 +1,6 @@
+numpy.amin
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: amin
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.gumbel.rst
@@ -0,0 +1,6 @@
+numpy.random.gumbel
+===================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: gumbel
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.polyfit.rst
@@ -0,0 +1,6 @@
+numpy.polyfit
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: polyfit
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__iadd__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__iadd__
+======================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__iadd__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.linalg.tensorsolve.rst
@@ -0,0 +1,6 @@
+numpy.linalg.tensorsolve
+========================
+
+.. currentmodule:: numpy.linalg
+
+.. autofunction:: tensorsolve
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__int__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__int__
+============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__int__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.geterr.rst
@@ -0,0 +1,6 @@
+numpy.geterr
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: geterr
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.standard_gamma.rst
@@ -0,0 +1,6 @@
+numpy.random.standard_gamma
+===========================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: standard_gamma
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.fmod.rst
@@ -0,0 +1,6 @@
+numpy.fmod
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: fmod
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.polyval.rst
@@ -0,0 +1,6 @@
+numpy.polyval
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: polyval
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.compress.rst
@@ -0,0 +1,6 @@
+numpy.compress
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: compress
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.fill_diagonal.rst
@@ -0,0 +1,6 @@
+numpy.fill_diagonal
+===================
+
+.. currentmodule:: numpy
+
+.. autofunction:: fill_diagonal
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.find_common_type.rst
@@ -0,0 +1,6 @@
+numpy.find_common_type
+======================
+
+.. currentmodule:: numpy
+
+.. autofunction:: find_common_type
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.nanmin.rst
@@ -0,0 +1,6 @@
+numpy.nanmin
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: nanmin
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.load.rst
@@ -0,0 +1,6 @@
+numpy.ma.load
+=============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: load
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.where.rst
@@ -0,0 +1,6 @@
+numpy.ma.where
+==============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: where
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.masked_less_equal.rst
@@ -0,0 +1,6 @@
+numpy.ma.masked_less_equal
+==========================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: masked_less_equal
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.distutils.misc_util.Configuration.rst
@@ -0,0 +1,6 @@
+numpy.distutils.misc_util.Configuration
+=======================================
+
+.. currentmodule:: numpy.distutils.misc_util
+
+.. autoclass:: Configuration
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.common_fill_value.rst
@@ -0,0 +1,6 @@
+numpy.ma.common_fill_value
+==========================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: common_fill_value
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.dot.rst
@@ -0,0 +1,6 @@
+numpy.dot
+=========
+
+.. currentmodule:: numpy
+
+.. autofunction:: dot
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.find.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.find
+============================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: find
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.atleast_3d.rst
@@ -0,0 +1,6 @@
+numpy.ma.atleast_3d
+===================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: atleast_3d
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.fft.rfft2.rst
@@ -0,0 +1,6 @@
+numpy.fft.rfft2
+===============
+
+.. currentmodule:: numpy.fft
+
+.. autofunction:: rfft2
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.rst
@@ -0,0 +1,6 @@
+numpy.ndarray
+=============
+
+.. currentmodule:: numpy
+
+.. autoclass:: ndarray
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.base.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.base
+==================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: ndarray.base
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__and__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__and__
+============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__and__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.compressed.rst
@@ -0,0 +1,6 @@
+numpy.ma.compressed
+===================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: compressed
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.dumps.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.dumps
+==========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.dumps
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.broadcast.rst
@@ -0,0 +1,6 @@
+numpy.broadcast
+===============
+
+.. currentmodule:: numpy
+
+.. autoclass:: broadcast
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.hamming.rst
@@ -0,0 +1,6 @@
+numpy.hamming
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: hamming
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.testing.assert_array_equal.rst
@@ -0,0 +1,6 @@
+numpy.testing.assert_array_equal
+================================
+
+.. currentmodule:: numpy.testing
+
+.. autofunction:: assert_array_equal
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.unravel_index.rst
@@ -0,0 +1,6 @@
+numpy.unravel_index
+===================
+
+.. currentmodule:: numpy
+
+.. autofunction:: unravel_index
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.masked_equal.rst
@@ -0,0 +1,6 @@
+numpy.ma.masked_equal
+=====================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: masked_equal
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.linalg.qr.rst
@@ -0,0 +1,6 @@
+numpy.linalg.qr
+===============
+
+.. currentmodule:: numpy.linalg
+
+.. autofunction:: qr
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.linalg.cond.rst
@@ -0,0 +1,6 @@
+numpy.linalg.cond
+=================
+
+.. currentmodule:: numpy.linalg
+
+.. autofunction:: cond
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.dtype.kind.rst
@@ -0,0 +1,6 @@
+numpy.dtype.kind
+================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: dtype.kind
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.all.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.all
+========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.all
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.loadtxt.rst
@@ -0,0 +1,6 @@
+numpy.loadtxt
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: loadtxt
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.pmt.rst
@@ -0,0 +1,6 @@
+numpy.pmt
+=========
+
+.. currentmodule:: numpy
+
+.. autofunction:: pmt
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.choose.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.choose
+===========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.choose
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.strides.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.strides
+=====================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: ndarray.strides
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.argmax.rst
@@ -0,0 +1,6 @@
+numpy.argmax
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: argmax
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.itemsize.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.itemsize
+=============================
+
+.. currentmodule:: numpy.ma
+
+.. autoattribute:: MaskedArray.itemsize
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.masked_all_like.rst
@@ -0,0 +1,6 @@
+numpy.ma.masked_all_like
+========================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: masked_all_like
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.notmasked_contiguous.rst
@@ -0,0 +1,6 @@
+numpy.ma.notmasked_contiguous
+=============================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: notmasked_contiguous
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.array_equiv.rst
@@ -0,0 +1,6 @@
+numpy.array_equiv
+=================
+
+.. currentmodule:: numpy
+
+.. autofunction:: array_equiv
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.angle.rst
@@ -0,0 +1,6 @@
+numpy.angle
+===========
+
+.. currentmodule:: numpy
+
+.. autofunction:: angle
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.swapcase.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.swapcase
+================================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: swapcase
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__setmask__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__setmask__
+================================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__setmask__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.meshgrid.rst
@@ -0,0 +1,6 @@
+numpy.meshgrid
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: meshgrid
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.ndim.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.ndim
+=========================
+
+.. currentmodule:: numpy.ma
+
+.. autoattribute:: MaskedArray.ndim
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.true_divide.rst
@@ -0,0 +1,6 @@
+numpy.true_divide
+=================
+
+.. currentmodule:: numpy
+
+.. autofunction:: true_divide
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.diag.rst
@@ -0,0 +1,6 @@
+numpy.ma.diag
+=============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: diag
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ufunc.nout.rst
@@ -0,0 +1,6 @@
+numpy.ufunc.nout
+================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: ufunc.nout
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.trace.rst
@@ -0,0 +1,6 @@
+numpy.ma.trace
+==============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: trace
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.testing.assert_approx_equal.rst
@@ -0,0 +1,6 @@
+numpy.testing.assert_approx_equal
+=================================
+
+.. currentmodule:: numpy.testing
+
+.. autofunction:: assert_approx_equal
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.memmap.flush.rst
@@ -0,0 +1,6 @@
+numpy.memmap.flush
+==================
+
+.. currentmodule:: numpy
+
+.. automethod:: memmap.flush
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.allclose.rst
@@ -0,0 +1,6 @@
+numpy.allclose
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: allclose
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.dtype.names.rst
@@ -0,0 +1,6 @@
+numpy.dtype.names
+=================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: dtype.names
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.generic.imag.rst
@@ -0,0 +1,6 @@
+numpy.generic.imag
+==================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: generic.imag
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__oct__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__oct__
+=====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__oct__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.replace.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.replace
+===============================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: replace
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.setdiff1d.rst
@@ -0,0 +1,6 @@
+numpy.setdiff1d
+===============
+
+.. currentmodule:: numpy
+
+.. autofunction:: setdiff1d
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.median.rst
@@ -0,0 +1,6 @@
+numpy.median
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: median
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.copy.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.copy
+=========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.copy
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.masked_invalid.rst
@@ -0,0 +1,6 @@
+numpy.ma.masked_invalid
+=======================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: masked_invalid
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.pareto.rst
@@ -0,0 +1,6 @@
+numpy.random.pareto
+===================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: pareto
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.sort.rst
@@ -0,0 +1,6 @@
+numpy.ma.sort
+=============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: sort
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.fromstring.rst
@@ -0,0 +1,6 @@
+numpy.fromstring
+================
+
+.. currentmodule:: numpy
+
+.. autofunction:: fromstring
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.any.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.any
+=================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.any
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__len__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__len__
+============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__len__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.dtype.fields.rst
@@ -0,0 +1,6 @@
+numpy.dtype.fields
+==================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: dtype.fields
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__rrshift__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__rrshift__
+================================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__rrshift__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__array__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__array__
+=======================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__array__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.set_fill_value.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.set_fill_value
+===================================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.set_fill_value
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.fft.rfftn.rst
@@ -0,0 +1,6 @@
+numpy.fft.rfftn
+===============
+
+.. currentmodule:: numpy.fft
+
+.. autofunction:: rfftn
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.cumsum.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.cumsum
+====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.cumsum
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__reduce__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__reduce__
+========================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__reduce__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.lib.user_array.container.rst
@@ -0,0 +1,6 @@
+numpy.lib.user_array.container
+==============================
+
+.. currentmodule:: numpy.lib.user_array
+
+.. autoclass:: container
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.all.rst
@@ -0,0 +1,6 @@
+numpy.ma.all
+============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: all
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__iadd__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__iadd__
+=============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__iadd__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.distutils.misc_util.allpath.rst
@@ -0,0 +1,6 @@
+numpy.distutils.misc_util.allpath
+=================================
+
+.. currentmodule:: numpy.distutils.misc_util
+
+.. autofunction:: allpath
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.apply_along_axis.rst
@@ -0,0 +1,6 @@
+numpy.ma.apply_along_axis
+=========================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: apply_along_axis
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.histogram.rst
@@ -0,0 +1,6 @@
+numpy.histogram
+===============
+
+.. currentmodule:: numpy
+
+.. autofunction:: histogram
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.tolist.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.tolist
+====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.tolist
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.digitize.rst
@@ -0,0 +1,6 @@
+numpy.digitize
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: digitize
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.finfo.rst
@@ -0,0 +1,6 @@
+numpy.finfo
+===========
+
+.. currentmodule:: numpy
+
+.. autoclass:: finfo
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.sign.rst
@@ -0,0 +1,6 @@
+numpy.sign
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: sign
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__iand__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__iand__
+=============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__iand__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.tolist.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.tolist
+===========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.tolist
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.gamma.rst
@@ -0,0 +1,6 @@
+numpy.random.gamma
+==================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: gamma
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.vander.rst
@@ -0,0 +1,6 @@
+numpy.vander
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: vander
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.generic.flat.rst
@@ -0,0 +1,6 @@
+numpy.generic.flat
+==================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: generic.flat
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.fromfunction.rst
@@ -0,0 +1,6 @@
+numpy.ma.fromfunction
+=====================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: fromfunction
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.nonzero.rst
@@ -0,0 +1,6 @@
+numpy.nonzero
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: nonzero
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.dump.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.dump
+==================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.dump
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.column_stack.rst
@@ -0,0 +1,6 @@
+numpy.ma.column_stack
+=====================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: column_stack
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.generic.rst
@@ -0,0 +1,6 @@
+numpy.generic
+=============
+
+.. currentmodule:: numpy
+
+.. autoclass:: generic
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.empty_like.rst
@@ -0,0 +1,6 @@
+numpy.empty_like
+================
+
+.. currentmodule:: numpy
+
+.. autofunction:: empty_like
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.greater.rst
@@ -0,0 +1,6 @@
+numpy.greater
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: greater
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.add.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.add
+===========================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: add
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.MachAr.rst
@@ -0,0 +1,6 @@
+numpy.MachAr
+============
+
+.. currentmodule:: numpy
+
+.. autoclass:: MachAr
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.diag_indices.rst
@@ -0,0 +1,6 @@
+numpy.diag_indices
+==================
+
+.. currentmodule:: numpy
+
+.. autofunction:: diag_indices
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.polysub.rst
@@ -0,0 +1,6 @@
+numpy.polysub
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: polysub
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.rstrip.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.rstrip
+==============================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: rstrip
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.cosh.rst
@@ -0,0 +1,6 @@
+numpy.cosh
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: cosh
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.frombuffer.rst
@@ -0,0 +1,6 @@
+numpy.frombuffer
+================
+
+.. currentmodule:: numpy
+
+.. autofunction:: frombuffer
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__mul__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__mul__
+============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__mul__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.bitwise_or.rst
@@ -0,0 +1,6 @@
+numpy.bitwise_or
+================
+
+.. currentmodule:: numpy
+
+.. autofunction:: bitwise_or
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.indices.rst
@@ -0,0 +1,6 @@
+numpy.ma.indices
+================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: indices
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.sum.rst
@@ -0,0 +1,6 @@
+numpy.sum
+=========
+
+.. currentmodule:: numpy
+
+.. autofunction:: sum
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.bincount.rst
@@ -0,0 +1,6 @@
+numpy.bincount
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: bincount
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.histogramdd.rst
@@ -0,0 +1,6 @@
+numpy.histogramdd
+=================
+
+.. currentmodule:: numpy
+
+.. autofunction:: histogramdd
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__str__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__str__
+============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__str__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.column_stack.rst
@@ -0,0 +1,6 @@
+numpy.column_stack
+==================
+
+.. currentmodule:: numpy
+
+.. autofunction:: column_stack
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.issubsctype.rst
@@ -0,0 +1,6 @@
+numpy.issubsctype
+=================
+
+.. currentmodule:: numpy
+
+.. autofunction:: issubsctype
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.issubdtype.rst
@@ -0,0 +1,6 @@
+numpy.issubdtype
+================
+
+.. currentmodule:: numpy
+
+.. autofunction:: issubdtype
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.argsort.rst
@@ -0,0 +1,6 @@
+numpy.ma.argsort
+================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: argsort
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.strides.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.strides
+============================
+
+.. currentmodule:: numpy.ma
+
+.. autoattribute:: MaskedArray.strides
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__lt__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__lt__
+====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__lt__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.mgrid.rst
@@ -0,0 +1,6 @@
+numpy.mgrid
+===========
+
+.. currentmodule:: numpy
+
+.. autofunction:: mgrid
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.geterrobj.rst
@@ -0,0 +1,6 @@
+numpy.geterrobj
+===============
+
+.. currentmodule:: numpy
+
+.. autofunction:: geterrobj
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.diagonal.rst
@@ -0,0 +1,6 @@
+numpy.diagonal
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: diagonal
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.mask_cols.rst
@@ -0,0 +1,6 @@
+numpy.ma.mask_cols
+==================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: mask_cols
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.zeros.rst
@@ -0,0 +1,6 @@
+numpy.zeros
+===========
+
+.. currentmodule:: numpy
+
+.. autofunction:: zeros
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.bitwise_and.rst
@@ -0,0 +1,6 @@
+numpy.bitwise_and
+=================
+
+.. currentmodule:: numpy
+
+.. autofunction:: bitwise_and
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.make_mask_descr.rst
@@ -0,0 +1,6 @@
+numpy.ma.make_mask_descr
+========================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: make_mask_descr
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.random_integers.rst
@@ -0,0 +1,6 @@
+numpy.random.random_integers
+============================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: random_integers
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.isscalar.rst
@@ -0,0 +1,6 @@
+numpy.isscalar
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: isscalar
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.frompyfunc.rst
@@ -0,0 +1,6 @@
+numpy.frompyfunc
+================
+
+.. currentmodule:: numpy
+
+.. autofunction:: frompyfunc
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.rand.rst
@@ -0,0 +1,6 @@
+numpy.random.rand
+=================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: rand
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.diag.rst
@@ -0,0 +1,6 @@
+numpy.diag
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: diag
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__neg__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__neg__
+=====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__neg__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.seed.rst
@@ -0,0 +1,6 @@
+numpy.random.seed
+=================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: seed
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.innerproduct.rst
@@ -0,0 +1,6 @@
+numpy.ma.innerproduct
+=====================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: innerproduct
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.not_equal.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.not_equal
+=================================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: not_equal
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.pv.rst
@@ -0,0 +1,6 @@
+numpy.pv
+========
+
+.. currentmodule:: numpy
+
+.. autofunction:: pv
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.base_repr.rst
@@ -0,0 +1,6 @@
+numpy.base_repr
+===============
+
+.. currentmodule:: numpy
+
+.. autofunction:: base_repr
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.records.fromarrays.rst
@@ -0,0 +1,6 @@
+numpy.core.records.fromarrays
+=============================
+
+.. currentmodule:: numpy.core.records
+
+.. autofunction:: fromarrays
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.swapaxes.rst
@@ -0,0 +1,6 @@
+numpy.swapaxes
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: swapaxes
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.distutils.misc_util.terminal_has_colors.rst
@@ -0,0 +1,6 @@
+numpy.distutils.misc_util.terminal_has_colors
+=============================================
+
+.. currentmodule:: numpy.distutils.misc_util
+
+.. autofunction:: terminal_has_colors
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.copysign.rst
@@ -0,0 +1,6 @@
+numpy.copysign
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: copysign
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.mask_rowcols.rst
@@ -0,0 +1,6 @@
+numpy.ma.mask_rowcols
+=====================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: mask_rowcols
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.argmax.rst
@@ -0,0 +1,6 @@
+numpy.ma.argmax
+===============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: argmax
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__le__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__le__
+====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__le__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.array_str.rst
@@ -0,0 +1,6 @@
+numpy.array_str
+===============
+
+.. currentmodule:: numpy
+
+.. autofunction:: array_str
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.expand_dims.rst
@@ -0,0 +1,6 @@
+numpy.ma.expand_dims
+====================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: expand_dims
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.conj.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.conj
+==================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.conj
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.logspace.rst
@@ -0,0 +1,6 @@
+numpy.logspace
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: logspace
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.linalg.norm.rst
@@ -0,0 +1,6 @@
+numpy.linalg.norm
+=================
+
+.. currentmodule:: numpy.linalg
+
+.. autofunction:: norm
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.real.rst
@@ -0,0 +1,6 @@
+numpy.real
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: real
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.remainder.rst
@@ -0,0 +1,6 @@
+numpy.remainder
+===============
+
+.. currentmodule:: numpy
+
+.. autofunction:: remainder
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.less.rst
@@ -0,0 +1,6 @@
+numpy.less
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: less
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.lstrip.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.lstrip
+==============================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: lstrip
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.i0.rst
@@ -0,0 +1,6 @@
+numpy.i0
+========
+
+.. currentmodule:: numpy
+
+.. autofunction:: i0
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.distutils.misc_util.is_local_src_dir.rst
@@ -0,0 +1,6 @@
+numpy.distutils.misc_util.is_local_src_dir
+==========================================
+
+.. currentmodule:: numpy.distutils.misc_util
+
+.. autofunction:: is_local_src_dir
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.flags.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.flags
+==========================
+
+.. currentmodule:: numpy.ma
+
+.. autoattribute:: MaskedArray.flags
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.masked_values.rst
@@ -0,0 +1,6 @@
+numpy.ma.masked_values
+======================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: masked_values
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.can_cast.rst
@@ -0,0 +1,6 @@
+numpy.can_cast
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: can_cast
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.rpartition.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.rpartition
+==================================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: rpartition
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.kron.rst
@@ -0,0 +1,6 @@
+numpy.kron
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: kron
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__le__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__le__
+===========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__le__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.subtract.rst
@@ -0,0 +1,6 @@
+numpy.subtract
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: subtract
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.geometric.rst
@@ -0,0 +1,6 @@
+numpy.random.geometric
+======================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: geometric
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.distutils.misc_util.yellow_text.rst
@@ -0,0 +1,6 @@
+numpy.distutils.misc_util.yellow_text
+=====================================
+
+.. currentmodule:: numpy.distutils.misc_util
+
+.. autofunction:: yellow_text
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.gradient.rst
@@ -0,0 +1,6 @@
+numpy.gradient
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: gradient
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.getbufsize.rst
@@ -0,0 +1,6 @@
+numpy.getbufsize
+================
+
+.. currentmodule:: numpy
+
+.. autofunction:: getbufsize
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.multinomial.rst
@@ -0,0 +1,6 @@
+numpy.random.multinomial
+========================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: multinomial
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.fft.fftfreq.rst
@@ -0,0 +1,6 @@
+numpy.fft.fftfreq
+=================
+
+.. currentmodule:: numpy.fft
+
+.. autofunction:: fftfreq
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__hex__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__hex__
+============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__hex__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__divmod__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__divmod__
+===============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__divmod__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__copy__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__copy__
+======================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__copy__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.hypergeometric.rst
@@ -0,0 +1,6 @@
+numpy.random.hypergeometric
+===========================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: hypergeometric
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.center.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.center
+==============================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: center
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.distutils.misc_util.all_strings.rst
@@ -0,0 +1,6 @@
+numpy.distutils.misc_util.all_strings
+=====================================
+
+.. currentmodule:: numpy.distutils.misc_util
+
+.. autofunction:: all_strings
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.allequal.rst
@@ -0,0 +1,6 @@
+numpy.ma.allequal
+=================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: allequal
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.splitlines.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.splitlines
+==================================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: splitlines
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.power.rst
@@ -0,0 +1,6 @@
+numpy.power
+===========
+
+.. currentmodule:: numpy
+
+.. autofunction:: power
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.linalg.inv.rst
@@ -0,0 +1,6 @@
+numpy.linalg.inv
+================
+
+.. currentmodule:: numpy.linalg
+
+.. autofunction:: inv
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.dtype.byteorder.rst
@@ -0,0 +1,6 @@
+numpy.dtype.byteorder
+=====================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: dtype.byteorder
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.trunc.rst
@@ -0,0 +1,6 @@
+numpy.trunc
+===========
+
+.. currentmodule:: numpy
+
+.. autofunction:: trunc
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__ior__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__ior__
+=====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__ior__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.arctan2.rst
@@ -0,0 +1,6 @@
+numpy.arctan2
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: arctan2
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.linalg.LinAlgError.rst
@@ -0,0 +1,6 @@
+numpy.linalg.LinAlgError
+========================
+
+.. currentmodule:: numpy.linalg
+
+.. autoexception:: LinAlgError
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.cos.rst
@@ -0,0 +1,6 @@
+numpy.cos
+=========
+
+.. currentmodule:: numpy
+
+.. autofunction:: cos
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__nonzero__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__nonzero__
+=========================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__nonzero__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.sort.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.sort
+=========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.sort
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.atleast_1d.rst
@@ -0,0 +1,6 @@
+numpy.atleast_1d
+================
+
+.. currentmodule:: numpy
+
+.. autofunction:: atleast_1d
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.permutation.rst
@@ -0,0 +1,6 @@
+numpy.random.permutation
+========================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: permutation
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.generic.real.rst
@@ -0,0 +1,6 @@
+numpy.generic.real
+==================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: generic.real
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.iinfo.rst
@@ -0,0 +1,6 @@
+numpy.iinfo
+===========
+
+.. currentmodule:: numpy
+
+.. autoclass:: iinfo
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.array_equal.rst
@@ -0,0 +1,6 @@
+numpy.array_equal
+=================
+
+.. currentmodule:: numpy
+
+.. autofunction:: array_equal
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.beta.rst
@@ -0,0 +1,6 @@
+numpy.random.beta
+=================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: beta
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.dtype.itemsize.rst
@@ -0,0 +1,6 @@
+numpy.dtype.itemsize
+====================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: dtype.itemsize
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.seterr.rst
@@ -0,0 +1,6 @@
+numpy.seterr
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: seterr
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.istitle.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.istitle
+===============================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: istitle
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.generic.dtype.rst
@@ -0,0 +1,6 @@
+numpy.generic.dtype
+===================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: generic.dtype
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.masked_object.rst
@@ -0,0 +1,6 @@
+numpy.ma.masked_object
+======================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: masked_object
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__array__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__array__
+==============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__array__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ix_.rst
@@ -0,0 +1,6 @@
+numpy.ix_
+=========
+
+.. currentmodule:: numpy
+
+.. autofunction:: ix_
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.piecewise.rst
@@ -0,0 +1,6 @@
+numpy.piecewise
+===============
+
+.. currentmodule:: numpy
+
+.. autofunction:: piecewise
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ones.rst
@@ -0,0 +1,6 @@
+numpy.ones
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: ones
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.lookfor.rst
@@ -0,0 +1,6 @@
+numpy.lookfor
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: lookfor
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.distutils.misc_util.red_text.rst
@@ -0,0 +1,6 @@
+numpy.distutils.misc_util.red_text
+==================================
+
+.. currentmodule:: numpy.distutils.misc_util
+
+.. autofunction:: red_text
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__rtruediv__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__rtruediv__
+=================================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__rtruediv__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.array_split.rst
@@ -0,0 +1,6 @@
+numpy.array_split
+=================
+
+.. currentmodule:: numpy
+
+.. autofunction:: array_split
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.choose.rst
@@ -0,0 +1,6 @@
+numpy.ma.choose
+===============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: choose
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.fft.ifftn.rst
@@ -0,0 +1,6 @@
+numpy.fft.ifftn
+===============
+
+.. currentmodule:: numpy.fft
+
+.. autofunction:: ifftn
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.cumprod.rst
@@ -0,0 +1,6 @@
+numpy.cumprod
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: cumprod
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.copy.rst
@@ -0,0 +1,6 @@
+numpy.copy
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: copy
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.unwrap.rst
@@ -0,0 +1,6 @@
+numpy.unwrap
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: unwrap
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.distutils.log.set_verbosity.rst
@@ -0,0 +1,6 @@
+numpy.distutils.log.set_verbosity
+=================================
+
+.. currentmodule:: numpy.distutils.log
+
+.. autofunction:: set_verbosity
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.convolve.rst
@@ -0,0 +1,6 @@
+numpy.convolve
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: convolve
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.noncentral_f.rst
@@ -0,0 +1,6 @@
+numpy.random.noncentral_f
+=========================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: noncentral_f
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.isreal.rst
@@ -0,0 +1,6 @@
+numpy.isreal
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: isreal
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__imod__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__imod__
+=============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__imod__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__contains__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__contains__
+=================================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__contains__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.diagonal.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.diagonal
+=============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.diagonal
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__rshift__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__rshift__
+===============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__rshift__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.harden_mask.rst
@@ -0,0 +1,6 @@
+numpy.ma.harden_mask
+====================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: harden_mask
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.choose.rst
@@ -0,0 +1,6 @@
+numpy.choose
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: choose
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.array.rst
@@ -0,0 +1,6 @@
+numpy.ma.array
+==============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: array
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.resize.rst
@@ -0,0 +1,6 @@
+numpy.ma.resize
+===============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: resize
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.msort.rst
@@ -0,0 +1,6 @@
+numpy.msort
+===========
+
+.. currentmodule:: numpy
+
+.. autofunction:: msort
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.diagonal.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.diagonal
+======================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.diagonal
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.union1d.rst
@@ -0,0 +1,6 @@
+numpy.union1d
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: union1d
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__xor__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__xor__
+=====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__xor__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.issctype.rst
@@ -0,0 +1,6 @@
+numpy.issctype
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: issctype
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.equal.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.equal
+=============================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: equal
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.rayleigh.rst
@@ -0,0 +1,6 @@
+numpy.random.rayleigh
+=====================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: rayleigh
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.generic.shape.rst
@@ -0,0 +1,6 @@
+numpy.generic.shape
+===================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: generic.shape
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.take.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.take
+=========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.take
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.dtype.name.rst
@@ -0,0 +1,6 @@
+numpy.dtype.name
+================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: dtype.name
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__setstate__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__setstate__
+==========================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__setstate__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.unique.rst
@@ -0,0 +1,6 @@
+numpy.unique
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: unique
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ufunc.reduce.rst
@@ -0,0 +1,6 @@
+numpy.ufunc.reduce
+==================
+
+.. currentmodule:: numpy
+
+.. automethod:: ufunc.reduce
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.interp.rst
@@ -0,0 +1,6 @@
+numpy.interp
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: interp
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.noncentral_chisquare.rst
@@ -0,0 +1,6 @@
+numpy.random.noncentral_chisquare
+=================================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: noncentral_chisquare
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.fix_invalid.rst
@@ -0,0 +1,6 @@
+numpy.ma.fix_invalid
+====================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: fix_invalid
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__getslice__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__getslice__
+==========================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__getslice__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.reshape.rst
@@ -0,0 +1,6 @@
+numpy.reshape
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: reshape
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.right_shift.rst
@@ -0,0 +1,6 @@
+numpy.right_shift
+=================
+
+.. currentmodule:: numpy
+
+.. autofunction:: right_shift
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.make_mask_none.rst
@@ -0,0 +1,6 @@
+numpy.ma.make_mask_none
+=======================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: make_mask_none
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__ior__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__ior__
+============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__ior__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.alterdot.rst
@@ -0,0 +1,6 @@
+numpy.alterdot
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: alterdot
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.fromiter.rst
@@ -0,0 +1,6 @@
+numpy.fromiter
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: fromiter
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.dtype.descr.rst
@@ -0,0 +1,6 @@
+numpy.dtype.descr
+=================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: dtype.descr
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.partition.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.partition
+=================================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: partition
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.asfarray.rst
@@ -0,0 +1,6 @@
+numpy.asfarray
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: asfarray
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.distutils.misc_util.generate_config_py.rst
@@ -0,0 +1,6 @@
+numpy.distutils.misc_util.generate_config_py
+============================================
+
+.. currentmodule:: numpy.distutils.misc_util
+
+.. autofunction:: generate_config_py
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__setslice__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__setslice__
+==========================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__setslice__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.multiply.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.multiply
+================================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: multiply
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.soften_mask.rst
@@ -0,0 +1,6 @@
+numpy.ma.soften_mask
+====================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: soften_mask
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.trace.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.trace
+==========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.trace
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.vectorize.rst
@@ -0,0 +1,6 @@
+numpy.vectorize
+===============
+
+.. currentmodule:: numpy
+
+.. autoclass:: vectorize
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.hstack.rst
@@ -0,0 +1,6 @@
+numpy.hstack
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: hstack
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.count.rst
@@ -0,0 +1,6 @@
+numpy.ma.count
+==============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: count
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.argsort.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.argsort
+=====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.argsort
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.mod.rst
@@ -0,0 +1,6 @@
+numpy.mod
+=========
+
+.. currentmodule:: numpy
+
+.. autofunction:: mod
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__nonzero__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__nonzero__
+================================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__nonzero__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.product.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.product
+============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.product
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.kaiser.rst
@@ -0,0 +1,6 @@
+numpy.kaiser
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: kaiser
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.triu.rst
@@ -0,0 +1,6 @@
+numpy.triu
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: triu
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.linalg.eigvals.rst
@@ -0,0 +1,6 @@
+numpy.linalg.eigvals
+====================
+
+.. currentmodule:: numpy.linalg
+
+.. autofunction:: eigvals
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.dtype.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.dtype
+==========================
+
+.. currentmodule:: numpy.ma
+
+.. autoattribute:: MaskedArray.dtype
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__deepcopy__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__deepcopy__
+=================================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__deepcopy__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.argmax.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.argmax
+====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.argmax
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.linalg.pinv.rst
@@ -0,0 +1,6 @@
+numpy.linalg.pinv
+=================
+
+.. currentmodule:: numpy.linalg
+
+.. autofunction:: pinv
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__and__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__and__
+=====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__and__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__or__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__or__
+====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__or__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.divide.rst
@@ -0,0 +1,6 @@
+numpy.divide
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: divide
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.unshare_mask.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.unshare_mask
+=================================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.unshare_mask
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.round.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.round
+===================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.round
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__div__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__div__
+=====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__div__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.argmin.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.argmin
+===========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.argmin
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__iand__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__iand__
+======================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__iand__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.asarray.rst
@@ -0,0 +1,6 @@
+numpy.asarray
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: asarray
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.squeeze.rst
@@ -0,0 +1,6 @@
+numpy.squeeze
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: squeeze
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.loads.rst
@@ -0,0 +1,6 @@
+numpy.ma.loads
+==============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: loads
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.ptp.rst
@@ -0,0 +1,6 @@
+numpy.ma.ptp
+============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: ptp
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.empty.rst
@@ -0,0 +1,6 @@
+numpy.ma.empty
+==============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: empty
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.get_printoptions.rst
@@ -0,0 +1,6 @@
+numpy.get_printoptions
+======================
+
+.. currentmodule:: numpy
+
+.. autofunction:: get_printoptions
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.tanh.rst
@@ -0,0 +1,6 @@
+numpy.tanh
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: tanh
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.hsplit.rst
@@ -0,0 +1,6 @@
+numpy.hsplit
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: hsplit
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__ilshift__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__ilshift__
+================================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__ilshift__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.linalg.eigh.rst
@@ -0,0 +1,6 @@
+numpy.linalg.eigh
+=================
+
+.. currentmodule:: numpy.linalg
+
+.. autofunction:: eigh
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.record.rst
@@ -0,0 +1,6 @@
+numpy.record
+============
+
+.. currentmodule:: numpy
+
+.. autoclass:: record
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.prod.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.prod
+==================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.prod
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.compress.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.compress
+=============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.compress
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.mean.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.mean
+=========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.mean
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.dstack.rst
@@ -0,0 +1,6 @@
+numpy.dstack
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: dstack
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.isneginf.rst
@@ -0,0 +1,6 @@
+numpy.isneginf
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: isneginf
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.arcsinh.rst
@@ -0,0 +1,6 @@
+numpy.arcsinh
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: arcsinh
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.diagflat.rst
@@ -0,0 +1,6 @@
+numpy.diagflat
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: diagflat
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.shrink_mask.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.shrink_mask
+================================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.shrink_mask
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.flatiter.rst
@@ -0,0 +1,6 @@
+numpy.flatiter
+==============
+
+.. currentmodule:: numpy
+
+.. autoclass:: flatiter
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.savez.rst
@@ -0,0 +1,6 @@
+numpy.savez
+===========
+
+.. currentmodule:: numpy
+
+.. autofunction:: savez
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.min.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.min
+========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.min
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.isrealobj.rst
@@ -0,0 +1,6 @@
+numpy.isrealobj
+===============
+
+.. currentmodule:: numpy
+
+.. autofunction:: isrealobj
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__deepcopy__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__deepcopy__
+==========================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__deepcopy__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.format_parser.rst
@@ -0,0 +1,6 @@
+numpy.format_parser
+===================
+
+.. currentmodule:: numpy
+
+.. autoclass:: format_parser
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.generic.setflags.rst
@@ -0,0 +1,6 @@
+numpy.generic.setflags
+======================
+
+.. currentmodule:: numpy
+
+.. automethod:: generic.setflags
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__lshift__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__lshift__
+===============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__lshift__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.dtype.type.rst
@@ -0,0 +1,6 @@
+numpy.dtype.type
+================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: dtype.type
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.T.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.T
+===============
+
+.. currentmodule:: numpy
+
+.. autoattribute:: ndarray.T
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.ndim.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.ndim
+==================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: ndarray.ndim
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.tofile.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.tofile
+===========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.tofile
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.tril_indices.rst
@@ -0,0 +1,6 @@
+numpy.tril_indices
+==================
+
+.. currentmodule:: numpy
+
+.. autofunction:: tril_indices
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.nan_to_num.rst
@@ -0,0 +1,6 @@
+numpy.nan_to_num
+================
+
+.. currentmodule:: numpy
+
+.. autofunction:: nan_to_num
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.diff.rst
@@ -0,0 +1,6 @@
+numpy.diff
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: diff
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.negative.rst
@@ -0,0 +1,6 @@
+numpy.negative
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: negative
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__rpow__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__rpow__
+=============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__rpow__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__float__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__float__
+=======================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__float__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.filled.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.filled
+===========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.filled
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.seterrobj.rst
@@ -0,0 +1,6 @@
+numpy.seterrobj
+===============
+
+.. currentmodule:: numpy
+
+.. autofunction:: seterrobj
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.data.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.data
+=========================
+
+.. currentmodule:: numpy.ma
+
+.. autoattribute:: MaskedArray.data
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.reshape.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.reshape
+============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.reshape
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.distutils.misc_util.cyg2win32.rst
@@ -0,0 +1,6 @@
+numpy.distutils.misc_util.cyg2win32
+===================================
+
+.. currentmodule:: numpy.distutils.misc_util
+
+.. autofunction:: cyg2win32
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.data.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.data
+==================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: ndarray.data
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.modf.rst
@@ -0,0 +1,6 @@
+numpy.modf
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: modf
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.isposinf.rst
@@ -0,0 +1,6 @@
+numpy.isposinf
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: isposinf
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.transpose.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.transpose
+==============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.transpose
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.min.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.min
+=================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.min
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.DataSource.rst
@@ -0,0 +1,6 @@
+numpy.DataSource
+================
+
+.. currentmodule:: numpy
+
+.. autoclass:: DataSource
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.copy.rst
@@ -0,0 +1,6 @@
+numpy.ma.copy
+=============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: copy
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.nbytes.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.nbytes
+===========================
+
+.. currentmodule:: numpy.ma
+
+.. autoattribute:: MaskedArray.nbytes
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.dtype.__reduce__.rst
@@ -0,0 +1,6 @@
+numpy.dtype.__reduce__
+======================
+
+.. currentmodule:: numpy
+
+.. automethod:: dtype.__reduce__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.vander.rst
@@ -0,0 +1,6 @@
+numpy.ma.vander
+===============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: vander
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.dtype.flags.rst
@@ -0,0 +1,6 @@
+numpy.dtype.flags
+=================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: dtype.flags
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.choose.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.choose
+====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.choose
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.max.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.max
+========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.max
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.r_.rst
@@ -0,0 +1,6 @@
+numpy.r_
+========
+
+.. currentmodule:: numpy
+
+.. autofunction:: r_
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.generic.flags.rst
@@ -0,0 +1,6 @@
+numpy.generic.flags
+===================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: generic.flags
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.cumsum.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.cumsum
+===========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.cumsum
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.clip.rst
@@ -0,0 +1,6 @@
+numpy.clip
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: clip
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.encode.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.encode
+==============================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: encode
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.tostring.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.tostring
+======================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.tostring
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.rint.rst
@@ -0,0 +1,6 @@
+numpy.rint
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: rint
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.reciprocal.rst
@@ -0,0 +1,6 @@
+numpy.reciprocal
+================
+
+.. currentmodule:: numpy
+
+.. autofunction:: reciprocal
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.seterrcall.rst
@@ -0,0 +1,6 @@
+numpy.seterrcall
+================
+
+.. currentmodule:: numpy
+
+.. autofunction:: seterrcall
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.ptp.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.ptp
+========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.ptp
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.linalg.lstsq.rst
@@ -0,0 +1,6 @@
+numpy.linalg.lstsq
+==================
+
+.. currentmodule:: numpy.linalg
+
+.. autofunction:: lstsq
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.testing.decorators.skipif.rst
@@ -0,0 +1,6 @@
+numpy.testing.decorators.skipif
+===============================
+
+.. currentmodule:: numpy.testing.decorators
+
+.. autofunction:: skipif
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.deg2rad.rst
@@ -0,0 +1,6 @@
+numpy.deg2rad
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: deg2rad
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.not_equal.rst
@@ -0,0 +1,6 @@
+numpy.not_equal
+===============
+
+.. currentmodule:: numpy
+
+.. autofunction:: not_equal
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ufunc.ntypes.rst
@@ -0,0 +1,6 @@
+numpy.ufunc.ntypes
+==================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: ufunc.ntypes
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.laplace.rst
@@ -0,0 +1,6 @@
+numpy.random.laplace
+====================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: laplace
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.ctypes.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.ctypes
+====================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: ndarray.ctypes
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.getfield.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.getfield
+======================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.getfield
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.fft.fft2.rst
@@ -0,0 +1,6 @@
+numpy.fft.fft2
+==============
+
+.. currentmodule:: numpy.fft
+
+.. autofunction:: fft2
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.obj2sctype.rst
@@ -0,0 +1,6 @@
+numpy.obj2sctype
+================
+
+.. currentmodule:: numpy
+
+.. autofunction:: obj2sctype
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ceil.rst
@@ -0,0 +1,6 @@
+numpy.ceil
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: ceil
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.harden_mask.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.harden_mask
+================================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.harden_mask
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.cumprod.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.cumprod
+============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.cumprod
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__gt__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__gt__
+===========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__gt__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.mean.rst
@@ -0,0 +1,6 @@
+numpy.ma.mean
+=============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: mean
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.distutils.misc_util.has_cxx_sources.rst
@@ -0,0 +1,6 @@
+numpy.distutils.misc_util.has_cxx_sources
+=========================================
+
+.. currentmodule:: numpy.distutils.misc_util
+
+.. autofunction:: has_cxx_sources
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.polymul.rst
@@ -0,0 +1,6 @@
+numpy.polymul
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: polymul
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.dsplit.rst
@@ -0,0 +1,6 @@
+numpy.dsplit
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: dsplit
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.place.rst
@@ -0,0 +1,6 @@
+numpy.place
+===========
+
+.. currentmodule:: numpy
+
+.. autofunction:: place
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.testing.assert_almost_equal.rst
@@ -0,0 +1,6 @@
+numpy.testing.assert_almost_equal
+=================================
+
+.. currentmodule:: numpy.testing
+
+.. autofunction:: assert_almost_equal
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.restoredot.rst
@@ -0,0 +1,6 @@
+numpy.restoredot
+================
+
+.. currentmodule:: numpy
+
+.. autofunction:: restoredot
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ones_like.rst
@@ -0,0 +1,6 @@
+numpy.ones_like
+===============
+
+.. currentmodule:: numpy
+
+.. autofunction:: ones_like
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.arccos.rst
@@ -0,0 +1,6 @@
+numpy.arccos
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: arccos
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.corrcoef.rst
@@ -0,0 +1,6 @@
+numpy.ma.corrcoef
+=================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: corrcoef
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.identity.rst
@@ -0,0 +1,6 @@
+numpy.identity
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: identity
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.genfromtxt.rst
@@ -0,0 +1,6 @@
+numpy.genfromtxt
+================
+
+.. currentmodule:: numpy
+
+.. autofunction:: genfromtxt
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.standard_cauchy.rst
@@ -0,0 +1,6 @@
+numpy.random.standard_cauchy
+============================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: standard_cauchy
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.testing.assert_equal.rst
@@ -0,0 +1,6 @@
+numpy.testing.assert_equal
+==========================
+
+.. currentmodule:: numpy.testing
+
+.. autofunction:: assert_equal
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ascontiguousarray.rst
@@ -0,0 +1,6 @@
+numpy.ascontiguousarray
+=======================
+
+.. currentmodule:: numpy
+
+.. autofunction:: ascontiguousarray
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.cov.rst
@@ -0,0 +1,6 @@
+numpy.ma.cov
+============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: cov
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.any.rst
@@ -0,0 +1,6 @@
+numpy.ma.any
+============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: any
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.mirr.rst
@@ -0,0 +1,6 @@
+numpy.mirr
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: mirr
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.logical_not.rst
@@ -0,0 +1,6 @@
+numpy.logical_not
+=================
+
+.. currentmodule:: numpy
+
+.. autofunction:: logical_not
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__ixor__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__ixor__
+=============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__ixor__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.distutils.misc_util.get_script_files.rst
@@ -0,0 +1,6 @@
+numpy.distutils.misc_util.get_script_files
+==========================================
+
+.. currentmodule:: numpy.distutils.misc_util
+
+.. autofunction:: get_script_files
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.standard_normal.rst
@@ -0,0 +1,6 @@
+numpy.random.standard_normal
+============================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: standard_normal
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.argmin.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.argmin
+====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.argmin
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__ipow__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__ipow__
+======================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__ipow__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.swapaxes.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.swapaxes
+======================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.swapaxes
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.startswith.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.startswith
+==================================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: startswith
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.allclose.rst
@@ -0,0 +1,6 @@
+numpy.ma.allclose
+=================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: allclose
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.view.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.view
+==================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.view
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.take.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.take
+==================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.take
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.cross.rst
@@ -0,0 +1,6 @@
+numpy.cross
+===========
+
+.. currentmodule:: numpy
+
+.. autofunction:: cross
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.distutils.misc_util.green_text.rst
@@ -0,0 +1,6 @@
+numpy.distutils.misc_util.green_text
+====================================
+
+.. currentmodule:: numpy.distutils.misc_util
+
+.. autofunction:: green_text
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.all.rst
@@ -0,0 +1,6 @@
+numpy.all
+=========
+
+.. currentmodule:: numpy
+
+.. autofunction:: all
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.hanning.rst
@@ -0,0 +1,6 @@
+numpy.hanning
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: hanning
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.absolute.rst
@@ -0,0 +1,6 @@
+numpy.absolute
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: absolute
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.var.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.var
+========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.var
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.select.rst
@@ -0,0 +1,6 @@
+numpy.select
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: select
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.prod.rst
@@ -0,0 +1,6 @@
+numpy.prod
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: prod
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.distutils.misc_util.appendpath.rst
@@ -0,0 +1,6 @@
+numpy.distutils.misc_util.appendpath
+====================================
+
+.. currentmodule:: numpy.distutils.misc_util
+
+.. autofunction:: appendpath
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.sinh.rst
@@ -0,0 +1,6 @@
+numpy.sinh
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: sinh
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.linalg.cholesky.rst
@@ -0,0 +1,6 @@
+numpy.linalg.cholesky
+=====================
+
+.. currentmodule:: numpy.linalg
+
+.. autofunction:: cholesky
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.chararray.rst
@@ -0,0 +1,6 @@
+numpy.chararray
+===============
+
+.. currentmodule:: numpy
+
+.. autoclass:: chararray
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.c_.rst
@@ -0,0 +1,6 @@
+numpy.c_
+========
+
+.. currentmodule:: numpy
+
+.. autofunction:: c_
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.logaddexp2.rst
@@ -0,0 +1,6 @@
+numpy.logaddexp2
+================
+
+.. currentmodule:: numpy
+
+.. autofunction:: logaddexp2
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.append.rst
@@ -0,0 +1,6 @@
+numpy.append
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: append
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.anom.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.anom
+=========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.anom
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.atleast_2d.rst
@@ -0,0 +1,6 @@
+numpy.atleast_2d
+================
+
+.. currentmodule:: numpy
+
+.. autofunction:: atleast_2d
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.zeros.rst
@@ -0,0 +1,6 @@
+numpy.ma.zeros
+==============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: zeros
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.mr_.rst
@@ -0,0 +1,6 @@
+numpy.ma.mr_
+============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: mr_
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.fromfile.rst
@@ -0,0 +1,6 @@
+numpy.fromfile
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: fromfile
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.cumsum.rst
@@ -0,0 +1,6 @@
+numpy.ma.cumsum
+===============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: cumsum
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.argmax.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.argmax
+===========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.argmax
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.arctanh.rst
@@ -0,0 +1,6 @@
+numpy.arctanh
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: arctanh
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.apply_over_axes.rst
@@ -0,0 +1,6 @@
+numpy.apply_over_axes
+=====================
+
+.. currentmodule:: numpy
+
+.. autofunction:: apply_over_axes
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.tril.rst
@@ -0,0 +1,6 @@
+numpy.tril
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: tril
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.argsort.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.argsort
+============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.argsort
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.anomalies.rst
@@ -0,0 +1,6 @@
+numpy.ma.anomalies
+==================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: anomalies
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.roots.rst
@@ -0,0 +1,6 @@
+numpy.roots
+===========
+
+.. currentmodule:: numpy
+
+.. autofunction:: roots
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.count_masked.rst
@@ -0,0 +1,6 @@
+numpy.ma.count_masked
+=====================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: count_masked
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__reduce__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__reduce__
+===============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__reduce__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.view.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.view
+=========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.view
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.multiply.rst
@@ -0,0 +1,6 @@
+numpy.multiply
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: multiply
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.linalg.eigvalsh.rst
@@ -0,0 +1,6 @@
+numpy.linalg.eigvalsh
+=====================
+
+.. currentmodule:: numpy.linalg
+
+.. autofunction:: eigvalsh
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.hypot.rst
@@ -0,0 +1,6 @@
+numpy.hypot
+===========
+
+.. currentmodule:: numpy
+
+.. autofunction:: hypot
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.conjugate.rst
@@ -0,0 +1,6 @@
+numpy.ma.conjugate
+==================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: conjugate
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.cumsum.rst
@@ -0,0 +1,6 @@
+numpy.cumsum
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: cumsum
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.shape.rst
@@ -0,0 +1,6 @@
+numpy.ma.shape
+==============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: shape
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__oct__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__oct__
+============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__oct__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.testing.decorators.deprecated.rst
@@ -0,0 +1,6 @@
+numpy.testing.decorators.deprecated
+===================================
+
+.. currentmodule:: numpy.testing.decorators
+
+.. autofunction:: deprecated
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.testing.Tester.rst
@@ -0,0 +1,6 @@
+numpy.testing.Tester
+====================
+
+.. currentmodule:: numpy.testing
+
+.. autoclass:: Tester
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.less_equal.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.less_equal
+==================================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: less_equal
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.arctan.rst
@@ -0,0 +1,6 @@
+numpy.arctan
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: arctan
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__invert__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__invert__
+========================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__invert__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.std.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.std
+=================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.std
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.matrix.rst
@@ -0,0 +1,6 @@
+numpy.matrix
+============
+
+.. currentmodule:: numpy
+
+.. autoclass:: matrix
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.setflags.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.setflags
+======================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.setflags
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.setxor1d.rst
@@ -0,0 +1,6 @@
+numpy.setxor1d
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: setxor1d
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.triangular.rst
@@ -0,0 +1,6 @@
+numpy.random.triangular
+=======================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: triangular
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__array_priority__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__array_priority__
+=======================================
+
+.. currentmodule:: numpy.ma.MaskedArray
+
+.. autofunction:: __array_priority__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.log10.rst
@@ -0,0 +1,6 @@
+numpy.log10
+===========
+
+.. currentmodule:: numpy
+
+.. autofunction:: log10
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.dtype.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.dtype
+===================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: ndarray.dtype
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.polyadd.rst
@@ -0,0 +1,6 @@
+numpy.polyadd
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: polyadd
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.make_mask.rst
@@ -0,0 +1,6 @@
+numpy.ma.make_mask
+==================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: make_mask
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ufunc.reduceat.rst
@@ -0,0 +1,6 @@
+numpy.ufunc.reduceat
+====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ufunc.reduceat
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.shuffle.rst
@@ -0,0 +1,6 @@
+numpy.random.shuffle
+====================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: shuffle
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.any.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.any
+========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.any
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__long__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__long__
+=============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__long__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.sort_complex.rst
@@ -0,0 +1,6 @@
+numpy.sort_complex
+==================
+
+.. currentmodule:: numpy
+
+.. autofunction:: sort_complex
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.ljust.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.ljust
+=============================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: ljust
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.dtype.isnative.rst
@@ -0,0 +1,6 @@
+numpy.dtype.isnative
+====================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: dtype.isnative
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.distutils.misc_util.dot_join.rst
@@ -0,0 +1,6 @@
+numpy.distutils.misc_util.dot_join
+==================================
+
+.. currentmodule:: numpy.distutils.misc_util
+
+.. autofunction:: dot_join
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.median.rst
@@ -0,0 +1,6 @@
+numpy.ma.median
+===============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: median
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.fft.fftshift.rst
@@ -0,0 +1,6 @@
+numpy.fft.fftshift
+==================
+
+.. currentmodule:: numpy.fft
+
+.. autofunction:: fftshift
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.byteswap.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.byteswap
+======================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.byteswap
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.compress.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.compress
+======================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.compress
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.iscontiguous.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.iscontiguous
+=================================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.iscontiguous
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.item.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.item
+==================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.item
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.masked_greater_equal.rst
@@ -0,0 +1,6 @@
+numpy.ma.masked_greater_equal
+=============================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: masked_greater_equal
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.logaddexp.rst
@@ -0,0 +1,6 @@
+numpy.logaddexp
+===============
+
+.. currentmodule:: numpy
+
+.. autofunction:: logaddexp
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__irshift__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__irshift__
+================================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__irshift__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__rmod__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__rmod__
+=============================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__rmod__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.dot.rst
@@ -0,0 +1,6 @@
+numpy.ma.dot
+============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: dot
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.min.rst
@@ -0,0 +1,6 @@
+numpy.ma.min
+============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: min
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__ifloordiv__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__ifloordiv__
+===========================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__ifloordiv__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.ediff1d.rst
@@ -0,0 +1,6 @@
+numpy.ma.ediff1d
+================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: ediff1d
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.eye.rst
@@ -0,0 +1,6 @@
+numpy.eye
+=========
+
+.. currentmodule:: numpy
+
+.. autofunction:: eye
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.rate.rst
@@ -0,0 +1,6 @@
+numpy.rate
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: rate
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.maximum_fill_value.rst
@@ -0,0 +1,6 @@
+numpy.ma.maximum_fill_value
+===========================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: maximum_fill_value
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.packbits.rst
@@ -0,0 +1,6 @@
+numpy.packbits
+==============
+
+.. currentmodule:: numpy
+
+.. autofunction:: packbits
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.reshape.rst
@@ -0,0 +1,6 @@
+numpy.ma.reshape
+================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: reshape
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.fft.irfftn.rst
@@ -0,0 +1,6 @@
+numpy.fft.irfftn
+================
+
+.. currentmodule:: numpy.fft
+
+.. autofunction:: irfftn
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.in1d.rst
@@ -0,0 +1,6 @@
+numpy.in1d
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: in1d
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.fabs.rst
@@ -0,0 +1,6 @@
+numpy.fabs
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: fabs
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.dstack.rst
@@ -0,0 +1,6 @@
+numpy.ma.dstack
+===============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: dstack
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.exp.rst
@@ -0,0 +1,6 @@
+numpy.exp
+=========
+
+.. currentmodule:: numpy
+
+.. autofunction:: exp
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.add.rst
@@ -0,0 +1,6 @@
+numpy.add
+=========
+
+.. currentmodule:: numpy
+
+.. autofunction:: add
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.floor.rst
@@ -0,0 +1,6 @@
+numpy.floor
+===========
+
+.. currentmodule:: numpy
+
+.. autofunction:: floor
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ppmt.rst
@@ -0,0 +1,6 @@
+numpy.ppmt
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: ppmt
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__pow__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__pow__
+=====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__pow__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__truediv__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__truediv__
+=========================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__truediv__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__rdivmod__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__rdivmod__
+================================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__rdivmod__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.astype.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.astype
+===========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.astype
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.roll.rst
@@ -0,0 +1,6 @@
+numpy.roll
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: roll
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.vonmises.rst
@@ -0,0 +1,6 @@
+numpy.random.vonmises
+=====================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: vonmises
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ipmt.rst
@@ -0,0 +1,6 @@
+numpy.ipmt
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: ipmt
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.getdata.rst
@@ -0,0 +1,6 @@
+numpy.ma.getdata
+================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: getdata
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.conj.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.conj
+=========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.conj
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.rfind.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.rfind
+=============================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: rfind
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.isalpha.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.isalpha
+===============================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: isalpha
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.generic.byteswap.rst
@@ -0,0 +1,6 @@
+numpy.generic.byteswap
+======================
+
+.. currentmodule:: numpy
+
+.. automethod:: generic.byteswap
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.flatnonzero.rst
@@ -0,0 +1,6 @@
+numpy.flatnonzero
+=================
+
+.. currentmodule:: numpy
+
+.. autofunction:: flatnonzero
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.title.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.title
+=============================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: title
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.testing.assert_array_almost_equal.rst
@@ -0,0 +1,6 @@
+numpy.testing.assert_array_almost_equal
+=======================================
+
+.. currentmodule:: numpy.testing
+
+.. autofunction:: assert_array_almost_equal
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.linalg.det.rst
@@ -0,0 +1,6 @@
+numpy.linalg.det
+================
+
+.. currentmodule:: numpy.linalg
+
+.. autofunction:: det
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.generic.size.rst
@@ -0,0 +1,6 @@
+numpy.generic.size
+==================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: generic.size
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.isdigit.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.isdigit
+===============================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: isdigit
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.distutils.misc_util.get_numpy_include_dirs.rst
@@ -0,0 +1,6 @@
+numpy.distutils.misc_util.get_numpy_include_dirs
+================================================
+
+.. currentmodule:: numpy.distutils.misc_util
+
+.. autofunction:: get_numpy_include_dirs
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.clip.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.clip
+=========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.clip
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.T.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.T
+======================
+
+.. currentmodule:: numpy.ma
+
+.. autoattribute:: MaskedArray.T
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.put.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.put
+=================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.put
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.isinf.rst
@@ -0,0 +1,6 @@
+numpy.isinf
+===========
+
+.. currentmodule:: numpy
+
+.. autofunction:: isinf
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__lshift__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__lshift__
+========================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__lshift__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.distutils.misc_util.filter_sources.rst
@@ -0,0 +1,6 @@
+numpy.distutils.misc_util.filter_sources
+========================================
+
+.. currentmodule:: numpy.distutils.misc_util
+
+.. autofunction:: filter_sources
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.arccosh.rst
@@ -0,0 +1,6 @@
+numpy.arccosh
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: arccosh
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.vstack.rst
@@ -0,0 +1,6 @@
+numpy.vstack
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: vstack
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndenumerate.rst
@@ -0,0 +1,6 @@
+numpy.ndenumerate
+=================
+
+.. currentmodule:: numpy
+
+.. autoclass:: ndenumerate
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.outer.rst
@@ -0,0 +1,6 @@
+numpy.ma.outer
+==============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: outer
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.trim_zeros.rst
@@ -0,0 +1,6 @@
+numpy.trim_zeros
+================
+
+.. currentmodule:: numpy
+
+.. autofunction:: trim_zeros
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.random.randint.rst
@@ -0,0 +1,6 @@
+numpy.random.randint
+====================
+
+.. currentmodule:: numpy.random
+
+.. autofunction:: randint
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.records.array.rst
@@ -0,0 +1,6 @@
+numpy.core.records.array
+========================
+
+.. currentmodule:: numpy.core.records
+
+.. autofunction:: array
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.nanargmin.rst
@@ -0,0 +1,6 @@
+numpy.nanargmin
+===============
+
+.. currentmodule:: numpy
+
+.. autofunction:: nanargmin
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.generic.__array_struct__.rst
@@ -0,0 +1,6 @@
+numpy.generic.__array_struct__
+==============================
+
+.. currentmodule:: numpy
+
+.. autoattribute:: generic.__array_struct__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__rlshift__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__rlshift__
+================================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__rlshift__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.ravel.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.ravel
+===================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.ravel
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.linalg.svd.rst
@@ -0,0 +1,6 @@
+numpy.linalg.svd
+================
+
+.. currentmodule:: numpy.linalg
+
+.. autofunction:: svd
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.info.rst
@@ -0,0 +1,6 @@
+numpy.info
+==========
+
+.. currentmodule:: numpy
+
+.. autofunction:: info
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.searchsorted.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.searchsorted
+==========================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.searchsorted
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.index.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.index
+=============================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: index
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.less.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.less
+============================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: less
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.asarray.rst
@@ -0,0 +1,6 @@
+numpy.ma.asarray
+================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: asarray
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.nonzero.rst
@@ -0,0 +1,6 @@
+numpy.ma.nonzero
+================
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: nonzero
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.array_repr.rst
@@ -0,0 +1,6 @@
+numpy.array_repr
+================
+
+.. currentmodule:: numpy
+
+.. autofunction:: array_repr
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.core.defchararray.upper.rst
@@ -0,0 +1,6 @@
+numpy.core.defchararray.upper
+=============================
+
+.. currentmodule:: numpy.core.defchararray
+
+.. autofunction:: upper
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.__or__.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.__or__
+===========================
+
+.. currentmodule:: numpy.ma
+
+.. automethod:: MaskedArray.__or__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.around.rst
@@ -0,0 +1,6 @@
+numpy.ma.around
+===============
+
+.. currentmodule:: numpy.ma
+
+.. autofunction:: around
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ufunc.accumulate.rst
@@ -0,0 +1,6 @@
+numpy.ufunc.accumulate
+======================
+
+.. currentmodule:: numpy
+
+.. automethod:: ufunc.accumulate
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ndarray.__int__.rst
@@ -0,0 +1,6 @@
+numpy.ndarray.__int__
+=====================
+
+.. currentmodule:: numpy
+
+.. automethod:: ndarray.__int__
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.polyder.rst
@@ -0,0 +1,6 @@
+numpy.polyder
+=============
+
+.. currentmodule:: numpy
+
+.. autofunction:: polyder
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.resize.rst
@@ -0,0 +1,6 @@
+numpy.resize
+============
+
+.. currentmodule:: numpy
+
+.. autofunction:: resize
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.ma.MaskedArray.base.rst
@@ -0,0 +1,6 @@
+numpy.ma.MaskedArray.base
+=========================
+
+.. currentmodule:: numpy.ma
+
+.. autoattribute:: MaskedArray.base
--- /dev/null
+++ python-numpy-1.4.1/doc/source/reference/generated/numpy.asanyarray.rst
@@ -0,0 +1,6 @@
+numpy.asanyarray
+================
+
+.. currentmodule:: numpy
+
+.. autofunction:: asanyarray
--- /dev/null
+++ python-numpy-1.4.1/numpy/f2py/docs/usersguide/index.html
@@ -0,0 +1,2600 @@
+<?xml version="1.0" encoding="utf-8" ?>
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
+<head>
+<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
+<meta name="generator" content="Docutils 0.7: http://docutils.sourceforge.net/" />
+<title>F2PY Users Guide and Reference Manual</title>
+<meta name="author" content="Pearu Peterson" />
+<meta name="date" content="2005-04-02" />
+<style type="text/css">
+
+/*
+:Author: David Goodger (goodger@python.org)
+:Id: $Id: html4css1.css 6253 2010-03-02 00:24:53Z milde $
+:Copyright: This stylesheet has been placed in the public domain.
+
+Default cascading style sheet for the HTML output of Docutils.
+
+See http://docutils.sf.net/docs/howto/html-stylesheets.html for how to
+customize this style sheet.
+*/
+
+/* used to remove borders from tables and images */
+.borderless, table.borderless td, table.borderless th {
+  border: 0 }
+
+table.borderless td, table.borderless th {
+  /* Override padding for "table.docutils td" with "! important".
+     The right padding separates the table cells. */
+  padding: 0 0.5em 0 0 ! important }
+
+.first {
+  /* Override more specific margin styles with "! important". */
+  margin-top: 0 ! important }
+
+.last, .with-subtitle {
+  margin-bottom: 0 ! important }
+
+.hidden {
+  display: none }
+
+a.toc-backref {
+  text-decoration: none ;
+  color: black }
+
+blockquote.epigraph {
+  margin: 2em 5em ; }
+
+dl.docutils dd {
+  margin-bottom: 0.5em }
+
+/* Uncomment (and remove this text!) to get bold-faced definition list terms
+dl.docutils dt {
+  font-weight: bold }
+*/
+
+div.abstract {
+  margin: 2em 5em }
+
+div.abstract p.topic-title {
+  font-weight: bold ;
+  text-align: center }
+
+div.admonition, div.attention, div.caution, div.danger, div.error,
+div.hint, div.important, div.note, div.tip, div.warning {
+  margin: 2em ;
+  border: medium outset ;
+  padding: 1em }
+
+div.admonition p.admonition-title, div.hint p.admonition-title,
+div.important p.admonition-title, div.note p.admonition-title,
+div.tip p.admonition-title {
+  font-weight: bold ;
+  font-family: sans-serif }
+
+div.attention p.admonition-title, div.caution p.admonition-title,
+div.danger p.admonition-title, div.error p.admonition-title,
+div.warning p.admonition-title {
+  color: red ;
+  font-weight: bold ;
+  font-family: sans-serif }
+
+/* Uncomment (and remove this text!) to get reduced vertical space in
+   compound paragraphs.
+div.compound .compound-first, div.compound .compound-middle {
+  margin-bottom: 0.5em }
+
+div.compound .compound-last, div.compound .compound-middle {
+  margin-top: 0.5em }
+*/
+
+div.dedication {
+  margin: 2em 5em ;
+  text-align: center ;
+  font-style: italic }
+
+div.dedication p.topic-title {
+  font-weight: bold ;
+  font-style: normal }
+
+div.figure {
+  margin-left: 2em ;
+  margin-right: 2em }
+
+div.footer, div.header {
+  clear: both;
+  font-size: smaller }
+
+div.line-block {
+  display: block ;
+  margin-top: 1em ;
+  margin-bottom: 1em }
+
+div.line-block div.line-block {
+  margin-top: 0 ;
+  margin-bottom: 0 ;
+  margin-left: 1.5em }
+
+div.sidebar {
+  margin: 0 0 0.5em 1em ;
+  border: medium outset ;
+  padding: 1em ;
+  background-color: #ffffee ;
+  width: 40% ;
+  float: right ;
+  clear: right }
+
+div.sidebar p.rubric {
+  font-family: sans-serif ;
+  font-size: medium }
+
+div.system-messages {
+  margin: 5em }
+
+div.system-messages h1 {
+  color: red }
+
+div.system-message {
+  border: medium outset ;
+  padding: 1em }
+
+div.system-message p.system-message-title {
+  color: red ;
+  font-weight: bold }
+
+div.topic {
+  margin: 2em }
+
+h1.section-subtitle, h2.section-subtitle, h3.section-subtitle,
+h4.section-subtitle, h5.section-subtitle, h6.section-subtitle {
+  margin-top: 0.4em }
+
+h1.title {
+  text-align: center }
+
+h2.subtitle {
+  text-align: center }
+
+hr.docutils {
+  width: 75% }
+
+img.align-left, .figure.align-left, object.align-left {
+  clear: left ;
+  float: left ;
+  margin-right: 1em }
+
+img.align-right, .figure.align-right, object.align-right {
+  clear: right ;
+  float: right ;
+  margin-left: 1em }
+
+img.align-center, .figure.align-center, object.align-center {
+  display: block;
+  margin-left: auto;
+  margin-right: auto;
+}
+
+.align-left {
+  text-align: left }
+
+.align-center {
+  clear: both ;
+  text-align: center }
+
+.align-right {
+  text-align: right }
+
+/* reset inner alignment in figures */
+div.align-right {
+  text-align: left }
+
+/* div.align-center * { */
+/*   text-align: left } */
+
+ol.simple, ul.simple {
+  margin-bottom: 1em }
+
+ol.arabic {
+  list-style: decimal }
+
+ol.loweralpha {
+  list-style: lower-alpha }
+
+ol.upperalpha {
+  list-style: upper-alpha }
+
+ol.lowerroman {
+  list-style: lower-roman }
+
+ol.upperroman {
+  list-style: upper-roman }
+
+p.attribution {
+  text-align: right ;
+  margin-left: 50% }
+
+p.caption {
+  font-style: italic }
+
+p.credits {
+  font-style: italic ;
+  font-size: smaller }
+
+p.label {
+  white-space: nowrap }
+
+p.rubric {
+  font-weight: bold ;
+  font-size: larger ;
+  color: maroon ;
+  text-align: center }
+
+p.sidebar-title {
+  font-family: sans-serif ;
+  font-weight: bold ;
+  font-size: larger }
+
+p.sidebar-subtitle {
+  font-family: sans-serif ;
+  font-weight: bold }
+
+p.topic-title {
+  font-weight: bold }
+
+pre.address {
+  margin-bottom: 0 ;
+  margin-top: 0 ;
+  font: inherit }
+
+pre.literal-block, pre.doctest-block {
+  margin-left: 2em ;
+  margin-right: 2em }
+
+span.classifier {
+  font-family: sans-serif ;
+  font-style: oblique }
+
+span.classifier-delimiter {
+  font-family: sans-serif ;
+  font-weight: bold }
+
+span.interpreted {
+  font-family: sans-serif }
+
+span.option {
+  white-space: nowrap }
+
+span.pre {
+  white-space: pre }
+
+span.problematic {
+  color: red }
+
+span.section-subtitle {
+  /* font-size relative to parent (h1..h6 element) */
+  font-size: 80% }
+
+table.citation {
+  border-left: solid 1px gray;
+  margin-left: 1px }
+
+table.docinfo {
+  margin: 2em 4em }
+
+table.docutils {
+  margin-top: 0.5em ;
+  margin-bottom: 0.5em }
+
+table.footnote {
+  border-left: solid 1px black;
+  margin-left: 1px }
+
+table.docutils td, table.docutils th,
+table.docinfo td, table.docinfo th {
+  padding-left: 0.5em ;
+  padding-right: 0.5em ;
+  vertical-align: top }
+
+table.docutils th.field-name, table.docinfo th.docinfo-name {
+  font-weight: bold ;
+  text-align: left ;
+  white-space: nowrap ;
+  padding-left: 0 }
+
+h1 tt.docutils, h2 tt.docutils, h3 tt.docutils,
+h4 tt.docutils, h5 tt.docutils, h6 tt.docutils {
+  font-size: 100% }
+
+ul.auto-toc {
+  list-style-type: none }
+
+</style>
+</head>
+<body>
+<div class="document" id="f2py-users-guide-and-reference-manual">
+<h1 class="title">F2PY Users Guide and Reference Manual</h1>
+<table class="docinfo" frame="void" rules="none">
+<col class="docinfo-name" />
+<col class="docinfo-content" />
+<tbody valign="top">
+<tr><th class="docinfo-name">Author:</th>
+<td>Pearu Peterson</td></tr>
+<tr><th class="docinfo-name">Contact:</th>
+<td><a class="first last reference external" href="mailto:pearu&#64;cens.ioc.ee">pearu&#64;cens.ioc.ee</a></td></tr>
+<tr class="field"><th class="docinfo-name">Web site:</th><td class="field-body"><a class="reference external" href="http://cens.ioc.ee/projects/f2py2e/">http://cens.ioc.ee/projects/f2py2e/</a></td>
+</tr>
+<tr><th class="docinfo-name">Date:</th>
+<td>2005-04-02</td></tr>
+<tr><th class="docinfo-name">Revision:</th>
+<td>1.27</td></tr>
+</tbody>
+</table>
+<!-- -*- rest -*- -->
+<div class="contents topic" id="contents">
+<p class="topic-title first">Contents</p>
+<ul class="auto-toc simple">
+<li><a class="reference internal" href="#introduction" id="id20">1&nbsp;&nbsp;&nbsp;Introduction</a></li>
+<li><a class="reference internal" href="#three-ways-to-wrap-getting-started" id="id21">2&nbsp;&nbsp;&nbsp;Three ways to wrap - getting started</a><ul class="auto-toc">
+<li><a class="reference internal" href="#the-quick-way" id="id22">2.1&nbsp;&nbsp;&nbsp;The quick way</a></li>
+<li><a class="reference internal" href="#the-smart-way" id="id23">2.2&nbsp;&nbsp;&nbsp;The smart way</a></li>
+<li><a class="reference internal" href="#the-quick-and-smart-way" id="id24">2.3&nbsp;&nbsp;&nbsp;The quick and smart way</a></li>
+</ul>
+</li>
+<li><a class="reference internal" href="#signature-file" id="id25">3&nbsp;&nbsp;&nbsp;Signature file</a><ul class="auto-toc">
+<li><a class="reference internal" href="#python-module-block" id="id26">3.1&nbsp;&nbsp;&nbsp;Python module block</a></li>
+<li><a class="reference internal" href="#fortran-c-routine-signatures" id="id27">3.2&nbsp;&nbsp;&nbsp;Fortran/C routine signatures</a><ul class="auto-toc">
+<li><a class="reference internal" href="#type-declarations" id="id28">3.2.1&nbsp;&nbsp;&nbsp;Type declarations</a></li>
+<li><a class="reference internal" href="#statements" id="id29">3.2.2&nbsp;&nbsp;&nbsp;Statements</a></li>
+<li><a class="reference internal" href="#attributes" id="id30">3.2.3&nbsp;&nbsp;&nbsp;Attributes</a></li>
+</ul>
+</li>
+<li><a class="reference internal" href="#extensions" id="id31">3.3&nbsp;&nbsp;&nbsp;Extensions</a><ul class="auto-toc">
+<li><a class="reference internal" href="#f2py-directives" id="id32">3.3.1&nbsp;&nbsp;&nbsp;F2PY directives</a></li>
+<li><a class="reference internal" href="#c-expressions" id="id33">3.3.2&nbsp;&nbsp;&nbsp;C expressions</a></li>
+<li><a class="reference internal" href="#multi-line-blocks" id="id34">3.3.3&nbsp;&nbsp;&nbsp;Multi-line blocks</a></li>
+</ul>
+</li>
+</ul>
+</li>
+<li><a class="reference internal" href="#using-f2py-bindings-in-python" id="id35">4&nbsp;&nbsp;&nbsp;Using F2PY bindings in Python</a><ul class="auto-toc">
+<li><a class="reference internal" href="#scalar-arguments" id="id36">4.1&nbsp;&nbsp;&nbsp;Scalar arguments</a></li>
+<li><a class="reference internal" href="#string-arguments" id="id37">4.2&nbsp;&nbsp;&nbsp;String arguments</a></li>
+<li><a class="reference internal" href="#array-arguments" id="id38">4.3&nbsp;&nbsp;&nbsp;Array arguments</a></li>
+<li><a class="reference internal" href="#call-back-arguments" id="id39">4.4&nbsp;&nbsp;&nbsp;Call-back arguments</a><ul class="auto-toc">
+<li><a class="reference internal" href="#resolving-arguments-to-call-back-functions" id="id40">4.4.1&nbsp;&nbsp;&nbsp;Resolving arguments to call-back functions</a></li>
+</ul>
+</li>
+<li><a class="reference internal" href="#common-blocks" id="id41">4.5&nbsp;&nbsp;&nbsp;Common blocks</a></li>
+<li><a class="reference internal" href="#fortran-90-module-data" id="id42">4.6&nbsp;&nbsp;&nbsp;Fortran 90 module data</a><ul class="auto-toc">
+<li><a class="reference internal" href="#allocatable-arrays" id="id43">4.6.1&nbsp;&nbsp;&nbsp;Allocatable arrays</a></li>
+</ul>
+</li>
+</ul>
+</li>
+<li><a class="reference internal" href="#using-f2py" id="id44">5&nbsp;&nbsp;&nbsp;Using F2PY</a><ul class="auto-toc">
+<li><a class="reference internal" href="#command-f2py" id="id45">5.1&nbsp;&nbsp;&nbsp;Command <tt class="docutils literal">f2py</tt></a></li>
+<li><a class="reference internal" href="#python-module-f2py2e" id="id46">5.2&nbsp;&nbsp;&nbsp;Python module <tt class="docutils literal">f2py2e</tt></a></li>
+</ul>
+</li>
+<li><a class="reference internal" href="#using-numpy-distutils" id="id47">6&nbsp;&nbsp;&nbsp;Using <tt class="docutils literal">numpy_distutils</tt></a><ul class="auto-toc">
+<li><a class="reference internal" href="#numpy-distutils-0-2-2-and-up" id="id48">6.1&nbsp;&nbsp;&nbsp;<tt class="docutils literal">numpy_distutils</tt> 0.2.2 and up</a></li>
+<li><a class="reference internal" href="#numpy-distutils-pre-0-2-2" id="id49">6.2&nbsp;&nbsp;&nbsp;<tt class="docutils literal">numpy_distutils</tt> pre 0.2.2</a></li>
+</ul>
+</li>
+<li><a class="reference internal" href="#extended-f2py-usages" id="id50">7&nbsp;&nbsp;&nbsp;Extended F2PY usages</a><ul class="auto-toc">
+<li><a class="reference internal" href="#adding-self-written-functions-to-f2py-generated-modules" id="id51">7.1&nbsp;&nbsp;&nbsp;Adding self-written functions to F2PY generated modules</a></li>
+<li><a class="reference internal" href="#modifying-the-dictionary-of-a-f2py-generated-module" id="id52">7.2&nbsp;&nbsp;&nbsp;Modifying the dictionary of a F2PY generated module</a></li>
+</ul>
+</li>
+</ul>
+</div>
+<div class="section" id="introduction">
+<h1><a class="toc-backref" href="#id20">1&nbsp;&nbsp;&nbsp;Introduction</a></h1>
+<p>The purpose of the <a class="reference external" href="http://cens.ioc.ee/projects/f2py2e/">F2PY</a> --<em>Fortran to Python interface generator</em>--
+project is to provide a connection between Python and Fortran
+languages.  F2PY is a <a class="reference external" href="http://www.python.org/">Python</a> package (with a command line tool
+<tt class="docutils literal">f2py</tt> and a module <tt class="docutils literal">f2py2e</tt>) that facilitates creating/building
+Python C/API extension modules that make it possible</p>
+<ul class="simple">
+<li>to call Fortran 77/90/95 external subroutines and Fortran 90/95
+module subroutines as well as C functions;</li>
+<li>to access Fortran 77 <tt class="docutils literal">COMMON</tt> blocks and Fortran 90/95 module data,
+including allocatable arrays</li>
+</ul>
+<p>from Python. See <a class="reference external" href="http://cens.ioc.ee/projects/f2py2e/">F2PY</a> web site for more information and installation
+instructions.</p>
+</div>
+<div class="section" id="three-ways-to-wrap-getting-started">
+<h1><a class="toc-backref" href="#id21">2&nbsp;&nbsp;&nbsp;Three ways to wrap - getting started</a></h1>
+<p>Wrapping Fortran or C functions to Python using F2PY consists of the
+following steps:</p>
+<ul class="simple">
+<li>Creating the so-called signature file that contains descriptions of
+wrappers to Fortran or C functions, also called as signatures of the
+functions. In the case of Fortran routines, F2PY can create initial
+signature file by scanning Fortran source codes and
+catching all relevant information needed to create wrapper
+functions.</li>
+<li>Optionally, F2PY created signature files can be edited to optimize
+wrappers functions, make them &quot;smarter&quot; and more &quot;Pythonic&quot;.</li>
+<li>F2PY reads a signature file and writes a Python C/API module containing
+Fortran/C/Python bindings.</li>
+<li>F2PY compiles all sources and builds an extension module containing
+the wrappers. In building extension modules, F2PY uses
+<tt class="docutils literal">numpy_distutils</tt> that supports a number of Fortran 77/90/95
+compilers, including Gnu, Intel,
+Sun Fortre, SGI MIPSpro, Absoft, NAG, Compaq etc. compilers.</li>
+</ul>
+<p>Depending on a particular situation, these steps can be carried out
+either by just in one command or step-by-step, some steps can be
+ommited or combined with others.</p>
+<p>Below I'll describe three typical approaches of using F2PY.
+The following <a class="reference external" href="fib1.f">example Fortran 77 code</a> will be used for
+illustration:</p>
+<pre class="literal-block">
+C FILE: FIB1.F
+      SUBROUTINE FIB(A,N)
+C
+C     CALCULATE FIRST N FIBONACCI NUMBERS
+C
+      INTEGER N
+      REAL*8 A(N)
+      DO I=1,N
+         IF (I.EQ.1) THEN
+            A(I) = 0.0D0
+         ELSEIF (I.EQ.2) THEN
+            A(I) = 1.0D0
+         ELSE 
+            A(I) = A(I-1) + A(I-2)
+         ENDIF
+      ENDDO
+      END
+C END FILE FIB1.F
+
+</pre>
+<div class="section" id="the-quick-way">
+<h2><a class="toc-backref" href="#id22">2.1&nbsp;&nbsp;&nbsp;The quick way</a></h2>
+<p>The quickest way to wrap the Fortran subroutine <tt class="docutils literal">FIB</tt> to Python is
+to run</p>
+<pre class="literal-block">
+f2py -c fib1.f -m fib1
+</pre>
+<p>This command builds (see <tt class="docutils literal"><span class="pre">-c</span></tt> flag, execute <tt class="docutils literal">f2py</tt> without
+arguments to see the explanation of command line options) an extension
+module <tt class="docutils literal">fib1.so</tt> (see <tt class="docutils literal"><span class="pre">-m</span></tt> flag) to the current directory. Now, in
+Python the Fortran subroutine <tt class="docutils literal">FIB</tt> is accessible via <tt class="docutils literal">fib1.fib</tt>:</p>
+<pre class="literal-block">
+&gt;&gt;&gt; import Numeric
+&gt;&gt;&gt; import fib1
+&gt;&gt;&gt; print fib1.fib.__doc__
+fib - Function signature:
+  fib(a,[n])
+Required arguments:
+  a : input rank-1 array('d') with bounds (n)
+Optional arguments:
+  n := len(a) input int
+
+&gt;&gt;&gt; a=Numeric.zeros(8,'d')
+&gt;&gt;&gt; fib1.fib(a)
+&gt;&gt;&gt; print a
+[  0.   1.   1.   2.   3.   5.   8.  13.]
+</pre>
+<div class="topic">
+<p class="topic-title first">Comments</p>
+<ul>
+<li><p class="first">Note that F2PY found that the second argument <tt class="docutils literal">n</tt> is the
+dimension of the first array argument <tt class="docutils literal">a</tt>. Since by default all
+arguments are input-only arguments, F2PY concludes that <tt class="docutils literal">n</tt> can
+be optional with the default value <tt class="docutils literal">len(a)</tt>.</p>
+</li>
+<li><p class="first">One can use different values for optional <tt class="docutils literal">n</tt>:</p>
+<pre class="literal-block">
+&gt;&gt;&gt; a1=Numeric.zeros(8,'d')
+&gt;&gt;&gt; fib1.fib(a1,6)
+&gt;&gt;&gt; print a1
+[ 0.  1.  1.  2.  3.  5.  0.  0.]
+</pre>
+<p>but an exception is raised when it is incompatible with the input
+array <tt class="docutils literal">a</tt>:</p>
+<pre class="literal-block">
+&gt;&gt;&gt; fib1.fib(a,10)
+fib:n=10
+Traceback (most recent call last):
+  File &quot;&lt;stdin&gt;&quot;, line 1, in ?
+fib.error: (len(a)&gt;=n) failed for 1st keyword n
+&gt;&gt;&gt;
+</pre>
+<p>This demonstrates one of the useful features in F2PY, that it,
+F2PY implements basic compatibility checks between related
+arguments in order to avoid any unexpected crashes.</p>
+</li>
+<li><p class="first">When a Numeric array, that is Fortran contiguous and has a typecode
+corresponding to presumed Fortran type, is used as an input array
+argument, then its C pointer is directly passed to Fortran.</p>
+<p>Otherwise F2PY makes a contiguous copy (with a proper typecode) of
+the input array and passes C pointer of the copy to Fortran
+subroutine. As a result, any possible changes to the (copy of)
+input array have no effect to the original argument, as
+demonstrated below:</p>
+<pre class="literal-block">
+&gt;&gt;&gt; a=Numeric.ones(8,'i')
+&gt;&gt;&gt; fib1.fib(a)
+&gt;&gt;&gt; print a
+[1 1 1 1 1 1 1 1]
+</pre>
+<p>Clearly, this is not an expected behaviour. The fact that the
+above example worked with <tt class="docutils literal"><span class="pre">typecode='d'</span></tt> is considered
+accidental.</p>
+<p>F2PY provides <tt class="docutils literal">intent(inplace)</tt> attribute that would modify
+the attributes of an input array so that any changes made by
+Fortran routine will be effective also in input argument. For example,
+if one specifies <tt class="docutils literal">intent(inplace) a</tt> (see below, how), then
+the example above would read:</p>
+<blockquote>
+<pre class="doctest-block">
+&gt;&gt;&gt; a=Numeric.ones(8,'i')
+&gt;&gt;&gt; fib1.fib(a)
+&gt;&gt;&gt; print a
+[  0.   1.   1.   2.   3.   5.   8.  13.]
+</pre>
+</blockquote>
+<p>However, the recommended way to get changes made by Fortran
+subroutine back to python is to use <tt class="docutils literal">intent(out)</tt> attribute. It
+is more efficient and a cleaner solution.</p>
+</li>
+<li><p class="first">The usage of <tt class="docutils literal">fib1.fib</tt> in Python is very similar to using
+<tt class="docutils literal">FIB</tt> in Fortran. However, using <em>in situ</em> output arguments in
+Python indicates a poor style as there is no safety mechanism
+in Python with respect to wrong argument types. When using Fortran
+or C, compilers naturally discover any type mismatches during
+compile time but in Python the types must be checked in
+runtime. So, using <em>in situ</em> output arguments in Python may cause
+difficult to find bugs, not to mention that the codes will be less
+readable when all required type checks are implemented.</p>
+</li>
+</ul>
+<p>Though the demonstrated way of wrapping Fortran routines to Python
+is very straightforward, it has several drawbacks (see the comments
+above).  These drawbacks are due to the fact that there is no way
+that F2PY can determine what is the acctual intention of one or the
+other argument, is it input or output argument, or both, or
+something else. So, F2PY conservatively assumes that all arguments
+are input arguments by default.</p>
+<p>However, there are ways (see below) how to &quot;teach&quot; F2PY about the
+true intentions (among other things) of function arguments; and then
+F2PY is able to generate more Pythonic (more explicit, easier to
+use, and less error prone) wrappers to Fortran functions.</p>
+</div>
+</div>
+<div class="section" id="the-smart-way">
+<h2><a class="toc-backref" href="#id23">2.2&nbsp;&nbsp;&nbsp;The smart way</a></h2>
+<p>Let's apply the steps of wrapping Fortran functions to Python one by
+one.</p>
+<ul>
+<li><p class="first">First, we create a signature file from <tt class="docutils literal">fib1.f</tt> by running</p>
+<pre class="literal-block">
+f2py fib1.f -m fib2 -h fib1.pyf
+</pre>
+<p>The signature file is saved to <tt class="docutils literal">fib1.pyf</tt> (see <tt class="docutils literal"><span class="pre">-h</span></tt> flag) and
+its contents is shown below.</p>
+<pre class="literal-block">
+!    -*- f90 -*-
+python module fib2 ! in 
+    interface  ! in :fib2
+        subroutine fib(a,n) ! in :fib2:fib1.f
+            real*8 dimension(n) :: a
+            integer optional,check(len(a)&gt;=n),depend(a) :: n=len(a)
+        end subroutine fib
+    end interface 
+end python module fib2
+
+! This file was auto-generated with f2py (version:2.28.198-1366).
+! See http://cens.ioc.ee/projects/f2py2e/
+
+</pre>
+</li>
+<li><p class="first">Next, we'll teach F2PY that the argument <tt class="docutils literal">n</tt> is a input argument
+(use <tt class="docutils literal">intent(in)</tt> attribute) and that the result, i.e. the
+contents of <tt class="docutils literal">a</tt> after calling Fortran function <tt class="docutils literal">FIB</tt>, should be
+returned to Python (use <tt class="docutils literal">intent(out)</tt> attribute). In addition, an
+array <tt class="docutils literal">a</tt> should be created dynamically using the size given by
+the input argument <tt class="docutils literal">n</tt> (use <tt class="docutils literal">depend(n)</tt> attribute to indicate
+dependence relation).</p>
+<p>The content of a modified version of <tt class="docutils literal">fib1.pyf</tt> (saved as
+<tt class="docutils literal">fib2.pyf</tt>) is as follows:</p>
+<pre class="literal-block">
+!    -*- f90 -*-
+python module fib2 
+    interface
+        subroutine fib(a,n)
+            real*8 dimension(n),intent(out),depend(n) :: a
+            integer intent(in) :: n
+        end subroutine fib
+    end interface 
+end python module fib2
+
+</pre>
+</li>
+<li><p class="first">And finally, we build the extension module by running</p>
+<pre class="literal-block">
+f2py -c fib2.pyf fib1.f
+</pre>
+</li>
+</ul>
+<p>In Python:</p>
+<pre class="literal-block">
+&gt;&gt;&gt; import fib2
+&gt;&gt;&gt; print fib2.fib.__doc__
+fib - Function signature:
+  a = fib(n)
+Required arguments:
+  n : input int
+Return objects:
+  a : rank-1 array('d') with bounds (n)
+
+&gt;&gt;&gt; print fib2.fib(8)
+[  0.   1.   1.   2.   3.   5.   8.  13.]
+</pre>
+<div class="topic">
+<p class="topic-title first">Comments</p>
+<ul class="simple">
+<li>Clearly, the signature of <tt class="docutils literal">fib2.fib</tt> now corresponds to the
+intention of Fortran subroutine <tt class="docutils literal">FIB</tt> more closely: given the
+number <tt class="docutils literal">n</tt>, <tt class="docutils literal">fib2.fib</tt> returns the first <tt class="docutils literal">n</tt> Fibonacci numbers
+as a Numeric array. Also, the new Python signature <tt class="docutils literal">fib2.fib</tt>
+rules out any surprises that we experienced with <tt class="docutils literal">fib1.fib</tt>.</li>
+<li>Note that by default using single <tt class="docutils literal">intent(out)</tt> also implies
+<tt class="docutils literal">intent(hide)</tt>. Argument that has <tt class="docutils literal">intent(hide)</tt> attribute
+specified, will not be listed in the argument list of a wrapper
+function.</li>
+</ul>
+</div>
+</div>
+<div class="section" id="the-quick-and-smart-way">
+<h2><a class="toc-backref" href="#id24">2.3&nbsp;&nbsp;&nbsp;The quick and smart way</a></h2>
+<p>The &quot;smart way&quot; of wrapping Fortran functions, as explained above, is
+suitable for wrapping (e.g. third party) Fortran codes for which
+modifications to their source codes are not desirable nor even
+possible.</p>
+<p>However, if editing Fortran codes is acceptable, then the generation
+of an intermediate signature file can be skipped in most
+cases. Namely, F2PY specific attributes can be inserted directly to
+Fortran source codes using the so-called F2PY directive. A F2PY
+directive defines special comment lines (starting with <tt class="docutils literal">Cf2py</tt>, for
+example) which are ignored by Fortran compilers but F2PY interprets
+them as normal lines.</p>
+<p>Here is shown a <a class="reference external" href="fib3.f">modified version of the example Fortran code</a>, saved
+as <tt class="docutils literal">fib3.f</tt>:</p>
+<pre class="literal-block">
+C FILE: FIB3.F
+      SUBROUTINE FIB(A,N)
+C
+C     CALCULATE FIRST N FIBONACCI NUMBERS
+C
+      INTEGER N
+      REAL*8 A(N)
+Cf2py intent(in) n
+Cf2py intent(out) a
+Cf2py depend(n) a
+      DO I=1,N
+         IF (I.EQ.1) THEN
+            A(I) = 0.0D0
+         ELSEIF (I.EQ.2) THEN
+            A(I) = 1.0D0
+         ELSE 
+            A(I) = A(I-1) + A(I-2)
+         ENDIF
+      ENDDO
+      END
+C END FILE FIB3.F
+
+</pre>
+<p>Building the extension module can be now carried out in one command:</p>
+<pre class="literal-block">
+f2py -c -m fib3 fib3.f
+</pre>
+<p>Notice that the resulting wrapper to <tt class="docutils literal">FIB</tt> is as &quot;smart&quot; as in
+previous case:</p>
+<pre class="literal-block">
+&gt;&gt;&gt; import fib3
+&gt;&gt;&gt; print fib3.fib.__doc__
+fib - Function signature:
+  a = fib(n)
+Required arguments:
+  n : input int
+Return objects:
+  a : rank-1 array('d') with bounds (n)
+
+&gt;&gt;&gt; print fib3.fib(8)
+[  0.   1.   1.   2.   3.   5.   8.  13.]
+</pre>
+</div>
+</div>
+<div class="section" id="signature-file">
+<h1><a class="toc-backref" href="#id25">3&nbsp;&nbsp;&nbsp;Signature file</a></h1>
+<p>The syntax specification for signature files (.pyf files) is borrowed
+from the Fortran 90/95 language specification. Almost all Fortran
+90/95 standard constructs are understood, both in free and fixed
+format (recall that Fortran 77 is a subset of Fortran 90/95). F2PY
+introduces also some extensions to Fortran 90/95 language
+specification that help designing Fortran to Python interface, make it
+more &quot;Pythonic&quot;.</p>
+<p>Signature files may contain arbitrary Fortran code (so that Fortran
+codes can be considered as signature files). F2PY silently ignores
+Fortran constructs that are irrelevant for creating the interface.
+However, this includes also syntax errors. So, be careful not making
+ones;-).</p>
+<p>In general, the contents of signature files is case-sensitive.  When
+scanning Fortran codes and writing a signature file, F2PY lowers all
+cases automatically except in multi-line blocks or when <tt class="docutils literal"><span class="pre">--no-lower</span></tt>
+option is used.</p>
+<p>The syntax of signature files is overvied below.</p>
+<div class="section" id="python-module-block">
+<h2><a class="toc-backref" href="#id26">3.1&nbsp;&nbsp;&nbsp;Python module block</a></h2>
+<p>A signature file may contain one (recommended) or more <tt class="docutils literal">python
+module</tt> blocks.  <tt class="docutils literal">python module</tt> block describes the contents of
+a Python/C extension module <tt class="docutils literal">&lt;modulename&gt;module.c</tt> that F2PY
+generates.</p>
+<p>Exception: if <tt class="docutils literal">&lt;modulename&gt;</tt> contains a substring <tt class="docutils literal">__user__</tt>, then
+the corresponding <tt class="docutils literal">python module</tt> block describes the signatures of
+so-called call-back functions (see <a class="reference internal" href="#call-back-arguments">Call-back arguments</a>).</p>
+<p>A <tt class="docutils literal">python module</tt> block has the following structure:</p>
+<pre class="literal-block">
+python module &lt;modulename&gt;
+  [&lt;usercode statement&gt;]...
+  [
+  interface
+    &lt;usercode statement&gt;
+    &lt;Fortran block data signatures&gt;
+    &lt;Fortran/C routine signatures&gt;
+  end [interface]
+  ]...
+  [
+  interface
+    module &lt;F90 modulename&gt;
+      [&lt;F90 module data type declarations&gt;]
+      [&lt;F90 module routine signatures&gt;]
+    end [module [&lt;F90 modulename&gt;]]
+  end [interface]
+  ]...
+end [python module [&lt;modulename&gt;]]
+</pre>
+<p>Here brackets <tt class="docutils literal">[]</tt> indicate a optional part, dots <tt class="docutils literal">...</tt> indicate
+one or more of a previous part. So, <tt class="docutils literal"><span class="pre">[]...</span></tt> reads zero or more of a
+previous part.</p>
+</div>
+<div class="section" id="fortran-c-routine-signatures">
+<h2><a class="toc-backref" href="#id27">3.2&nbsp;&nbsp;&nbsp;Fortran/C routine signatures</a></h2>
+<p>The signature of a Fortran routine has the following structure:</p>
+<pre class="literal-block">
+[&lt;typespec&gt;] function | subroutine &lt;routine name&gt; \
+              [ ( [&lt;arguments&gt;] ) ] [ result ( &lt;entityname&gt; ) ]
+  [&lt;argument/variable type declarations&gt;]
+  [&lt;argument/variable attribute statements&gt;]
+  [&lt;use statements&gt;]
+  [&lt;common block statements&gt;]
+  [&lt;other statements&gt;]
+end [ function | subroutine [&lt;routine name&gt;] ]
+</pre>
+<p>From a Fortran routine signature F2PY generates a Python/C extension
+function that has the following signature:</p>
+<pre class="literal-block">
+def &lt;routine name&gt;(&lt;required arguments&gt;[,&lt;optional arguments&gt;]):
+     ...
+     return &lt;return variables&gt;
+</pre>
+<p>The signature of a Fortran block data has the following structure:</p>
+<pre class="literal-block">
+block data [ &lt;block data name&gt; ]
+  [&lt;variable type declarations&gt;]
+  [&lt;variable attribute statements&gt;]
+  [&lt;use statements&gt;]
+  [&lt;common block statements&gt;]
+  [&lt;include statements&gt;]
+end [ block data [&lt;block data name&gt;] ]
+</pre>
+<div class="section" id="type-declarations">
+<h3><a class="toc-backref" href="#id28">3.2.1&nbsp;&nbsp;&nbsp;Type declarations</a></h3>
+<blockquote>
+<p>The definition of the <tt class="docutils literal">&lt;argument/variable type declaration&gt;</tt> part
+is</p>
+<pre class="literal-block">
+&lt;typespec&gt; [ [&lt;attrspec&gt;] :: ] &lt;entitydecl&gt;
+</pre>
+<p>where</p>
+<pre class="literal-block">
+&lt;typespec&gt; := byte | character [&lt;charselector&gt;]
+           | complex [&lt;kindselector&gt;] | real [&lt;kindselector&gt;]
+           | double complex | double precision
+           | integer [&lt;kindselector&gt;] | logical [&lt;kindselector&gt;]
+
+&lt;charselector&gt; := * &lt;charlen&gt;
+               | ( [len=] &lt;len&gt; [ , [kind=] &lt;kind&gt;] )
+               | ( kind= &lt;kind&gt; [ , len= &lt;len&gt; ] )
+&lt;kindselector&gt; := * &lt;intlen&gt; | ( [kind=] &lt;kind&gt; )
+
+&lt;entitydecl&gt; := &lt;name&gt; [ [ * &lt;charlen&gt; ] [ ( &lt;arrayspec&gt; ) ]
+                      | [ ( &lt;arrayspec&gt; ) ] * &lt;charlen&gt; ]
+                     | [ / &lt;init_expr&gt; / | = &lt;init_expr&gt; ] \
+                       [ , &lt;entitydecl&gt; ]
+</pre>
+<p>and</p>
+<ul class="simple">
+<li><tt class="docutils literal">&lt;attrspec&gt;</tt> is a comma separated list of <a class="reference internal" href="#attributes">attributes</a>;</li>
+<li><tt class="docutils literal">&lt;arrayspec&gt;</tt> is a comma separated list of dimension bounds;</li>
+<li><tt class="docutils literal">&lt;init_expr&gt;</tt> is a <a class="reference internal" href="#c-expressions">C expression</a>.</li>
+<li><tt class="docutils literal">&lt;intlen&gt;</tt> may be negative integer for <tt class="docutils literal">integer</tt> type
+specifications. In such cases <tt class="docutils literal"><span class="pre">integer*&lt;negintlen&gt;</span></tt> represents
+unsigned C integers.</li>
+</ul>
+</blockquote>
+<blockquote>
+If an argument has no <tt class="docutils literal">&lt;argument type declaration&gt;</tt>, its type is
+determined by applying <tt class="docutils literal">implicit</tt> rules to its name.</blockquote>
+</div>
+<div class="section" id="statements">
+<h3><a class="toc-backref" href="#id29">3.2.2&nbsp;&nbsp;&nbsp;Statements</a></h3>
+<p>Attribute statements:</p>
+<blockquote>
+The <tt class="docutils literal">&lt;argument/variable attribute statement&gt;</tt> is
+<tt class="docutils literal">&lt;argument/variable type declaration&gt;</tt> without <tt class="docutils literal">&lt;typespec&gt;</tt>.
+In addition, in an attribute statement one cannot use other
+attributes, also <tt class="docutils literal">&lt;entitydecl&gt;</tt> can be only a list of names.</blockquote>
+<p>Use statements:</p>
+<blockquote>
+<p>The definition of the <tt class="docutils literal">&lt;use statement&gt;</tt> part is</p>
+<pre class="literal-block">
+use &lt;modulename&gt; [ , &lt;rename_list&gt; | , ONLY : &lt;only_list&gt; ]
+</pre>
+<p>where</p>
+<pre class="literal-block">
+&lt;rename_list&gt; := &lt;local_name&gt; =&gt; &lt;use_name&gt; [ , &lt;rename_list&gt; ]
+</pre>
+<p>Currently F2PY uses <tt class="docutils literal">use</tt> statement only for linking call-back
+modules and <tt class="docutils literal">external</tt> arguments (call-back functions), see
+<a class="reference internal" href="#call-back-arguments">Call-back arguments</a>.</p>
+</blockquote>
+<p>Common block statements:</p>
+<blockquote>
+<p>The definition of the <tt class="docutils literal">&lt;common block statement&gt;</tt> part is</p>
+<pre class="literal-block">
+common / &lt;common name&gt; / &lt;shortentitydecl&gt;
+</pre>
+<p>where</p>
+<pre class="literal-block">
+&lt;shortentitydecl&gt; := &lt;name&gt; [ ( &lt;arrayspec&gt; ) ] [ , &lt;shortentitydecl&gt; ]
+</pre>
+<p>One <tt class="docutils literal">python module</tt> block should not contain two or more
+<tt class="docutils literal">common</tt> blocks with the same name. Otherwise, the latter ones are
+ignored. The types of variables in <tt class="docutils literal">&lt;shortentitydecl&gt;</tt> are defined
+using <tt class="docutils literal">&lt;argument type declarations&gt;</tt>. Note that the corresponding
+<tt class="docutils literal">&lt;argument type declarations&gt;</tt> may contain array specifications;
+then you don't need to specify these in <tt class="docutils literal">&lt;shortentitydecl&gt;</tt>.</p>
+</blockquote>
+<p>Other statements:</p>
+<blockquote>
+<p>The <tt class="docutils literal">&lt;other statement&gt;</tt> part refers to any other Fortran language
+constructs that are not described above. F2PY ignores most of them
+except</p>
+<ul class="simple">
+<li><tt class="docutils literal">call</tt> statements and function calls of <tt class="docutils literal">external</tt> arguments
+(<a class="reference internal" href="#external">more details</a>?);</li>
+</ul>
+</blockquote>
+<blockquote>
+<ul>
+<li><p class="first"><tt class="docutils literal">include</tt> statements</p>
+<blockquote>
+<pre class="literal-block">
+include '&lt;filename&gt;'
+include &quot;&lt;filename&gt;&quot;
+</pre>
+<p>If a file <tt class="docutils literal">&lt;filename&gt;</tt> does not exist, the <tt class="docutils literal">include</tt>
+statement is ignored. Otherwise, the file <tt class="docutils literal">&lt;filename&gt;</tt> is
+included to a signature file.  <tt class="docutils literal">include</tt> statements can be used
+in any part of a signature file, also outside the Fortran/C
+routine signature blocks.</p>
+</blockquote>
+</li>
+<li><p class="first"><tt class="docutils literal">implicit</tt> statements</p>
+<blockquote>
+<pre class="literal-block">
+implicit none
+implicit &lt;list of implicit maps&gt;
+</pre>
+<p>where</p>
+<pre class="literal-block">
+&lt;implicit map&gt; := &lt;typespec&gt; ( &lt;list of letters or range of letters&gt; )
+</pre>
+<p>Implicit rules are used to deterimine the type specification of
+a variable (from the first-letter of its name) if the variable
+is not defined using <tt class="docutils literal">&lt;variable type declaration&gt;</tt>.  Default
+implicit rule is given by</p>
+<pre class="literal-block">
+implicit real (a-h,o-z,$_), integer (i-m)
+</pre>
+</blockquote>
+</li>
+<li><p class="first"><tt class="docutils literal">entry</tt> statements</p>
+<blockquote>
+<pre class="literal-block">
+entry &lt;entry name&gt; [([&lt;arguments&gt;])]
+</pre>
+<p>F2PY generates wrappers to all entry names using the signature
+of the routine block.</p>
+<p>Tip: <tt class="docutils literal">entry</tt> statement can be used to describe the signature
+of an arbitrary routine allowing F2PY to generate a number of
+wrappers from only one routine block signature. There are few
+restrictions while doing this: <tt class="docutils literal">fortranname</tt> cannot be used,
+<tt class="docutils literal">callstatement</tt> and <tt class="docutils literal">callprotoargument</tt> can be used only if
+they are valid for all entry routines, etc.</p>
+</blockquote>
+</li>
+</ul>
+<p>In addition, F2PY introduces the following statements:</p>
+<ul>
+<li><dl class="first docutils">
+<dt><tt class="docutils literal">threadsafe</tt></dt>
+<dd><p class="first last">Use <tt class="docutils literal">Py_BEGIN_ALLOW_THREADS .. Py_END_ALLOW_THREADS</tt> block
+around the call to Fortran/C function.</p>
+</dd>
+</dl>
+</li>
+<li><dl class="first docutils">
+<dt><tt class="docutils literal">callstatement <span class="pre">&lt;C-expr|multi-line</span> block&gt;</tt></dt>
+<dd><p class="first last">Replace F2PY generated call statement to Fortran/C function with
+<tt class="docutils literal"><span class="pre">&lt;C-expr|multi-line</span> block&gt;</tt>. The wrapped Fortran/C function
+is available as <tt class="docutils literal">(*f2py_func)</tt>. To raise an exception, set
+<tt class="docutils literal">f2py_success = 0</tt> in <tt class="docutils literal"><span class="pre">&lt;C-expr|multi-line</span> block&gt;</tt>.</p>
+</dd>
+</dl>
+</li>
+<li><dl class="first docutils">
+<dt><tt class="docutils literal">callprotoargument <span class="pre">&lt;C-typespecs&gt;</span></tt></dt>
+<dd><p class="first">When <tt class="docutils literal">callstatement</tt> statement is used then F2PY may not
+generate proper prototypes for Fortran/C functions (because
+<tt class="docutils literal"><span class="pre">&lt;C-expr&gt;</span></tt> may contain any function calls and F2PY has no way
+to determine what should be the proper prototype). With this
+statement you can explicitely specify the arguments of the
+corresponding prototype:</p>
+<pre class="last literal-block">
+extern &lt;return type&gt; FUNC_F(&lt;routine name&gt;,&lt;ROUTINE NAME&gt;)(&lt;callprotoargument&gt;);
+</pre>
+</dd>
+</dl>
+</li>
+<li><dl class="first docutils">
+<dt><tt class="docutils literal">fortranname [&lt;acctual Fortran/C routine name&gt;]</tt></dt>
+<dd><p class="first">You can use arbitrary <tt class="docutils literal">&lt;routine name&gt;</tt> for a given Fortran/C
+function. Then you have to specify
+<tt class="docutils literal">&lt;acctual Fortran/C routine name&gt;</tt> with this statement.</p>
+<p class="last">If <tt class="docutils literal">fortranname</tt> statement is used without
+<tt class="docutils literal">&lt;acctual Fortran/C routine name&gt;</tt> then a dummy wrapper is
+generated.</p>
+</dd>
+</dl>
+</li>
+<li><dl class="first docutils">
+<dt><tt class="docutils literal">usercode <span class="pre">&lt;multi-line</span> block&gt;</tt></dt>
+<dd><p class="first">When used inside <tt class="docutils literal">python module</tt> block, then given C code
+will be inserted to generated C/API source just before
+wrapper function definitions. Here you can define arbitrary
+C functions to be used in initialization of optional arguments,
+for example. If <tt class="docutils literal">usercode</tt> is used twise inside <tt class="docutils literal">python
+module</tt> block then the second multi-line block is inserted
+after the definition of external routines.</p>
+<p>When used inside <tt class="docutils literal">&lt;routine singature&gt;</tt>, then given C code will
+be inserted to the corresponding wrapper function just after
+declaring variables but before any C statements. So, <tt class="docutils literal">usercode</tt>
+follow-up can contain both declarations and C statements.</p>
+<p class="last">When used inside the first <tt class="docutils literal">interface</tt> block, then given C
+code will be inserted at the end of the initialization
+function of the extension module. Here you can modify extension
+modules dictionary. For example, for defining additional
+variables etc.</p>
+</dd>
+</dl>
+</li>
+<li><dl class="first docutils">
+<dt><tt class="docutils literal">pymethoddef <span class="pre">&lt;multi-line</span> block&gt;</tt></dt>
+<dd><p class="first last">Multiline block will be inserted to the definition of
+module methods <tt class="docutils literal">PyMethodDef</tt>-array. It must be a
+comma-separated list of C arrays (see <a class="reference external" href="http://www.python.org/doc/current/ext/ext.html">Extending and Embedding</a>
+Python documentation for details).
+<tt class="docutils literal">pymethoddef</tt> statement can be used only inside
+<tt class="docutils literal">python module</tt> block.</p>
+</dd>
+</dl>
+</li>
+</ul>
+</blockquote>
+</div>
+<div class="section" id="attributes">
+<h3><a class="toc-backref" href="#id30">3.2.3&nbsp;&nbsp;&nbsp;Attributes</a></h3>
+<p>The following attributes are used by F2PY:</p>
+<dl class="docutils">
+<dt><tt class="docutils literal">optional</tt></dt>
+<dd><p class="first">The corresponding argument is moved to the end of <tt class="docutils literal">&lt;optional
+arguments&gt;</tt> list. A default value for an optional argument can be
+specified <tt class="docutils literal">&lt;init_expr&gt;</tt>, see <tt class="docutils literal">entitydecl</tt> definition. Note that
+the default value must be given as a valid C expression.</p>
+<p>Note that whenever <tt class="docutils literal">&lt;init_expr&gt;</tt> is used, <tt class="docutils literal">optional</tt> attribute
+is set automatically by F2PY.</p>
+<p class="last">For an optional array argument, all its dimensions must be bounded.</p>
+</dd>
+<dt><tt class="docutils literal">required</tt></dt>
+<dd><p class="first">The corresponding argument is considered as a required one. This is
+default. You need to specify <tt class="docutils literal">required</tt> only if there is a need to
+disable automatic <tt class="docutils literal">optional</tt> setting when <tt class="docutils literal">&lt;init_expr&gt;</tt> is used.</p>
+<p class="last">If Python <tt class="docutils literal">None</tt> object is used as an required argument, the
+argument is treated as optional. That is, in the case of array
+argument, the memory is allocated. And if <tt class="docutils literal">&lt;init_expr&gt;</tt> is given,
+the corresponding initialization is carried out.</p>
+</dd>
+<dt><tt class="docutils literal"><span class="pre">dimension(&lt;arrayspec&gt;)</span></tt></dt>
+<dd>The corresponding variable is considered as an array with given
+dimensions in <tt class="docutils literal">&lt;arrayspec&gt;</tt>.</dd>
+<dt><tt class="docutils literal"><span class="pre">intent(&lt;intentspec&gt;)</span></tt></dt>
+<dd><p class="first">This specifies the &quot;intention&quot; of the corresponding
+argument. <tt class="docutils literal">&lt;intentspec&gt;</tt> is a comma separated list of the
+following keys:</p>
+<ul>
+<li><dl class="first docutils">
+<dt><tt class="docutils literal">in</tt></dt>
+<dd><p class="first last">The argument is considered as an input-only argument. It means
+that the value of the argument is passed to Fortran/C function and
+that function is expected not to change the value of an argument.</p>
+</dd>
+</dl>
+</li>
+<li><dl class="first docutils">
+<dt><tt class="docutils literal">inout</tt></dt>
+<dd><p class="first">The argument is considered as an input/output or <em>in situ</em>
+output argument. <tt class="docutils literal">intent(inout)</tt> arguments can be only
+&quot;contiguous&quot; Numeric arrays with proper type and size.  Here
+&quot;contiguous&quot; can be either in Fortran or C sense. The latter one
+coincides with the contiguous concept used in Numeric and is
+effective only if <tt class="docutils literal">intent(c)</tt> is used. Fortran-contiguousness
+is assumed by default.</p>
+<p class="last">Using <tt class="docutils literal">intent(inout)</tt> is generally not recommended, use
+<tt class="docutils literal">intent(in,out)</tt> instead. See also <tt class="docutils literal">intent(inplace)</tt> attribute.</p>
+</dd>
+</dl>
+</li>
+<li><dl class="first docutils">
+<dt><tt class="docutils literal">inplace</tt></dt>
+<dd><p class="first">The argument is considered as an input/output or <em>in situ</em>
+output argument. <tt class="docutils literal">intent(inplace)</tt> arguments must be
+Numeric arrays with proper size. If the type of an array is
+not &quot;proper&quot; or the array is non-contiguous then the array
+will be changed in-place to fix the type and make it contiguous.</p>
+<p class="last">Using <tt class="docutils literal">intent(inplace)</tt> is generally not recommended either.
+For example, when slices have been taken from an
+<tt class="docutils literal">intent(inplace)</tt> argument then after in-place changes,
+slices data pointers may point to unallocated memory area.</p>
+</dd>
+</dl>
+</li>
+<li><dl class="first docutils">
+<dt><tt class="docutils literal">out</tt></dt>
+<dd><p class="first">The argument is considered as an return variable. It is appended
+to the <tt class="docutils literal">&lt;returned variables&gt;</tt> list. Using <tt class="docutils literal">intent(out)</tt>
+sets <tt class="docutils literal">intent(hide)</tt> automatically, unless also
+<tt class="docutils literal">intent(in)</tt> or <tt class="docutils literal">intent(inout)</tt> were used.</p>
+<p class="last">By default, returned multidimensional arrays are
+Fortran-contiguous. If <tt class="docutils literal">intent(c)</tt> is used, then returned
+multi-dimensional arrays are C-contiguous.</p>
+</dd>
+</dl>
+</li>
+<li><dl class="first docutils">
+<dt><tt class="docutils literal">hide</tt></dt>
+<dd><p class="first">The argument is removed from the list of required or optional
+arguments. Typically <tt class="docutils literal">intent(hide)</tt> is used with <tt class="docutils literal">intent(out)</tt>
+or when <tt class="docutils literal">&lt;init_expr&gt;</tt> completely determines the value of the
+argument like in the following example:</p>
+<pre class="last literal-block">
+integer intent(hide),depend(a) :: n = len(a)
+real intent(in),dimension(n) :: a
+</pre>
+</dd>
+</dl>
+</li>
+<li><dl class="first docutils">
+<dt><tt class="docutils literal">c</tt></dt>
+<dd><p class="first">The argument is treated as a C scalar or C array argument.  In
+the case of a scalar argument, its value is passed to C function
+as a C scalar argument (recall that Fortran scalar arguments are
+actually C pointer arguments).  In the case of an array
+argument, the wrapper function is assumed to treat
+multi-dimensional arrays as C-contiguous arrays.</p>
+<p>There is no need to use <tt class="docutils literal">intent(c)</tt> for one-dimensional
+arrays, no matter if the wrapped function is either a Fortran or
+a C function. This is because the concepts of Fortran- and
+C-contiguousness overlap in one-dimensional cases.</p>
+<p>If <tt class="docutils literal">intent(c)</tt> is used as an statement but without entity
+declaration list, then F2PY adds <tt class="docutils literal">intent(c)</tt> attibute to all
+arguments.</p>
+<p class="last">Also, when wrapping C functions, one must use <tt class="docutils literal">intent(c)</tt>
+attribute for <tt class="docutils literal">&lt;routine name&gt;</tt> in order to disable Fortran
+specific <tt class="docutils literal"><span class="pre">F_FUNC(..,..)</span></tt> macros.</p>
+</dd>
+</dl>
+</li>
+<li><dl class="first docutils">
+<dt><tt class="docutils literal">cache</tt></dt>
+<dd><p class="first last">The argument is treated as a junk of memory. No Fortran nor C
+contiguousness checks are carried out. Using <tt class="docutils literal">intent(cache)</tt>
+makes sense only for array arguments, also in connection with
+<tt class="docutils literal">intent(hide)</tt> or <tt class="docutils literal">optional</tt> attributes.</p>
+</dd>
+</dl>
+</li>
+<li><dl class="first docutils">
+<dt><tt class="docutils literal">copy</tt></dt>
+<dd><p class="first last">Ensure that the original contents of <tt class="docutils literal">intent(in)</tt> argument is
+preserved. Typically used in connection with <tt class="docutils literal">intent(in,out)</tt>
+attribute.  F2PY creates an optional argument
+<tt class="docutils literal">overwrite_&lt;argument name&gt;</tt> with the default value <tt class="docutils literal">0</tt>.</p>
+</dd>
+</dl>
+</li>
+<li><dl class="first docutils">
+<dt><tt class="docutils literal">overwrite</tt></dt>
+<dd><p class="first last">The original contents of the <tt class="docutils literal">intent(in)</tt> argument may be
+altered by the Fortran/C function.  F2PY creates an optional
+argument <tt class="docutils literal">overwrite_&lt;argument name&gt;</tt> with the default value
+<tt class="docutils literal">1</tt>.</p>
+</dd>
+</dl>
+</li>
+<li><dl class="first docutils">
+<dt><tt class="docutils literal"><span class="pre">out=&lt;new</span> name&gt;</tt></dt>
+<dd><p class="first last">Replace the return name with <tt class="docutils literal">&lt;new name&gt;</tt> in the <tt class="docutils literal">__doc__</tt>
+string of a wrapper function.</p>
+</dd>
+</dl>
+</li>
+<li><dl class="first docutils">
+<dt><tt class="docutils literal">callback</tt></dt>
+<dd><p class="first">Construct an external function suitable for calling Python function
+from Fortran. <tt class="docutils literal">intent(callback)</tt> must be specified before the
+corresponding <tt class="docutils literal">external</tt> statement. If 'argument' is not in
+argument list then it will be added to Python wrapper but only
+initializing external function.</p>
+<p>Use <tt class="docutils literal">intent(callback)</tt> in situations where a Fortran/C code
+assumes that a user implements a function with given prototype
+and links it to an executable. Don't use <tt class="docutils literal">intent(callback)</tt>
+if function appears in the argument list of a Fortran routine.</p>
+<p class="last">With <tt class="docutils literal">intent(hide)</tt> or <tt class="docutils literal">optional</tt> attributes specified and
+using a wrapper function without specifying the callback argument
+in argument list then call-back function is looked in the
+namespace of F2PY generated extension module where it can be
+set as a module attribute by a user.</p>
+</dd>
+</dl>
+</li>
+<li><dl class="first docutils">
+<dt><tt class="docutils literal">aux</tt></dt>
+<dd><p class="first last">Define auxiliary C variable in F2PY generated wrapper function.
+Useful to save parameter values so that they can be accessed
+in initialization expression of other variables. Note that
+<tt class="docutils literal">intent(aux)</tt> silently implies <tt class="docutils literal">intent(c)</tt>.</p>
+</dd>
+</dl>
+</li>
+</ul>
+<p>The following rules apply:</p>
+<ul class="last simple">
+<li>If no <tt class="docutils literal">intent(in | inout | out | hide)</tt> is specified,
+<tt class="docutils literal">intent(in)</tt> is assumed.</li>
+<li><tt class="docutils literal">intent(in,inout)</tt> is <tt class="docutils literal">intent(in)</tt>.</li>
+<li><tt class="docutils literal">intent(in,hide)</tt> or <tt class="docutils literal">intent(inout,hide)</tt> is
+<tt class="docutils literal">intent(hide)</tt>.</li>
+<li><tt class="docutils literal">intent(out)</tt> is <tt class="docutils literal">intent(out,hide)</tt> unless <tt class="docutils literal">intent(in)</tt> or
+<tt class="docutils literal">intent(inout)</tt> is specified.</li>
+<li>If <tt class="docutils literal">intent(copy)</tt> or <tt class="docutils literal">intent(overwrite)</tt> is used, then an
+additional optional argument is introduced with a name
+<tt class="docutils literal">overwrite_&lt;argument name&gt;</tt> and a default value 0 or 1, respectively.</li>
+<li><tt class="docutils literal">intent(inout,inplace)</tt> is <tt class="docutils literal">intent(inplace)</tt>.</li>
+<li><tt class="docutils literal">intent(in,inplace)</tt> is <tt class="docutils literal">intent(inplace)</tt>.</li>
+<li><tt class="docutils literal">intent(hide)</tt> disables <tt class="docutils literal">optional</tt> and <tt class="docutils literal">required</tt>.</li>
+</ul>
+</dd>
+<dt><tt class="docutils literal"><span class="pre">check([&lt;C-booleanexpr&gt;])</span></tt></dt>
+<dd><p class="first">Perform consistency check of arguments by evaluating
+<tt class="docutils literal"><span class="pre">&lt;C-booleanexpr&gt;</span></tt>; if <tt class="docutils literal"><span class="pre">&lt;C-booleanexpr&gt;</span></tt> returns 0, an exception
+is raised.</p>
+<p class="last">If <tt class="docutils literal"><span class="pre">check(..)</span></tt> is not used then F2PY generates few standard checks
+(e.g. in a case of an array argument, check for the proper shape
+and size) automatically. Use <tt class="docutils literal">check()</tt> to disable checks generated
+by F2PY.</p>
+</dd>
+<dt><tt class="docutils literal"><span class="pre">depend([&lt;names&gt;])</span></tt></dt>
+<dd><p class="first">This declares that the corresponding argument depends on the values
+of variables in the list <tt class="docutils literal">&lt;names&gt;</tt>. For example, <tt class="docutils literal">&lt;init_expr&gt;</tt>
+may use the values of other arguments.  Using information given by
+<tt class="docutils literal"><span class="pre">depend(..)</span></tt> attributes, F2PY ensures that arguments are
+initialized in a proper order. If <tt class="docutils literal"><span class="pre">depend(..)</span></tt> attribute is not
+used then F2PY determines dependence relations automatically. Use
+<tt class="docutils literal">depend()</tt> to disable dependence relations generated by F2PY.</p>
+<p class="last">When you edit dependence relations that were initially generated by
+F2PY, be careful not to break the dependence relations of other
+relevant variables. Another thing to watch out is cyclic
+dependencies. F2PY is able to detect cyclic dependencies
+when constructing wrappers and it complains if any are found.</p>
+</dd>
+<dt><tt class="docutils literal">allocatable</tt></dt>
+<dd>The corresponding variable is Fortran 90 allocatable array defined
+as Fortran 90 module data.</dd>
+</dl>
+<dl class="docutils" id="external">
+<dt><tt class="docutils literal">external</tt></dt>
+<dd><p class="first">The corresponding argument is a function provided by user. The
+signature of this so-called call-back function can be defined</p>
+<ul class="simple">
+<li>in <tt class="docutils literal">__user__</tt> module block,</li>
+<li>or by demonstrative (or real, if the signature file is a real Fortran
+code) call in the <tt class="docutils literal">&lt;other statements&gt;</tt> block.</li>
+</ul>
+<p>For example, F2PY generates from</p>
+<pre class="literal-block">
+external cb_sub, cb_fun
+integer n
+real a(n),r
+call cb_sub(a,n)
+r = cb_fun(4)
+</pre>
+<p>the following call-back signatures:</p>
+<pre class="literal-block">
+subroutine cb_sub(a,n)
+    real dimension(n) :: a
+    integer optional,check(len(a)&gt;=n),depend(a) :: n=len(a)
+end subroutine cb_sub
+function cb_fun(e_4_e) result (r)
+    integer :: e_4_e
+    real :: r
+end function cb_fun
+</pre>
+<p>The corresponding user-provided Python function are then:</p>
+<pre class="literal-block">
+def cb_sub(a,[n]):
+    ...
+    return
+def cb_fun(e_4_e):
+    ...
+    return r
+</pre>
+<p class="last">See also <tt class="docutils literal">intent(callback)</tt> attribute.</p>
+</dd>
+<dt><tt class="docutils literal">parameter</tt></dt>
+<dd>The corresponding variable is a parameter and it must have a fixed
+value. F2PY replaces all parameter occurrences by their
+corresponding values.</dd>
+</dl>
+</div>
+</div>
+<div class="section" id="extensions">
+<h2><a class="toc-backref" href="#id31">3.3&nbsp;&nbsp;&nbsp;Extensions</a></h2>
+<div class="section" id="f2py-directives">
+<h3><a class="toc-backref" href="#id32">3.3.1&nbsp;&nbsp;&nbsp;F2PY directives</a></h3>
+<p>The so-called F2PY directives allow using F2PY signature file
+constructs also in Fortran 77/90 source codes. With this feature you
+can skip (almost) completely intermediate signature file generations
+and apply F2PY directly to Fortran source codes.</p>
+<p>F2PY directive has the following form:</p>
+<pre class="literal-block">
+&lt;comment char&gt;f2py ...
+</pre>
+<p>where allowed comment characters for fixed and free format Fortran
+codes are <tt class="docutils literal"><span class="pre">cC*!#</span></tt> and <tt class="docutils literal">!</tt>, respectively. Everything that follows
+<tt class="docutils literal">&lt;comment char&gt;f2py</tt> is ignored by a compiler but read by F2PY as a
+normal Fortran (non-comment) line:</p>
+<blockquote>
+When F2PY finds a line with F2PY directive, the directive is first
+replaced by 5 spaces and then the line is reread.</blockquote>
+<p>For fixed format Fortran codes, <tt class="docutils literal">&lt;comment char&gt;</tt> must be at the
+first column of a file, of course. For free format Fortran codes,
+F2PY directives can appear anywhere in a file.</p>
+</div>
+<div class="section" id="c-expressions">
+<h3><a class="toc-backref" href="#id33">3.3.2&nbsp;&nbsp;&nbsp;C expressions</a></h3>
+<p>C expressions are used in the following parts of signature files:</p>
+<ul class="simple">
+<li><tt class="docutils literal">&lt;init_expr&gt;</tt> of variable initialization;</li>
+<li><tt class="docutils literal"><span class="pre">&lt;C-booleanexpr&gt;</span></tt> of the <tt class="docutils literal">check</tt> attribute;</li>
+<li><tt class="docutils literal">&lt;arrayspec&gt; of the ``dimension</tt> attribute;</li>
+<li><tt class="docutils literal">callstatement</tt> statement, here also a C multi-line block can be used.</li>
+</ul>
+<p>A C expression may contain:</p>
+<ul>
+<li><p class="first">standard C constructs;</p>
+</li>
+<li><p class="first">functions from <tt class="docutils literal">math.h</tt> and <tt class="docutils literal">Python.h</tt>;</p>
+</li>
+<li><p class="first">variables from the argument list, presumably initialized before
+according to given dependence relations;</p>
+</li>
+<li><p class="first">the following CPP macros:</p>
+<dl class="docutils">
+<dt><tt class="docutils literal"><span class="pre">rank(&lt;name&gt;)</span></tt></dt>
+<dd><p class="first last">Returns the rank of an array <tt class="docutils literal">&lt;name&gt;</tt>.</p>
+</dd>
+<dt><tt class="docutils literal"><span class="pre">shape(&lt;name&gt;,&lt;n&gt;)</span></tt></dt>
+<dd><p class="first last">Returns the <tt class="docutils literal">&lt;n&gt;</tt>-th dimension of an array <tt class="docutils literal">&lt;name&gt;</tt>.</p>
+</dd>
+<dt><tt class="docutils literal"><span class="pre">len(&lt;name&gt;)</span></tt></dt>
+<dd><p class="first last">Returns the lenght of an array <tt class="docutils literal">&lt;name&gt;</tt>.</p>
+</dd>
+<dt><tt class="docutils literal"><span class="pre">size(&lt;name&gt;)</span></tt></dt>
+<dd><p class="first last">Returns the size of an array <tt class="docutils literal">&lt;name&gt;</tt>.</p>
+</dd>
+<dt><tt class="docutils literal"><span class="pre">slen(&lt;name&gt;)</span></tt></dt>
+<dd><p class="first last">Returns the length of a string <tt class="docutils literal">&lt;name&gt;</tt>.</p>
+</dd>
+</dl>
+</li>
+</ul>
+<p>For initializing an array <tt class="docutils literal">&lt;array name&gt;</tt>, F2PY generates a loop over
+all indices and dimensions that executes the following
+pseudo-statement:</p>
+<pre class="literal-block">
+&lt;array name&gt;(_i[0],_i[1],...) = &lt;init_expr&gt;;
+</pre>
+<p>where <tt class="docutils literal"><span class="pre">_i[&lt;i&gt;]</span></tt> refers to the <tt class="docutils literal">&lt;i&gt;</tt>-th index value and that runs
+from <tt class="docutils literal">0</tt> to <tt class="docutils literal"><span class="pre">shape(&lt;array</span> <span class="pre">name&gt;,&lt;i&gt;)-1</span></tt>.</p>
+<p>For example, a function <tt class="docutils literal">myrange(n)</tt> generated from the following
+signature</p>
+<pre class="literal-block">
+subroutine myrange(a,n)
+  fortranname        ! myrange is a dummy wrapper
+  integer intent(in) :: n
+  real*8 intent(c,out),dimension(n),depend(n) :: a = _i[0]
+end subroutine myrange
+</pre>
+<p>is equivalent to <tt class="docutils literal"><span class="pre">Numeric.arange(n,typecode='d')</span></tt>.</p>
+<div class="topic">
+<p class="topic-title first">Warning!</p>
+<p>F2PY may lower cases also in C expressions when scanning Fortran codes
+(see <tt class="docutils literal"><span class="pre">--[no]-lower</span></tt> option).</p>
+</div>
+</div>
+<div class="section" id="multi-line-blocks">
+<h3><a class="toc-backref" href="#id34">3.3.3&nbsp;&nbsp;&nbsp;Multi-line blocks</a></h3>
+<p>A multi-line block starts with <tt class="docutils literal">'''</tt> (triple single-quotes) and ends
+with <tt class="docutils literal">'''</tt> in some <em>strictly</em> subsequent line.  Multi-line blocks can
+be used only within .pyf files. The contents of a multi-line block can
+be arbitrary (except that it cannot contain <tt class="docutils literal">'''</tt>) and no
+transformations (e.g. lowering cases) are applied to it.</p>
+<p>Currently, multi-line blocks can be used in the following constructs:</p>
+<ul class="simple">
+<li>as a C expression of the <tt class="docutils literal">callstatement</tt> statement;</li>
+<li>as a C type specification of the <tt class="docutils literal">callprotoargument</tt> statement;</li>
+<li>as a C code block of the <tt class="docutils literal">usercode</tt> statement;</li>
+<li>as a list of C arrays of the <tt class="docutils literal">pymethoddef</tt> statement;</li>
+<li>as documentation string.</li>
+</ul>
+</div>
+</div>
+</div>
+<div class="section" id="using-f2py-bindings-in-python">
+<h1><a class="toc-backref" href="#id35">4&nbsp;&nbsp;&nbsp;Using F2PY bindings in Python</a></h1>
+<p>All wrappers (to Fortran/C routines or to common blocks or to Fortran
+90 module data) generated by F2PY are exposed to Python as <tt class="docutils literal">fortran</tt>
+type objects.  Routine wrappers are callable <tt class="docutils literal">fortran</tt> type objects
+while wrappers to Fortran data have attributes referring to data
+objects.</p>
+<p>All <tt class="docutils literal">fortran</tt> type object have attribute <tt class="docutils literal">_cpointer</tt> that contains
+CObject referring to the C pointer of the corresponding Fortran/C
+function or variable in C level. Such CObjects can be used as an
+callback argument of F2PY generated functions to bypass Python C/API
+layer of calling Python functions from Fortran or C when the
+computational part of such functions is implemented in C or Fortran
+and wrapped with F2PY (or any other tool capable of providing CObject
+of a function).</p>
+<div class="topic">
+<p class="topic-title first">Example</p>
+<p>Consider a <a class="reference external" href="ftype.f">Fortran 77 file</a> <tt class="docutils literal">ftype.f</tt>:</p>
+<pre class="literal-block">
+C FILE: FTYPE.F
+      SUBROUTINE FOO(N)
+      INTEGER N
+Cf2py integer optional,intent(in) :: n = 13
+      REAL A,X
+      COMMON /DATA/ A,X(3)
+      PRINT*, &quot;IN FOO: N=&quot;,N,&quot; A=&quot;,A,&quot; X=[&quot;,X(1),X(2),X(3),&quot;]&quot;
+      END
+C END OF FTYPE.F
+
+</pre>
+<p>and build a wrapper using:</p>
+<pre class="literal-block">
+f2py -c ftype.f -m ftype
+</pre>
+<p>In Python:</p>
+<pre class="literal-block">
+&gt;&gt;&gt; import ftype
+&gt;&gt;&gt; print ftype.__doc__
+This module 'ftype' is auto-generated with f2py (version:2.28.198-1366).
+Functions:
+  foo(n=13)
+COMMON blocks:
+  /data/ a,x(3)
+.
+&gt;&gt;&gt; type(ftype.foo),type(ftype.data)
+(&lt;type 'fortran'&gt;, &lt;type 'fortran'&gt;)
+&gt;&gt;&gt; ftype.foo()
+ IN FOO: N= 13 A=  0. X=[  0.  0.  0.]
+&gt;&gt;&gt; ftype.data.a = 3
+&gt;&gt;&gt; ftype.data.x = [1,2,3]
+&gt;&gt;&gt; ftype.foo()
+ IN FOO: N= 13 A=  3. X=[  1.  2.  3.]
+&gt;&gt;&gt; ftype.data.x[1] = 45  
+&gt;&gt;&gt; ftype.foo(24)
+ IN FOO: N= 24 A=  3. X=[  1.  45.  3.]
+&gt;&gt;&gt; ftype.data.x
+array([  1.,  45.,   3.],'f')
+
+</pre>
+</div>
+<div class="section" id="scalar-arguments">
+<h2><a class="toc-backref" href="#id36">4.1&nbsp;&nbsp;&nbsp;Scalar arguments</a></h2>
+<p>In general, a scalar argument of a F2PY generated wrapper function can
+be ordinary Python scalar (integer, float, complex number) as well as
+an arbitrary sequence object (list, tuple, array, string) of
+scalars. In the latter case, the first element of the sequence object
+is passed to Fortran routine as a scalar argument.</p>
+<p>Note that when type-casting is required and there is possible loss of
+information (e.g. when type-casting float to integer or complex to
+float), F2PY does not raise any exception. In complex to real
+type-casting only the real part of a complex number is used.</p>
+<p><tt class="docutils literal">intent(inout)</tt> scalar arguments are assumed to be array objects in
+order to <em>in situ</em> changes to be effective. It is recommended to use
+arrays with proper type but also other types work.</p>
+<div class="topic">
+<p class="topic-title first">Example</p>
+<p>Consider the following <a class="reference external" href="scalar.f">Fortran 77 code</a>:</p>
+<blockquote>
+<pre class="literal-block">
+C FILE: SCALAR.F
+      SUBROUTINE FOO(A,B)
+      REAL*8 A, B
+Cf2py intent(in) a
+Cf2py intent(inout) b
+      PRINT*, &quot;    A=&quot;,A,&quot; B=&quot;,B
+      PRINT*, &quot;INCREMENT A AND B&quot;
+      A = A + 1D0
+      B = B + 1D0
+      PRINT*, &quot;NEW A=&quot;,A,&quot; B=&quot;,B
+      END
+C END OF FILE SCALAR.F
+
+</pre>
+</blockquote>
+<p>and wrap it using <tt class="docutils literal">f2py <span class="pre">-c</span> <span class="pre">-m</span> scalar scalar.f</tt>.</p>
+<p>In Python:</p>
+<blockquote>
+<pre class="literal-block">
+&gt;&gt;&gt; import scalar
+&gt;&gt;&gt; print scalar.foo.__doc__
+foo - Function signature:
+  foo(a,b)
+Required arguments:
+  a : input float
+  b : in/output rank-0 array(float,'d')
+ 
+&gt;&gt;&gt; scalar.foo(2,3)   
+     A=  2. B=  3.
+ INCREMENT A AND B
+ NEW A=  3. B=  4.
+&gt;&gt;&gt; import Numeric
+&gt;&gt;&gt; a=Numeric.array(2)   # these are integer rank-0 arrays
+&gt;&gt;&gt; b=Numeric.array(3)
+&gt;&gt;&gt; scalar.foo(a,b)
+     A=  2. B=  3.
+ INCREMENT A AND B
+ NEW A=  3. B=  4.
+&gt;&gt;&gt; print a,b            # note that only b is changed in situ
+2 4
+</pre>
+</blockquote>
+</div>
+</div>
+<div class="section" id="string-arguments">
+<h2><a class="toc-backref" href="#id37">4.2&nbsp;&nbsp;&nbsp;String arguments</a></h2>
+<p>F2PY generated wrapper functions accept (almost) any Python object as
+a string argument, <tt class="docutils literal">str</tt> is applied for non-string objects.
+Exceptions are Numeric arrays that must have type code <tt class="docutils literal">'c'</tt> or
+<tt class="docutils literal">'1'</tt> when used as string arguments.</p>
+<p>A string can have arbitrary length when using it as a string argument
+to F2PY generated wrapper function. If the length is greater than
+expected, the string is truncated. If the length is smaller that
+expected, additional memory is allocated and filled with <tt class="docutils literal">\0</tt>.</p>
+<p>Because Python strings are immutable, an <tt class="docutils literal">intent(inout)</tt> argument
+expects an array version of a string in order to <em>in situ</em> changes to
+be effective.</p>
+<div class="topic">
+<p class="topic-title first">Example</p>
+<p>Consider the following <a class="reference external" href="string.f">Fortran 77 code</a>:</p>
+<pre class="literal-block">
+C FILE: STRING.F
+      SUBROUTINE FOO(A,B,C,D)
+      CHARACTER*5 A, B
+      CHARACTER*(*) C,D
+Cf2py intent(in) a,c
+Cf2py intent(inout) b,d
+      PRINT*, &quot;A=&quot;,A
+      PRINT*, &quot;B=&quot;,B
+      PRINT*, &quot;C=&quot;,C
+      PRINT*, &quot;D=&quot;,D
+      PRINT*, &quot;CHANGE A,B,C,D&quot;
+      A(1:1) = 'A'
+      B(1:1) = 'B'
+      C(1:1) = 'C'
+      D(1:1) = 'D'
+      PRINT*, &quot;A=&quot;,A
+      PRINT*, &quot;B=&quot;,B
+      PRINT*, &quot;C=&quot;,C
+      PRINT*, &quot;D=&quot;,D
+      END
+C END OF FILE STRING.F
+
+</pre>
+<p>and wrap it using <tt class="docutils literal">f2py <span class="pre">-c</span> <span class="pre">-m</span> mystring string.f</tt>.</p>
+<p>Python session:</p>
+<pre class="literal-block">
+&gt;&gt;&gt; import mystring
+&gt;&gt;&gt; print mystring.foo.__doc__
+foo - Function signature:
+  foo(a,b,c,d)
+Required arguments:
+  a : input string(len=5)
+  b : in/output rank-0 array(string(len=5),'c')
+  c : input string(len=-1)
+  d : in/output rank-0 array(string(len=-1),'c')
+
+&gt;&gt;&gt; import Numeric
+&gt;&gt;&gt; a=Numeric.array('123')
+&gt;&gt;&gt; b=Numeric.array('123')
+&gt;&gt;&gt; c=Numeric.array('123')
+&gt;&gt;&gt; d=Numeric.array('123')
+&gt;&gt;&gt; mystring.foo(a,b,c,d)
+ A=123
+ B=123
+ C=123
+ D=123
+ CHANGE A,B,C,D
+ A=A23
+ B=B23
+ C=C23
+ D=D23
+&gt;&gt;&gt; a.tostring(),b.tostring(),c.tostring(),d.tostring()
+('123', 'B23', '123', 'D23')
+</pre>
+</div>
+</div>
+<div class="section" id="array-arguments">
+<h2><a class="toc-backref" href="#id38">4.3&nbsp;&nbsp;&nbsp;Array arguments</a></h2>
+<p>In general, array arguments of F2PY generated wrapper functions accept
+arbitrary sequences that can be transformed to Numeric array objects.
+An exception is <tt class="docutils literal">intent(inout)</tt> array arguments that always must be
+proper-contiguous and have proper type, otherwise an exception is
+raised. Another exception is <tt class="docutils literal">intent(inplace)</tt> array arguments that
+attributes will be changed in-situ if the argument has different type
+than expected (see <tt class="docutils literal">intent(inplace)</tt> attribute for more
+information).</p>
+<p>In general, if a Numeric array is proper-contiguous and has a proper
+type then it is directly passed to wrapped Fortran/C function.
+Otherwise, an element-wise copy of an input array is made and the
+copy, being proper-contiguous and with proper type, is used as an
+array argument.</p>
+<p>There are two types of proper-contiguous Numeric arrays:</p>
+<ul class="simple">
+<li>Fortran-contiguous arrays when data is stored column-wise,
+i.e. indexing of data as stored in memory starts from the lowest
+dimension;</li>
+<li>C-contiguous or simply contiguous arrays when data is stored
+row-wise, i.e. indexing of data as stored in memory starts from the
+highest dimension.</li>
+</ul>
+<p>For one-dimensional arrays these notions coincide.</p>
+<p>For example, an 2x2 array <tt class="docutils literal">A</tt> is Fortran-contiguous if its elements
+are stored in memory in the following order:</p>
+<pre class="literal-block">
+A[0,0] A[1,0] A[0,1] A[1,1]
+</pre>
+<p>and C-contiguous if the order is as follows:</p>
+<pre class="literal-block">
+A[0,0] A[0,1] A[1,0] A[1,1]
+</pre>
+<p>To test whether an array is C-contiguous, use <tt class="docutils literal">.iscontiguous()</tt>
+method of Numeric arrays.  To test for Fortran-contiguousness, all
+F2PY generated extension modules provide a function
+<tt class="docutils literal"><span class="pre">has_column_major_storage(&lt;array&gt;)</span></tt>. This function is equivalent to
+<tt class="docutils literal"><span class="pre">Numeric.transpose(&lt;array&gt;).iscontiguous()</span></tt> but more efficient.</p>
+<p>Usually there is no need to worry about how the arrays are stored in
+memory and whether the wrapped functions, being either Fortran or C
+functions, assume one or another storage order. F2PY automatically
+ensures that wrapped functions get arguments with proper storage
+order; the corresponding algorithm is designed to make copies of
+arrays only when absolutely necessary. However, when dealing with very
+large multi-dimensional input arrays with sizes close to the size of
+the physical memory in your computer, then a care must be taken to use
+always proper-contiguous and proper type arguments.</p>
+<p>To transform input arrays to column major storage order before passing
+them to Fortran routines, use a function
+<tt class="docutils literal"><span class="pre">as_column_major_storage(&lt;array&gt;)</span></tt> that is provided by all F2PY
+generated extension modules.</p>
+<div class="topic">
+<p class="topic-title first">Example</p>
+<p>Consider <a class="reference external" href="array.f">Fortran 77 code</a>:</p>
+<pre class="literal-block">
+C FILE: ARRAY.F
+      SUBROUTINE FOO(A,N,M)
+C
+C     INCREMENT THE FIRST ROW AND DECREMENT THE FIRST COLUMN OF A
+C
+      INTEGER N,M,I,J
+      REAL*8 A(N,M)
+Cf2py intent(in,out,copy) a
+Cf2py integer intent(hide),depend(a) :: n=shape(a,0), m=shape(a,1)
+      DO J=1,M
+         A(1,J) = A(1,J) + 1D0
+      ENDDO
+      DO I=1,N
+         A(I,1) = A(I,1) - 1D0
+      ENDDO
+      END
+C END OF FILE ARRAY.F
+
+</pre>
+<p>and wrap it using <tt class="docutils literal">f2py <span class="pre">-c</span> <span class="pre">-m</span> arr array.f <span class="pre">-DF2PY_REPORT_ON_ARRAY_COPY=1</span></tt>.</p>
+<p>In Python:</p>
+<pre class="literal-block">
+&gt;&gt;&gt; import arr
+&gt;&gt;&gt; from Numeric import array
+&gt;&gt;&gt; print arr.foo.__doc__
+foo - Function signature:
+  a = foo(a,[overwrite_a])
+Required arguments:
+  a : input rank-2 array('d') with bounds (n,m)
+Optional arguments:
+  overwrite_a := 0 input int
+Return objects:
+  a : rank-2 array('d') with bounds (n,m)
+
+&gt;&gt;&gt; a=arr.foo([[1,2,3],
+...            [4,5,6]])
+copied an array using PyArray_CopyFromObject: size=6, elsize=8
+&gt;&gt;&gt; print a
+[[ 1.  3.  4.]
+ [ 3.  5.  6.]]
+&gt;&gt;&gt; a.iscontiguous(), arr.has_column_major_storage(a)
+(0, 1)
+&gt;&gt;&gt; b=arr.foo(a)              # even if a is proper-contiguous
+...                           # and has proper type, a copy is made
+...                           # forced by intent(copy) attribute
+...                           # to preserve its original contents
+... 
+copied an array using copy_ND_array: size=6, elsize=8
+&gt;&gt;&gt; print a
+[[ 1.  3.  4.]
+ [ 3.  5.  6.]]
+&gt;&gt;&gt; print b
+[[ 1.  4.  5.]
+ [ 2.  5.  6.]]
+&gt;&gt;&gt; b=arr.foo(a,overwrite_a=1) # a is passed directly to Fortran
+...                            # routine and its contents is discarded
+... 
+&gt;&gt;&gt; print a
+[[ 1.  4.  5.]
+ [ 2.  5.  6.]]
+&gt;&gt;&gt; print b
+[[ 1.  4.  5.]
+ [ 2.  5.  6.]]
+&gt;&gt;&gt; a is b                       # a and b are acctually the same objects
+1
+&gt;&gt;&gt; print arr.foo([1,2,3])       # different rank arrays are allowed
+copied an array using PyArray_CopyFromObject: size=3, elsize=8
+[ 1.  1.  2.]
+&gt;&gt;&gt; print arr.foo([[[1],[2],[3]]])
+copied an array using PyArray_CopyFromObject: size=3, elsize=8
+[ [[ 1.]
+  [ 3.]
+  [ 4.]]]
+&gt;&gt;&gt;
+&gt;&gt;&gt; # Creating arrays with column major data storage order:
+...
+&gt;&gt;&gt; s = arr.as_column_major_storage(array([[1,2,3],[4,5,6]]))
+copied an array using copy_ND_array: size=6, elsize=4
+&gt;&gt;&gt; arr.has_column_major_storage(s)
+1
+&gt;&gt;&gt; print s
+[[1 2 3]
+ [4 5 6]]
+&gt;&gt;&gt; s2 = arr.as_column_major_storage(s)
+&gt;&gt;&gt; s2 is s    # an array with column major storage order 
+               # is returned immediately
+1
+</pre>
+</div>
+</div>
+<div class="section" id="call-back-arguments">
+<h2><a class="toc-backref" href="#id39">4.4&nbsp;&nbsp;&nbsp;Call-back arguments</a></h2>
+<p>F2PY supports calling Python functions from Fortran or C codes.</p>
+<div class="topic">
+<p class="topic-title first">Example</p>
+<p>Consider the following <a class="reference external" href="callback.f">Fortran 77 code</a></p>
+<pre class="literal-block">
+C FILE: CALLBACK.F
+      SUBROUTINE FOO(FUN,R)
+      EXTERNAL FUN
+      INTEGER I
+      REAL*8 R
+Cf2py intent(out) r
+      R = 0D0
+      DO I=-5,5
+         R = R + FUN(I)
+      ENDDO
+      END
+C END OF FILE CALLBACK.F
+
+</pre>
+<p>and wrap it using <tt class="docutils literal">f2py <span class="pre">-c</span> <span class="pre">-m</span> callback callback.f</tt>.</p>
+<p>In Python:</p>
+<pre class="literal-block">
+&gt;&gt;&gt; import callback
+&gt;&gt;&gt; print callback.foo.__doc__
+foo - Function signature:
+  r = foo(fun,[fun_extra_args])
+Required arguments:
+  fun : call-back function
+Optional arguments:
+  fun_extra_args := () input tuple
+Return objects:
+  r : float
+Call-back functions:
+  def fun(i): return r
+  Required arguments:
+    i : input int
+  Return objects:
+    r : float
+
+&gt;&gt;&gt; def f(i): return i*i
+... 
+&gt;&gt;&gt; print callback.foo(f)     
+110.0
+&gt;&gt;&gt; print callback.foo(lambda i:1)
+11.0
+
+</pre>
+</div>
+<p>In the above example F2PY was able to guess accurately the signature
+of a call-back function. However, sometimes F2PY cannot establish the
+signature as one would wish and then the signature of a call-back
+function must be modified in the signature file manually. Namely,
+signature files may contain special modules (the names of such modules
+contain a substring <tt class="docutils literal">__user__</tt>) that collect various signatures of
+call-back functions.  Callback arguments in routine signatures have
+attribute <tt class="docutils literal">external</tt> (see also <tt class="docutils literal">intent(callback)</tt> attribute).  To
+relate a callback argument and its signature in <tt class="docutils literal">__user__</tt> module
+block, use <tt class="docutils literal">use</tt> statement as illustrated below. The same signature
+of a callback argument can be referred in different routine
+signatures.</p>
+<div class="topic">
+<p class="topic-title first">Example</p>
+<p>We use the same <a class="reference external" href="callback.f">Fortran 77 code</a> as in previous example but now
+we'll pretend that F2PY was not able to guess the signatures of
+call-back arguments correctly. First, we create an initial signature
+file <tt class="docutils literal">callback2.pyf</tt> using F2PY:</p>
+<pre class="literal-block">
+f2py -m callback2 -h callback2.pyf callback.f
+</pre>
+<p>Then modify it as follows</p>
+<pre class="literal-block">
+!    -*- f90 -*-
+python module __user__routines 
+    interface
+        function fun(i) result (r)
+            integer :: i
+            real*8 :: r
+        end function fun
+    end interface
+end python module __user__routines
+
+python module callback2
+    interface
+        subroutine foo(f,r)
+            use __user__routines, f=&gt;fun
+            external f
+            real*8 intent(out) :: r
+        end subroutine foo
+    end interface 
+end python module callback2
+
+</pre>
+<p>Finally, build the extension module using:</p>
+<pre class="literal-block">
+f2py -c callback2.pyf callback.f
+</pre>
+<p>An example Python session would be identical to the previous example
+except that argument names would differ.</p>
+</div>
+<p>Sometimes a Fortran package may require that users provide routines
+that the package will use. F2PY can construct an interface to such
+routines so that Python functions could be called from Fortran.</p>
+<div class="topic">
+<p class="topic-title first">Example</p>
+<p>Consider the following <a class="reference external" href="calculate.f">Fortran 77 subroutine</a> that takes an array
+and applies a function <tt class="docutils literal">func</tt> to its elements.</p>
+<pre class="literal-block">
+      subroutine calculate(x,n)
+cf2py intent(callback) func
+      external func
+c     The following lines define the signature of func for F2PY:
+cf2py real*8 y
+cf2py y = func(y)
+c
+cf2py intent(in,out,copy) x
+      integer n,i
+      real*8 x(n)
+      do i=1,n
+         x(i) = func(x(i))
+      end do
+      end
+
+</pre>
+<p>It is expected that function <tt class="docutils literal">func</tt> has been defined
+externally. In order to use a Python function as <tt class="docutils literal">func</tt>, it must
+have an attribute <tt class="docutils literal">intent(callback)</tt> (it must be specified before
+the <tt class="docutils literal">external</tt> statement).</p>
+<p>Finally, build an extension module using:</p>
+<pre class="literal-block">
+f2py -c -m foo calculate.f
+</pre>
+<p>In Python:</p>
+<pre class="literal-block">
+&gt;&gt;&gt; import foo
+&gt;&gt;&gt; foo.calculate(range(5), lambda x: x*x)
+array([  0.,   1.,   4.,   9.,  16.])
+&gt;&gt;&gt; import math
+&gt;&gt;&gt; foo.calculate(range(5), math.exp)
+array([  1.        ,   2.71828175,   7.38905621,  20.08553696,  54.59814835])
+
+</pre>
+</div>
+<p>The function is included as an argument to the python function call to
+the FORTRAN subroutine eventhough it was NOT in the FORTRAN subroutine argument
+list. The &quot;external&quot; refers to the C function generated by f2py, not the python
+function itself. The python function must be supplied to the C function.</p>
+<p>The callback function may also be explicitly set in the module.
+Then it is not necessary to pass the function in the argument list to
+the FORTRAN function. This may be desired if the FORTRAN function calling
+the python callback function is itself called by another FORTRAN function.</p>
+<div class="topic">
+<p class="topic-title first">Example</p>
+<p>Consider the following <a class="reference external" href="extcallback.f">Fortran 77 subroutine</a>.</p>
+<pre class="literal-block">
+      subroutine f1()
+         print *, &quot;in f1, calling f2 twice..&quot;
+         call f2()
+         call f2()
+         return
+      end
+      
+      subroutine f2()
+cf2py    intent(callback, hide) fpy
+         external fpy
+         print *, &quot;in f2, calling f2py..&quot;
+         call fpy()
+         return
+      end
+
+</pre>
+<p>and wrap it using <tt class="docutils literal">f2py <span class="pre">-c</span> <span class="pre">-m</span> pfromf extcallback.f</tt>.</p>
+<p>In Python:</p>
+<pre class="literal-block">
+&gt;&gt;&gt; import pfromf
+&gt;&gt;&gt; pfromf.f2()
+Traceback (most recent call last):
+  File &quot;&lt;stdin&gt;&quot;, line 1, in ?
+pfromf.error: Callback fpy not defined (as an argument or module pfromf attribute).
+
+&gt;&gt;&gt; def f(): print &quot;python f&quot;
+... 
+&gt;&gt;&gt; pfromf.fpy = f
+&gt;&gt;&gt; pfromf.f2()
+ in f2, calling f2py..
+python f
+&gt;&gt;&gt; pfromf.f1()
+ in f1, calling f2 twice..
+ in f2, calling f2py..
+python f
+ in f2, calling f2py..
+python f
+&gt;&gt;&gt; 
+</pre>
+</div>
+<div class="section" id="resolving-arguments-to-call-back-functions">
+<h3><a class="toc-backref" href="#id40">4.4.1&nbsp;&nbsp;&nbsp;Resolving arguments to call-back functions</a></h3>
+<p>F2PY generated interface is very flexible with respect to call-back
+arguments.  For each call-back argument an additional optional
+argument <tt class="docutils literal">&lt;name&gt;_extra_args</tt> is introduced by F2PY. This argument
+can be used to pass extra arguments to user provided call-back
+arguments.</p>
+<p>If a F2PY generated wrapper function expects the following call-back
+argument:</p>
+<pre class="literal-block">
+def fun(a_1,...,a_n):
+   ...
+   return x_1,...,x_k
+</pre>
+<p>but the following Python function</p>
+<pre class="literal-block">
+def gun(b_1,...,b_m):
+   ...
+   return y_1,...,y_l
+</pre>
+<p>is provided by an user, and in addition,</p>
+<pre class="literal-block">
+fun_extra_args = (e_1,...,e_p)
+</pre>
+<p>is used, then the following rules are applied when a Fortran or C
+function calls the call-back argument <tt class="docutils literal">gun</tt>:</p>
+<ul class="simple">
+<li>If <tt class="docutils literal"><span class="pre">p==0</span></tt> then <tt class="docutils literal"><span class="pre">gun(a_1,...,a_q)</span></tt> is called, here
+<tt class="docutils literal">q=min(m,n)</tt>.</li>
+<li>If <tt class="docutils literal"><span class="pre">n+p&lt;=m</span></tt> then <tt class="docutils literal"><span class="pre">gun(a_1,...,a_n,e_1,...,e_p)</span></tt> is called.</li>
+<li>If <tt class="docutils literal"><span class="pre">p&lt;=m&lt;n+p</span></tt> then <tt class="docutils literal"><span class="pre">gun(a_1,...,a_q,e_1,...,e_p)</span></tt> is called, here
+<tt class="docutils literal"><span class="pre">q=m-p</span></tt>.</li>
+<li>If <tt class="docutils literal">p&gt;m</tt> then <tt class="docutils literal"><span class="pre">gun(e_1,...,e_m)</span></tt> is called.</li>
+<li>If <tt class="docutils literal">n+p</tt> is less than the number of required arguments to <tt class="docutils literal">gun</tt>
+then an exception is raised.</li>
+</ul>
+<p>The function <tt class="docutils literal">gun</tt> may return any number of objects as a tuple. Then
+following rules are applied:</p>
+<ul class="simple">
+<li>If <tt class="docutils literal">k&lt;l</tt>, then <tt class="docutils literal"><span class="pre">y_{k+1},...,y_l</span></tt> are ignored.</li>
+<li>If <tt class="docutils literal">k&gt;l</tt>, then only <tt class="docutils literal"><span class="pre">x_1,...,x_l</span></tt> are set.</li>
+</ul>
+</div>
+</div>
+<div class="section" id="common-blocks">
+<h2><a class="toc-backref" href="#id41">4.5&nbsp;&nbsp;&nbsp;Common blocks</a></h2>
+<p>F2PY generates wrappers to <tt class="docutils literal">common</tt> blocks defined in a routine
+signature block. Common blocks are visible by all Fortran codes linked
+with the current extension module, but not to other extension modules
+(this restriction is due to how Python imports shared libraries).  In
+Python, the F2PY wrappers to <tt class="docutils literal">common</tt> blocks are <tt class="docutils literal">fortran</tt> type
+objects that have (dynamic) attributes related to data members of
+common blocks. When accessed, these attributes return as Numeric array
+objects (multi-dimensional arrays are Fortran-contiguous) that
+directly link to data members in common blocks. Data members can be
+changed by direct assignment or by in-place changes to the
+corresponding array objects.</p>
+<div class="topic">
+<p class="topic-title first">Example</p>
+<p>Consider the following <a class="reference external" href="common.f">Fortran 77 code</a></p>
+<pre class="literal-block">
+C FILE: COMMON.F
+      SUBROUTINE FOO
+      INTEGER I,X
+      REAL A
+      COMMON /DATA/ I,X(4),A(2,3)
+      PRINT*, &quot;I=&quot;,I
+      PRINT*, &quot;X=[&quot;,X,&quot;]&quot;
+      PRINT*, &quot;A=[&quot;
+      PRINT*, &quot;[&quot;,A(1,1),&quot;,&quot;,A(1,2),&quot;,&quot;,A(1,3),&quot;]&quot;
+      PRINT*, &quot;[&quot;,A(2,1),&quot;,&quot;,A(2,2),&quot;,&quot;,A(2,3),&quot;]&quot;
+      PRINT*, &quot;]&quot;
+      END
+C END OF COMMON.F
+
+</pre>
+<p>and wrap it using <tt class="docutils literal">f2py <span class="pre">-c</span> <span class="pre">-m</span> common common.f</tt>.</p>
+<p>In Python:</p>
+<pre class="literal-block">
+&gt;&gt;&gt; import common
+&gt;&gt;&gt; print common.data.__doc__
+i - 'i'-scalar
+x - 'i'-array(4)
+a - 'f'-array(2,3)
+
+&gt;&gt;&gt; common.data.i = 5
+&gt;&gt;&gt; common.data.x[1] = 2 
+&gt;&gt;&gt; common.data.a = [[1,2,3],[4,5,6]]
+&gt;&gt;&gt; common.foo()
+ I= 5
+ X=[ 0 2 0 0]
+ A=[
+ [  1.,  2.,  3.]
+ [  4.,  5.,  6.]
+ ]
+&gt;&gt;&gt; common.data.a[1] = 45
+&gt;&gt;&gt; common.foo()
+ I= 5
+ X=[ 0 2 0 0]
+ A=[
+ [  1.,  2.,  3.]
+ [  45.,  45.,  45.]
+ ]
+&gt;&gt;&gt; common.data.a                 # a is Fortran-contiguous
+array([[  1.,   2.,   3.],
+       [ 45.,  45.,  45.]],'f')
+
+</pre>
+</div>
+</div>
+<div class="section" id="fortran-90-module-data">
+<h2><a class="toc-backref" href="#id42">4.6&nbsp;&nbsp;&nbsp;Fortran 90 module data</a></h2>
+<p>The F2PY interface to Fortran 90 module data is similar to Fortran 77
+common blocks.</p>
+<div class="topic">
+<p class="topic-title first">Example</p>
+<p>Consider the following <a class="reference external" href="moddata.f90">Fortran 90 code</a></p>
+<pre class="literal-block">
+module mod
+  integer i
+  integer :: x(4)
+  real, dimension(2,3) :: a
+  real, allocatable, dimension(:,:) :: b 
+contains
+  subroutine foo
+    integer k
+    print*, &quot;i=&quot;,i
+    print*, &quot;x=[&quot;,x,&quot;]&quot;
+    print*, &quot;a=[&quot;
+    print*, &quot;[&quot;,a(1,1),&quot;,&quot;,a(1,2),&quot;,&quot;,a(1,3),&quot;]&quot;
+    print*, &quot;[&quot;,a(2,1),&quot;,&quot;,a(2,2),&quot;,&quot;,a(2,3),&quot;]&quot;
+    print*, &quot;]&quot;
+    print*, &quot;Setting a(1,2)=a(1,2)+3&quot;
+    a(1,2) = a(1,2)+3
+  end subroutine foo
+end module mod
+
+</pre>
+<p>and wrap it using <tt class="docutils literal">f2py <span class="pre">-c</span> <span class="pre">-m</span> moddata moddata.f90</tt>.</p>
+<p>In Python:</p>
+<pre class="literal-block">
+&gt;&gt;&gt; import moddata
+&gt;&gt;&gt; print moddata.mod.__doc__
+i - 'i'-scalar
+x - 'i'-array(4)
+a - 'f'-array(2,3)
+foo - Function signature:
+  foo()
+
+
+&gt;&gt;&gt; moddata.mod.i = 5  
+&gt;&gt;&gt; moddata.mod.x[:2] = [1,2]
+&gt;&gt;&gt; moddata.mod.a = [[1,2,3],[4,5,6]]
+&gt;&gt;&gt; moddata.mod.foo()                
+ i=           5
+ x=[           1           2           0           0 ]
+ a=[
+ [   1.000000     ,   2.000000     ,   3.000000     ]
+ [   4.000000     ,   5.000000     ,   6.000000     ]
+ ]
+ Setting a(1,2)=a(1,2)+3
+&gt;&gt;&gt; moddata.mod.a               # a is Fortran-contiguous
+array([[ 1.,  5.,  3.],
+       [ 4.,  5.,  6.]],'f')
+
+</pre>
+</div>
+<div class="section" id="allocatable-arrays">
+<h3><a class="toc-backref" href="#id43">4.6.1&nbsp;&nbsp;&nbsp;Allocatable arrays</a></h3>
+<p>F2PY has basic support for Fortran 90 module allocatable arrays.</p>
+<div class="topic">
+<p class="topic-title first">Example</p>
+<p>Consider the following <a class="reference external" href="allocarr.f90">Fortran 90 code</a></p>
+<pre class="literal-block">
+module mod
+  real, allocatable, dimension(:,:) :: b 
+contains
+  subroutine foo
+    integer k
+    if (allocated(b)) then
+       print*, &quot;b=[&quot;
+       do k = 1,size(b,1)
+          print*, b(k,1:size(b,2))
+       enddo
+       print*, &quot;]&quot;
+    else
+       print*, &quot;b is not allocated&quot;
+    endif
+  end subroutine foo
+end module mod
+
+</pre>
+<p>and wrap it using <tt class="docutils literal">f2py <span class="pre">-c</span> <span class="pre">-m</span> allocarr allocarr.f90</tt>.</p>
+<p>In Python:</p>
+<pre class="literal-block">
+&gt;&gt;&gt; import allocarr 
+&gt;&gt;&gt; print allocarr.mod.__doc__
+b - 'f'-array(-1,-1), not allocated
+foo - Function signature:
+  foo()
+
+&gt;&gt;&gt; allocarr.mod.foo()  
+ b is not allocated
+&gt;&gt;&gt; allocarr.mod.b = [[1,2,3],[4,5,6]]         # allocate/initialize b
+&gt;&gt;&gt; allocarr.mod.foo()
+ b=[
+   1.000000       2.000000       3.000000    
+   4.000000       5.000000       6.000000    
+ ]
+&gt;&gt;&gt; allocarr.mod.b                             # b is Fortran-contiguous
+array([[ 1.,  2.,  3.],
+       [ 4.,  5.,  6.]],'f')
+&gt;&gt;&gt; allocarr.mod.b = [[1,2,3],[4,5,6],[7,8,9]] # reallocate/initialize b
+&gt;&gt;&gt; allocarr.mod.foo()
+ b=[
+   1.000000       2.000000       3.000000    
+   4.000000       5.000000       6.000000    
+   7.000000       8.000000       9.000000    
+ ]
+&gt;&gt;&gt; allocarr.mod.b = None                      # deallocate array
+&gt;&gt;&gt; allocarr.mod.foo()
+ b is not allocated
+
+</pre>
+</div>
+</div>
+</div>
+</div>
+<div class="section" id="using-f2py">
+<h1><a class="toc-backref" href="#id44">5&nbsp;&nbsp;&nbsp;Using F2PY</a></h1>
+<p>F2PY can be used either as a command line tool <tt class="docutils literal">f2py</tt> or as a Python
+module <tt class="docutils literal">f2py2e</tt>.</p>
+<div class="section" id="command-f2py">
+<h2><a class="toc-backref" href="#id45">5.1&nbsp;&nbsp;&nbsp;Command <tt class="docutils literal">f2py</tt></a></h2>
+<p>When used as a command line tool, <tt class="docutils literal">f2py</tt> has three major modes,
+distinguished by the usage of <tt class="docutils literal"><span class="pre">-c</span></tt> and <tt class="docutils literal"><span class="pre">-h</span></tt> switches:</p>
+<ol class="arabic simple">
+<li>To scan Fortran sources and generate a signature file, use</li>
+</ol>
+<blockquote>
+<pre class="literal-block">
+f2py -h &lt;filename.pyf&gt; &lt;options&gt; &lt;fortran files&gt;   \
+  [[ only: &lt;fortran functions&gt;  : ]                \
+   [ skip: &lt;fortran functions&gt;  : ]]...            \
+  [&lt;fortran files&gt; ...]
+</pre>
+<p>Note that a Fortran source file can contain many routines, and not
+necessarily all routines are needed to be used from Python. So, you
+can either specify which routines should be wrapped (in <tt class="docutils literal">only: .. :</tt>
+part) or which routines F2PY should ignored (in <tt class="docutils literal">skip: .. :</tt> part).</p>
+<p>If <tt class="docutils literal">&lt;filename.pyf&gt;</tt> is specified as <tt class="docutils literal">stdout</tt> then signatures
+are send to standard output instead of a file.</p>
+<p>Among other options (see below), the following options can be used
+in this mode:</p>
+<dl class="docutils">
+<dt><tt class="docutils literal"><span class="pre">--overwrite-signature</span></tt></dt>
+<dd>Overwrite existing signature file.</dd>
+</dl>
+</blockquote>
+<ol class="arabic simple" start="2">
+<li>To construct an extension module, use</li>
+</ol>
+<blockquote>
+<pre class="literal-block">
+f2py &lt;options&gt; &lt;fortran files&gt;          \
+  [[ only: &lt;fortran functions&gt;  : ]     \
+   [ skip: &lt;fortran functions&gt;  : ]]... \
+  [&lt;fortran files&gt; ...]
+</pre>
+<p>The constructed extension module is saved as
+<tt class="docutils literal">&lt;modulename&gt;module.c</tt> to the current directory.</p>
+<p>Here <tt class="docutils literal">&lt;fortran files&gt;</tt> may also contain signature files.
+Among other options (see below), the following options can be used
+in this mode:</p>
+<dl class="docutils">
+<dt><tt class="docutils literal"><span class="pre">--debug-capi</span></tt></dt>
+<dd>Add debugging hooks to the extension module. When using this
+extension module, various information about the wrapper is printed
+to standard output, for example, the values of variables, the
+steps taken, etc.</dd>
+<dt><tt class="docutils literal"><span class="pre">-include'&lt;includefile&gt;'</span></tt></dt>
+<dd><p class="first">Add a CPP <tt class="docutils literal">#include</tt> statement to the extension module source.
+<tt class="docutils literal">&lt;includefile&gt;</tt> should be given in one of the following forms:</p>
+<pre class="literal-block">
+&quot;filename.ext&quot;
+&lt;filename.ext&gt;
+</pre>
+<p>The include statement is inserted just before the wrapper
+functions. This feature enables using arbitrary C functions
+(defined in <tt class="docutils literal">&lt;includefile&gt;</tt>) in F2PY generated wrappers.</p>
+<p class="last">This option is deprecated. Use <tt class="docutils literal">usercode</tt> statement to specify
+C codelets directly in signature filess</p>
+</dd>
+</dl>
+<p><tt class="docutils literal"><span class="pre">--[no-]wrap-functions</span></tt></p>
+<blockquote>
+Create Fortran subroutine wrappers to Fortran functions.
+<tt class="docutils literal"><span class="pre">--wrap-functions</span></tt> is default because it ensures maximum
+portability and compiler independence.</blockquote>
+<dl class="docutils">
+<dt><tt class="docutils literal"><span class="pre">--include-paths</span> <span class="pre">&lt;path1&gt;:&lt;path2&gt;:..</span></tt></dt>
+<dd>Search include files from given directories.</dd>
+<dt><tt class="docutils literal"><span class="pre">--help-link</span> [&lt;list of resources names&gt;]</tt></dt>
+<dd>List system resources found by <tt class="docutils literal">numpy_distutils/system_info.py</tt>.
+For example, try <tt class="docutils literal">f2py <span class="pre">--help-link</span> lapack_opt</tt>.</dd>
+</dl>
+</blockquote>
+<ol class="arabic simple" start="3">
+<li>To build an extension module, use</li>
+</ol>
+<blockquote>
+<pre class="literal-block">
+f2py -c &lt;options&gt; &lt;fortran files&gt;       \
+  [[ only: &lt;fortran functions&gt;  : ]     \
+   [ skip: &lt;fortran functions&gt;  : ]]... \
+  [ &lt;fortran/c source files&gt; ] [ &lt;.o, .a, .so files&gt; ]
+</pre>
+<p>If <tt class="docutils literal">&lt;fortran files&gt;</tt> contains a signature file, then a source for
+an extension module is constructed, all Fortran and C sources are
+compiled, and finally all object and library files are linked to the
+extension module <tt class="docutils literal"><span class="pre">&lt;modulename&gt;.so</span></tt> which is saved into the current
+directory.</p>
+<p>If <tt class="docutils literal">&lt;fortran files&gt;</tt> does not contain a signature file, then an
+extension module is constructed by scanning all Fortran source codes
+for routine signatures.</p>
+<p>Among other options (see below) and options described in previous
+mode, the following options can be used in this mode:</p>
+<dl class="docutils">
+<dt><tt class="docutils literal"><span class="pre">--help-fcompiler</span></tt></dt>
+<dd>List available Fortran compilers.</dd>
+<dt><tt class="docutils literal"><span class="pre">--help-compiler</span></tt> [depreciated]</dt>
+<dd>List available Fortran compilers.</dd>
+<dt><tt class="docutils literal"><span class="pre">--fcompiler=&lt;Vendor&gt;</span></tt></dt>
+<dd>Specify Fortran compiler type by vendor.</dd>
+<dt><tt class="docutils literal"><span class="pre">--f77exec=&lt;path&gt;</span></tt></dt>
+<dd>Specify the path to F77 compiler</dd>
+<dt><tt class="docutils literal"><span class="pre">--fcompiler-exec=&lt;path&gt;</span></tt> [depreciated]</dt>
+<dd>Specify the path to F77 compiler</dd>
+<dt><tt class="docutils literal"><span class="pre">--f90exec=&lt;path&gt;</span></tt></dt>
+<dd>Specify the path to F90 compiler</dd>
+<dt><tt class="docutils literal"><span class="pre">--f90compiler-exec=&lt;path&gt;</span></tt> [depreciated]</dt>
+<dd>Specify the path to F90 compiler</dd>
+<dt><tt class="docutils literal"><span class="pre">--f77flags=&lt;string&gt;</span></tt></dt>
+<dd>Specify F77 compiler flags</dd>
+<dt><tt class="docutils literal"><span class="pre">--f90flags=&lt;string&gt;</span></tt></dt>
+<dd>Specify F90 compiler flags</dd>
+<dt><tt class="docutils literal"><span class="pre">--opt=&lt;string&gt;</span></tt></dt>
+<dd>Specify optimization flags</dd>
+<dt><tt class="docutils literal"><span class="pre">--arch=&lt;string&gt;</span></tt></dt>
+<dd>Specify architecture specific optimization flags</dd>
+<dt><tt class="docutils literal"><span class="pre">--noopt</span></tt></dt>
+<dd>Compile without optimization</dd>
+<dt><tt class="docutils literal"><span class="pre">--noarch</span></tt></dt>
+<dd>Compile without arch-dependent optimization</dd>
+<dt><tt class="docutils literal"><span class="pre">--debug</span></tt></dt>
+<dd>Compile with debugging information</dd>
+<dt><tt class="docutils literal"><span class="pre">-l&lt;libname&gt;</span></tt></dt>
+<dd>Use the library <tt class="docutils literal">&lt;libname&gt;</tt> when linking.</dd>
+<dt><tt class="docutils literal"><span class="pre">-D&lt;macro&gt;[=&lt;defn=1&gt;]</span></tt></dt>
+<dd>Define macro <tt class="docutils literal">&lt;macro&gt;</tt> as <tt class="docutils literal">&lt;defn&gt;</tt>.</dd>
+<dt><tt class="docutils literal"><span class="pre">-U&lt;macro&gt;</span></tt></dt>
+<dd>Define macro <tt class="docutils literal">&lt;macro&gt;</tt></dd>
+<dt><tt class="docutils literal"><span class="pre">-I&lt;dir&gt;</span></tt></dt>
+<dd>Append directory <tt class="docutils literal">&lt;dir&gt;</tt> to the list of directories searched for
+include files.</dd>
+<dt><tt class="docutils literal"><span class="pre">-L&lt;dir&gt;</span></tt></dt>
+<dd>Add directory <tt class="docutils literal">&lt;dir&gt;</tt> to the list of directories to  be  searched
+for <tt class="docutils literal"><span class="pre">-l</span></tt>.</dd>
+</dl>
+<p><tt class="docutils literal"><span class="pre">link-&lt;resource&gt;</span></tt></p>
+<blockquote>
+Link extension module with &lt;resource&gt; as defined by
+<tt class="docutils literal">numpy_distutils/system_info.py</tt>. E.g. to link with optimized
+LAPACK libraries (vecLib on MacOSX, ATLAS elsewhere), use
+<tt class="docutils literal"><span class="pre">--link-lapack_opt</span></tt>. See also <tt class="docutils literal"><span class="pre">--help-link</span></tt> switch.</blockquote>
+<p>When building an extension module, a combination of the following
+macros may be required for non-gcc Fortran compilers:</p>
+<pre class="literal-block">
+-DPREPEND_FORTRAN
+-DNO_APPEND_FORTRAN
+-DUPPERCASE_FORTRAN
+</pre>
+<p>To test the performance of F2PY generated interfaces, use
+<tt class="docutils literal"><span class="pre">-DF2PY_REPORT_ATEXIT</span></tt>. Then a report of various timings is
+printed out at the exit of Python. This feature may not work on
+all platforms, currently only Linux platform is supported.</p>
+<p>To see whether F2PY generated interface performs copies of array
+arguments, use <tt class="docutils literal"><span class="pre">-DF2PY_REPORT_ON_ARRAY_COPY=&lt;int&gt;</span></tt>. When the size
+of an array argument is larger than <tt class="docutils literal">&lt;int&gt;</tt>, a message about
+the coping is sent to <tt class="docutils literal">stderr</tt>.</p>
+</blockquote>
+<p>Other options:</p>
+<dl class="docutils">
+<dt><tt class="docutils literal"><span class="pre">-m</span> &lt;modulename&gt;</tt></dt>
+<dd><p class="first">Name of an extension module. Default is <tt class="docutils literal">untitled</tt>. Don't use this option
+if a signature file (<a href="#id17"><span class="problematic" id="id18">*</span></a>.pyf) is used.</p>
+<div class="last system-message" id="id17">
+<p class="system-message-title">System Message: WARNING/2 (<tt class="docutils">numpy/f2py/docs/usersguide/index.txt</tt>, line 1556); <em><a href="#id18">backlink</a></em></p>
+Inline emphasis start-string without end-string.</div>
+</dd>
+<dt><tt class="docutils literal"><span class="pre">--[no-]lower</span></tt></dt>
+<dd>Do [not] lower the cases in <tt class="docutils literal">&lt;fortran files&gt;</tt>.  By default,
+<tt class="docutils literal"><span class="pre">--lower</span></tt> is assumed with <tt class="docutils literal"><span class="pre">-h</span></tt> switch, and <tt class="docutils literal"><span class="pre">--no-lower</span></tt>
+without the <tt class="docutils literal"><span class="pre">-h</span></tt> switch.</dd>
+<dt><tt class="docutils literal"><span class="pre">--build-dir</span> &lt;dirname&gt;</tt></dt>
+<dd>All F2PY generated files are created in <tt class="docutils literal">&lt;dirname&gt;</tt>.  Default is
+<tt class="docutils literal">tempfile.mktemp()</tt>.</dd>
+<dt><tt class="docutils literal"><span class="pre">--quiet</span></tt></dt>
+<dd>Run quietly.</dd>
+<dt><tt class="docutils literal"><span class="pre">--verbose</span></tt></dt>
+<dd>Run with extra verbosity.</dd>
+<dt><tt class="docutils literal"><span class="pre">-v</span></tt></dt>
+<dd>Print f2py version ID and exit.</dd>
+</dl>
+<p>Execute <tt class="docutils literal">f2py</tt> without any options to get an up-to-date list of
+available options.</p>
+</div>
+<div class="section" id="python-module-f2py2e">
+<h2><a class="toc-backref" href="#id46">5.2&nbsp;&nbsp;&nbsp;Python module <tt class="docutils literal">f2py2e</tt></a></h2>
+<div class="topic">
+<p class="topic-title first">Warning</p>
+<p>The current Python interface to <tt class="docutils literal">f2py2e</tt> module is not mature and
+may change in future depending on users needs.</p>
+</div>
+<p>The following functions are provided by the <tt class="docutils literal">f2py2e</tt> module:</p>
+<dl class="docutils">
+<dt><tt class="docutils literal"><span class="pre">run_main(&lt;list&gt;)</span></tt></dt>
+<dd><p class="first">Equivalent to running:</p>
+<pre class="literal-block">
+f2py &lt;args&gt;
+</pre>
+<p>where <tt class="docutils literal"><span class="pre">&lt;args&gt;=string.join(&lt;list&gt;,'</span> ')</tt>, but in Python.  Unless
+<tt class="docutils literal"><span class="pre">-h</span></tt> is used, this function returns a dictionary containing
+information on generated modules and their dependencies on source
+files.  For example, the command <tt class="docutils literal">f2py <span class="pre">-m</span> scalar scalar.f</tt> can be
+executed from Python as follows</p>
+<pre class="literal-block">
+&gt;&gt;&gt; import f2py2e
+&gt;&gt;&gt; r=f2py2e.run_main(['-m','scalar','docs/usersguide/scalar.f'])
+Reading fortran codes...
+        Reading file 'docs/usersguide/scalar.f'
+Post-processing...
+        Block: scalar
+                        Block: FOO
+Building modules...
+        Building module &quot;scalar&quot;...
+        Wrote C/API module &quot;scalar&quot; to file &quot;./scalarmodule.c&quot;
+&gt;&gt;&gt; print r
+{'scalar': {'h': ['/home/users/pearu/src_cvs/f2py2e/src/fortranobject.h'],
+         'csrc': ['./scalarmodule.c', 
+                  '/home/users/pearu/src_cvs/f2py2e/src/fortranobject.c']}}
+
+</pre>
+<p class="last">You cannot build extension modules with this function, that is,
+using <tt class="docutils literal"><span class="pre">-c</span></tt> is not allowed. Use <tt class="docutils literal">compile</tt> command instead, see
+below.</p>
+</dd>
+</dl>
+<p><tt class="docutils literal">compile(source, <span class="pre">modulename='untitled',</span> <span class="pre">extra_args='',</span> verbose=1, source_fn=None)</tt></p>
+<blockquote>
+<p>Build extension module from Fortran 77 source string <tt class="docutils literal">source</tt>.
+Return 0 if successful.
+Note that this function actually calls <tt class="docutils literal">f2py <span class="pre">-c</span> ..</tt> from shell to
+ensure safety of the current Python process.
+For example,</p>
+<pre class="literal-block">
+&gt;&gt;&gt; import f2py2e
+&gt;&gt;&gt; fsource = '''
+...       subroutine foo
+...       print*, &quot;Hello world!&quot;
+...       end 
+... '''
+&gt;&gt;&gt; f2py2e.compile(fsource,modulename='hello',verbose=0)
+0
+&gt;&gt;&gt; import hello
+&gt;&gt;&gt; hello.foo()
+ Hello world!
+
+</pre>
+</blockquote>
+</div>
+</div>
+<div class="section" id="using-numpy-distutils">
+<h1><a class="toc-backref" href="#id47">6&nbsp;&nbsp;&nbsp;Using <tt class="docutils literal">numpy_distutils</tt></a></h1>
+<p><tt class="docutils literal">numpy_distutils</tt> is part of the <a class="reference external" href="http://www.numpy.org/">SciPy</a> project and aims to extend
+standard Python <tt class="docutils literal">distutils</tt> to deal with Fortran sources and F2PY
+signature files, e.g. compile Fortran sources, call F2PY to construct
+extension modules, etc.</p>
+<div class="topic">
+<p class="topic-title first">Example</p>
+<p>Consider the following <a class="reference external" href="setup_example.py">setup file</a>:</p>
+<pre class="literal-block">
+#!/usr/bin/env python
+# File: setup_example.py
+
+from numpy_distutils.core import Extension
+
+ext1 = Extension(name = 'scalar',
+                 sources = ['scalar.f'])
+ext2 = Extension(name = 'fib2',
+                 sources = ['fib2.pyf','fib1.f'])
+
+if __name__ == &quot;__main__&quot;:
+    from numpy_distutils.core import setup
+    setup(name = 'f2py_example',
+          description       = &quot;F2PY Users Guide examples&quot;,
+          author            = &quot;Pearu Peterson&quot;,
+          author_email      = &quot;pearu&#64;cens.ioc.ee&quot;,
+          ext_modules = [ext1,ext2]
+          )
+# End of setup_example.py
+
+</pre>
+<p>Running</p>
+<pre class="literal-block">
+python setup_example.py build
+</pre>
+<p>will build two extension modules <tt class="docutils literal">scalar</tt> and <tt class="docutils literal">fib2</tt> to the
+build directory.</p>
+</div>
+<p><tt class="docutils literal">numpy_distutils</tt> extends <tt class="docutils literal">distutils</tt> with the following features:</p>
+<ul>
+<li><p class="first"><tt class="docutils literal">Extension</tt> class argument <tt class="docutils literal">sources</tt> may contain Fortran source
+files. In addition, the list <tt class="docutils literal">sources</tt> may contain at most one
+F2PY signature file, and then the name of an Extension module must
+match with the <tt class="docutils literal">&lt;modulename&gt;</tt> used in signature file.  It is
+assumed that an F2PY signature file contains exactly one <tt class="docutils literal">python
+module</tt> block.</p>
+<p>If <tt class="docutils literal">sources</tt> does not contain a signature files, then F2PY is used
+to scan Fortran source files for routine signatures to construct the
+wrappers to Fortran codes.</p>
+<p>Additional options to F2PY process can be given using <tt class="docutils literal">Extension</tt>
+class argument <tt class="docutils literal">f2py_options</tt>.</p>
+</li>
+</ul>
+<div class="section" id="numpy-distutils-0-2-2-and-up">
+<h2><a class="toc-backref" href="#id48">6.1&nbsp;&nbsp;&nbsp;<tt class="docutils literal">numpy_distutils</tt> 0.2.2 and up</a></h2>
+<ul>
+<li><p class="first">The following new <tt class="docutils literal">distutils</tt> commands are defined:</p>
+<dl class="docutils">
+<dt><tt class="docutils literal">build_src</tt></dt>
+<dd><p class="first last">to construct Fortran wrapper extension modules, among many other things.</p>
+</dd>
+<dt><tt class="docutils literal">config_fc</tt></dt>
+<dd><p class="first last">to change Fortran compiler options</p>
+</dd>
+</dl>
+<p>as well as <tt class="docutils literal">build_ext</tt> and  <tt class="docutils literal">build_clib</tt> commands are enhanced
+to support Fortran sources.</p>
+<p>Run</p>
+<pre class="literal-block">
+python &lt;setup.py file&gt; config_fc build_src build_ext --help
+</pre>
+<p>to see available options for these commands.</p>
+</li>
+<li><p class="first">When building Python packages containing Fortran sources, then one
+can choose different Fortran compilers by using <tt class="docutils literal">build_ext</tt>
+command option <tt class="docutils literal"><span class="pre">--fcompiler=&lt;Vendor&gt;</span></tt>. Here <tt class="docutils literal">&lt;Vendor&gt;</tt> can be one of the
+following names:</p>
+<pre class="literal-block">
+absoft sun mips intel intelv intele intelev nag compaq compaqv gnu vast pg hpux
+</pre>
+<p>See <tt class="docutils literal">numpy_distutils/fcompiler.py</tt> for up-to-date list of
+supported compilers or run</p>
+<pre class="literal-block">
+f2py -c --help-fcompiler
+</pre>
+</li>
+</ul>
+</div>
+<div class="section" id="numpy-distutils-pre-0-2-2">
+<h2><a class="toc-backref" href="#id49">6.2&nbsp;&nbsp;&nbsp;<tt class="docutils literal">numpy_distutils</tt> pre 0.2.2</a></h2>
+<ul>
+<li><p class="first">The following new <tt class="docutils literal">distutils</tt> commands are defined:</p>
+<dl class="docutils">
+<dt><tt class="docutils literal">build_flib</tt></dt>
+<dd><p class="first last">to build f77/f90 libraries used by Python extensions;</p>
+</dd>
+<dt><tt class="docutils literal">run_f2py</tt></dt>
+<dd><p class="first last">to construct Fortran wrapper extension modules.</p>
+</dd>
+</dl>
+<p>Run</p>
+<pre class="literal-block">
+python &lt;setup.py file&gt; build_flib run_f2py --help
+</pre>
+<p>to see available options for these commands.</p>
+</li>
+<li><p class="first">When building Python packages containing Fortran sources, then one
+can choose different Fortran compilers either by using <tt class="docutils literal">build_flib</tt>
+command option <tt class="docutils literal"><span class="pre">--fcompiler=&lt;Vendor&gt;</span></tt> or by defining environment
+variable <tt class="docutils literal"><span class="pre">FC_VENDOR=&lt;Vendor&gt;</span></tt>. Here <tt class="docutils literal">&lt;Vendor&gt;</tt> can be one of the
+following names:</p>
+<pre class="literal-block">
+Absoft Sun SGI Intel Itanium NAG Compaq Digital Gnu VAST PG
+</pre>
+<p>See <tt class="docutils literal">numpy_distutils/command/build_flib.py</tt> for up-to-date list of
+supported compilers.</p>
+</li>
+</ul>
+</div>
+</div>
+<div class="section" id="extended-f2py-usages">
+<h1><a class="toc-backref" href="#id50">7&nbsp;&nbsp;&nbsp;Extended F2PY usages</a></h1>
+<div class="section" id="adding-self-written-functions-to-f2py-generated-modules">
+<h2><a class="toc-backref" href="#id51">7.1&nbsp;&nbsp;&nbsp;Adding self-written functions to F2PY generated modules</a></h2>
+<p>Self-written Python C/API functions can be defined inside
+signature files using <tt class="docutils literal">usercode</tt> and <tt class="docutils literal">pymethoddef</tt> statements
+(they must be used inside the <tt class="docutils literal">python module</tt> block). For
+example, the following signature file <tt class="docutils literal">spam.pyf</tt></p>
+<pre class="literal-block">
+!    -*- f90 -*-
+python module spam
+    usercode '''
+  static char doc_spam_system[] = &quot;Execute a shell command.&quot;;
+  static PyObject *spam_system(PyObject *self, PyObject *args)
+  {
+    char *command;
+    int sts;
+
+    if (!PyArg_ParseTuple(args, &quot;s&quot;, &amp;command))
+        return NULL;
+    sts = system(command);
+    return Py_BuildValue(&quot;i&quot;, sts);
+  }
+    '''
+    pymethoddef '''
+    {&quot;system&quot;,  spam_system, METH_VARARGS, doc_spam_system},
+    '''
+end python module spam
+
+</pre>
+<p>wraps the C library function <tt class="docutils literal">system()</tt>:</p>
+<pre class="literal-block">
+f2py -c spam.pyf
+</pre>
+<p>In Python:</p>
+<pre class="literal-block">
+&gt;&gt;&gt; import spam
+&gt;&gt;&gt; status = spam.system('whoami')
+pearu
+&gt;&gt; status = spam.system('blah')
+sh: line 1: blah: command not found
+</pre>
+</div>
+<div class="section" id="modifying-the-dictionary-of-a-f2py-generated-module">
+<h2><a class="toc-backref" href="#id52">7.2&nbsp;&nbsp;&nbsp;Modifying the dictionary of a F2PY generated module</a></h2>
+<p>The following example illustrates how to add an user-defined
+variables to a F2PY generated extension module. Given the following
+signature file</p>
+<pre class="literal-block">
+!    -*- f90 -*-
+python module var
+  usercode '''
+    int BAR = 5;
+  '''
+  interface
+    usercode '''
+      PyDict_SetItemString(d,&quot;BAR&quot;,PyInt_FromLong(BAR));
+    '''
+  end interface
+end python module
+
+</pre>
+<p>compile it as <tt class="docutils literal">f2py <span class="pre">-c</span> var.pyf</tt>.</p>
+<p>Notice that the second <tt class="docutils literal">usercode</tt> statement must be defined inside
+an <tt class="docutils literal">interface</tt> block and where the module dictionary is available through
+the variable <tt class="docutils literal">d</tt> (see <tt class="docutils literal">f2py var.pyf</tt>-generated <tt class="docutils literal">varmodule.c</tt> for
+additional details).</p>
+<p>In Python:</p>
+<pre class="literal-block">
+&gt;&gt;&gt; import var
+&gt;&gt;&gt; var.BAR
+5
+</pre>
+<!-- References
+========== -->
+</div>
+</div>
+</div>
+</body>
+</html>
